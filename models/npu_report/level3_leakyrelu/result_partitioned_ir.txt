================================================================================
 Partitioned Relay IR (with Ethos-N annotations)
================================================================================

#[version = "0.0.5"]
def @main(%v_param_130: Tensor[(1, 2, 8400), int8] /* ty=Tensor[(1, 2, 8400), int8] span=tfl.pseudo_qconst1:0:0 */, %serving_default_images:0: Tensor[(1, 640, 640, 3), int8] /* ty=Tensor[(1, 640, 640, 3), int8] span=serving_default_images:0:0:0 */, %v_param_1: Tensor[(3, 3, 3, 16), int8] /* ty=Tensor[(3, 3, 3, 16), int8] span=tfl.pseudo_qconst130:0:0 */, %v_param_2: Tensor[(16), int32] /* ty=Tensor[(16), int32] span=tfl.pseudo_qconst129:0:0 */, %v_param_3: Tensor[(3, 3, 16, 32), int8] /* ty=Tensor[(3, 3, 16, 32), int8] span=tfl.pseudo_qconst128:0:0 */, %v_param_4: Tensor[(32), int32] /* ty=Tensor[(32), int32] span=tfl.pseudo_qconst127:0:0 */, %v_param_5: Tensor[(1, 1, 32, 64), int8] /* ty=Tensor[(1, 1, 32, 64), int8] span=tfl.pseudo_qconst126:0:0 */, %v_param_6: Tensor[(64), int32] /* ty=Tensor[(64), int32] span=tfl.pseudo_qconst125:0:0 */, %v_param_7: Tensor[(3, 3, 32, 32), int8] /* ty=Tensor[(3, 3, 32, 32), int8] span=tfl.pseudo_qconst124:0:0 */, %v_param_8: Tensor[(32), int32] /* ty=Tensor[(32), int32] span=tfl.pseudo_qconst123:0:0 */, %v_param_9: Tensor[(3, 3, 32, 32), int8] /* ty=Tensor[(3, 3, 32, 32), int8] span=tfl.pseudo_qconst122:0:0 */, %v_param_10: Tensor[(32), int32] /* ty=Tensor[(32), int32] span=tfl.pseudo_qconst121:0:0 */, %v_param_11: Tensor[(1, 1, 96, 64), int8] /* ty=Tensor[(1, 1, 96, 64), int8] span=tfl.pseudo_qconst120:0:0 */, %v_param_12: Tensor[(64), int32] /* ty=Tensor[(64), int32] span=tfl.pseudo_qconst119:0:0 */, %v_param_13: Tensor[(3, 3, 64, 64), int8] /* ty=Tensor[(3, 3, 64, 64), int8] span=tfl.pseudo_qconst118:0:0 */, %v_param_14: Tensor[(64), int32] /* ty=Tensor[(64), int32] span=tfl.pseudo_qconst117:0:0 */, %v_param_15: Tensor[(1, 1, 64, 128), int8] /* ty=Tensor[(1, 1, 64, 128), int8] span=tfl.pseudo_qconst116:0:0 */, %v_param_16: Tensor[(128), int32] /* ty=Tensor[(128), int32] span=tfl.pseudo_qconst115:0:0 */, %v_param_17: Tensor[(3, 3, 64, 64), int8] /* ty=Tensor[(3, 3, 64, 64), int8] span=tfl.pseudo_qconst114:0:0 */, %v_param_18: Tensor[(64), int32] /* ty=Tensor[(64), int32] span=tfl.pseudo_qconst113:0:0 */, %v_param_19: Tensor[(3, 3, 64, 64), int8] /* ty=Tensor[(3, 3, 64, 64), int8] span=tfl.pseudo_qconst112:0:0 */, %v_param_20: Tensor[(64), int32] /* ty=Tensor[(64), int32] span=tfl.pseudo_qconst111:0:0 */, %v_param_21: Tensor[(1, 1, 192, 128), int8] /* ty=Tensor[(1, 1, 192, 128), int8] span=tfl.pseudo_qconst110:0:0 */, %v_param_22: Tensor[(128), int32] /* ty=Tensor[(128), int32] span=tfl.pseudo_qconst109:0:0 */, %v_param_23: Tensor[(3, 3, 128, 128), int8] /* ty=Tensor[(3, 3, 128, 128), int8] span=tfl.pseudo_qconst108:0:0 */, %v_param_24: Tensor[(128), int32] /* ty=Tensor[(128), int32] span=tfl.pseudo_qconst107:0:0 */, %v_param_25: Tensor[(1, 1, 128, 128), int8] /* ty=Tensor[(1, 1, 128, 128), int8] span=tfl.pseudo_qconst106:0:0 */, %v_param_26: Tensor[(128), int32] /* ty=Tensor[(128), int32] span=tfl.pseudo_qconst105:0:0 */, %v_param_27: Tensor[(3, 3, 64, 64), int8] /* ty=Tensor[(3, 3, 64, 64), int8] span=tfl.pseudo_qconst104:0:0 */, %v_param_28: Tensor[(64), int32] /* ty=Tensor[(64), int32] span=tfl.pseudo_qconst103:0:0 */, %v_param_29: Tensor[(3, 3, 64, 64), int8] /* ty=Tensor[(3, 3, 64, 64), int8] span=tfl.pseudo_qconst102:0:0 */, %v_param_30: Tensor[(64), int32] /* ty=Tensor[(64), int32] span=tfl.pseudo_qconst101:0:0 */, %v_param_31: Tensor[(1, 1, 192, 128), int8] /* ty=Tensor[(1, 1, 192, 128), int8] span=tfl.pseudo_qconst100:0:0 */, %v_param_32: Tensor[(128), int32] /* ty=Tensor[(128), int32] span=tfl.pseudo_qconst99:0:0 */, %v_param_33: Tensor[(3, 3, 128, 256), int8] /* ty=Tensor[(3, 3, 128, 256), int8] span=tfl.pseudo_qconst98:0:0 */, %v_param_34: Tensor[(256), int32] /* ty=Tensor[(256), int32] span=tfl.pseudo_qconst97:0:0 */, %v_param_35: Tensor[(1, 1, 256, 256), int8] /* ty=Tensor[(1, 1, 256, 256), int8] span=tfl.pseudo_qconst96:0:0 */, %v_param_36: Tensor[(256), int32] /* ty=Tensor[(256), int32] span=tfl.pseudo_qconst95:0:0 */, %v_param_37: Tensor[(3, 3, 128, 128), int8] /* ty=Tensor[(3, 3, 128, 128), int8] span=tfl.pseudo_qconst94:0:0 */, %v_param_38: Tensor[(128), int32] /* ty=Tensor[(128), int32] span=tfl.pseudo_qconst93:0:0 */, %v_param_39: Tensor[(3, 3, 128, 128), int8] /* ty=Tensor[(3, 3, 128, 128), int8] span=tfl.pseudo_qconst92:0:0 */, %v_param_40: Tensor[(128), int32] /* ty=Tensor[(128), int32] span=tfl.pseudo_qconst91:0:0 */, %v_param_41: Tensor[(1, 1, 384, 256), int8] /* ty=Tensor[(1, 1, 384, 256), int8] span=tfl.pseudo_qconst90:0:0 */, %v_param_42: Tensor[(256), int32] /* ty=Tensor[(256), int32] span=tfl.pseudo_qconst89:0:0 */, %v_param_43: Tensor[(1, 1, 256, 128), int8] /* ty=Tensor[(1, 1, 256, 128), int8] span=tfl.pseudo_qconst88:0:0 */, %v_param_44: Tensor[(128), int32] /* ty=Tensor[(128), int32] span=tfl.pseudo_qconst87:0:0 */, %v_param_45: Tensor[(1, 1, 512, 256), int8] /* ty=Tensor[(1, 1, 512, 256), int8] span=tfl.pseudo_qconst86:0:0 */, %v_param_46: Tensor[(256), int32] /* ty=Tensor[(256), int32] span=tfl.pseudo_qconst85:0:0 */, %v_param_47: Tensor[(1, 1, 256, 256), int8] /* ty=Tensor[(1, 1, 256, 256), int8] span=tfl.pseudo_qconst84:0:0 */, %v_param_48: Tensor[(256), int32] /* ty=Tensor[(256), int32] span=tfl.pseudo_qconst83:0:0 */, %v_param_49: Tensor[(3, 3, 128, 128), int8] /* ty=Tensor[(3, 3, 128, 128), int8] span=tfl.pseudo_qconst82:0:0 */, %v_param_50: Tensor[(128), int32] /* ty=Tensor[(128), int32] span=tfl.pseudo_qconst81:0:0 */, %v_param_51: Tensor[(3, 3, 128, 128), int8] /* ty=Tensor[(3, 3, 128, 128), int8] span=tfl.pseudo_qconst80:0:0 */, %v_param_52: Tensor[(128), int32] /* ty=Tensor[(128), int32] span=tfl.pseudo_qconst79:0:0 */, %v_param_53: Tensor[(1, 1, 384, 256), int8] /* ty=Tensor[(1, 1, 384, 256), int8] span=tfl.pseudo_qconst78:0:0 */, %v_param_54: Tensor[(256), int32] /* ty=Tensor[(256), int32] span=tfl.pseudo_qconst77:0:0 */, %v_param_55: Tensor[(1, 1, 384, 128), int8] /* ty=Tensor[(1, 1, 384, 128), int8] span=tfl.pseudo_qconst76:0:0 */, %v_param_56: Tensor[(128), int32] /* ty=Tensor[(128), int32] span=tfl.pseudo_qconst75:0:0 */, %v_param_57: Tensor[(3, 3, 64, 64), int8] /* ty=Tensor[(3, 3, 64, 64), int8] span=tfl.pseudo_qconst74:0:0 */, %v_param_58: Tensor[(64), int32] /* ty=Tensor[(64), int32] span=tfl.pseudo_qconst73:0:0 */, %v_param_59: Tensor[(3, 3, 64, 64), int8] /* ty=Tensor[(3, 3, 64, 64), int8] span=tfl.pseudo_qconst72:0:0 */, %v_param_60: Tensor[(64), int32] /* ty=Tensor[(64), int32] span=tfl.pseudo_qconst71:0:0 */, %v_param_61: Tensor[(1, 1, 192, 128), int8] /* ty=Tensor[(1, 1, 192, 128), int8] span=tfl.pseudo_qconst70:0:0 */, %v_param_62: Tensor[(128), int32] /* ty=Tensor[(128), int32] span=tfl.pseudo_qconst69:0:0 */, %v_param_63: Tensor[(1, 1, 256, 64), int8] /* ty=Tensor[(1, 1, 256, 64), int8] span=tfl.pseudo_qconst68:0:0 */, %v_param_64: Tensor[(64), int32] /* ty=Tensor[(64), int32] span=tfl.pseudo_qconst67:0:0 */, %v_param_65: Tensor[(3, 3, 32, 32), int8] /* ty=Tensor[(3, 3, 32, 32), int8] span=tfl.pseudo_qconst66:0:0 */, %v_param_66: Tensor[(32), int32] /* ty=Tensor[(32), int32] span=tfl.pseudo_qconst65:0:0 */, %v_param_67: Tensor[(3, 3, 32, 32), int8] /* ty=Tensor[(3, 3, 32, 32), int8] span=tfl.pseudo_qconst64:0:0 */, %v_param_68: Tensor[(32), int32] /* ty=Tensor[(32), int32] span=tfl.pseudo_qconst63:0:0 */, %v_param_69: Tensor[(1, 1, 96, 64), int8] /* ty=Tensor[(1, 1, 96, 64), int8] span=tfl.pseudo_qconst62:0:0 */, %v_param_70: Tensor[(64), int32] /* ty=Tensor[(64), int32] span=tfl.pseudo_qconst61:0:0 */, %v_param_115: Tensor[(3, 3, 64, 64), int8] /* ty=Tensor[(3, 3, 64, 64), int8] span=tfl.pseudo_qconst16:0:0 */, %v_param_116: Tensor[(64), int32] /* ty=Tensor[(64), int32] span=tfl.pseudo_qconst15:0:0 */, %v_param_117: Tensor[(3, 3, 64, 64), int8] /* ty=Tensor[(3, 3, 64, 64), int8] span=tfl.pseudo_qconst14:0:0 */, %v_param_118: Tensor[(64), int32] /* ty=Tensor[(64), int32] span=tfl.pseudo_qconst13:0:0 */, %v_param_119: Tensor[(1, 1, 64, 64), int8] /* ty=Tensor[(1, 1, 64, 64), int8] span=tfl.pseudo_qconst12:0:0 */, %v_param_120: Tensor[(64), int32] /* ty=Tensor[(64), int32] span=tfl.pseudo_qconst11:0:0 */, %v_param_121: Tensor[(3, 3, 64, 64), int8] /* ty=Tensor[(3, 3, 64, 64), int8] span=tfl.pseudo_qconst10:0:0 */, %v_param_122: Tensor[(64), int32] /* ty=Tensor[(64), int32] span=tfl.pseudo_qconst9:0:0 */, %v_param_123: Tensor[(3, 3, 64, 64), int8] /* ty=Tensor[(3, 3, 64, 64), int8] span=tfl.pseudo_qconst8:0:0 */, %v_param_124: Tensor[(64), int32] /* ty=Tensor[(64), int32] span=tfl.pseudo_qconst7:0:0 */, %v_param_125: Tensor[(1, 1, 64, 15), int8] /* ty=Tensor[(1, 1, 64, 15), int8] span=tfl.pseudo_qconst6:0:0 */, %v_param_126: Tensor[(15), int32] /* ty=Tensor[(15), int32] span=tfl.pseudo_qconst5:0:0 */, %v_param_71: Tensor[(3, 3, 64, 64), int8] /* ty=Tensor[(3, 3, 64, 64), int8] span=tfl.pseudo_qconst60:0:0 */, %v_param_72: Tensor[(64), int32] /* ty=Tensor[(64), int32] span=tfl.pseudo_qconst59:0:0 */, %v_param_73: Tensor[(1, 1, 192, 128), int8] /* ty=Tensor[(1, 1, 192, 128), int8] span=tfl.pseudo_qconst58:0:0 */, %v_param_74: Tensor[(128), int32] /* ty=Tensor[(128), int32] span=tfl.pseudo_qconst57:0:0 */, %v_param_75: Tensor[(3, 3, 64, 64), int8] /* ty=Tensor[(3, 3, 64, 64), int8] span=tfl.pseudo_qconst56:0:0 */, %v_param_76: Tensor[(64), int32] /* ty=Tensor[(64), int32] span=tfl.pseudo_qconst55:0:0 */, %v_param_77: Tensor[(3, 3, 64, 64), int8] /* ty=Tensor[(3, 3, 64, 64), int8] span=tfl.pseudo_qconst54:0:0 */, %v_param_78: Tensor[(64), int32] /* ty=Tensor[(64), int32] span=tfl.pseudo_qconst53:0:0 */, %v_param_79: Tensor[(1, 1, 192, 128), int8] /* ty=Tensor[(1, 1, 192, 128), int8] span=tfl.pseudo_qconst52:0:0 */, %v_param_80: Tensor[(128), int32] /* ty=Tensor[(128), int32] span=tfl.pseudo_qconst51:0:0 */, %v_param_103: Tensor[(3, 3, 128, 64), int8] /* ty=Tensor[(3, 3, 128, 64), int8] span=tfl.pseudo_qconst28:0:0 */, %v_param_104: Tensor[(64), int32] /* ty=Tensor[(64), int32] span=tfl.pseudo_qconst27:0:0 */, %v_param_105: Tensor[(3, 3, 64, 64), int8] /* ty=Tensor[(3, 3, 64, 64), int8] span=tfl.pseudo_qconst26:0:0 */, %v_param_106: Tensor[(64), int32] /* ty=Tensor[(64), int32] span=tfl.pseudo_qconst25:0:0 */, %v_param_107: Tensor[(1, 1, 64, 64), int8] /* ty=Tensor[(1, 1, 64, 64), int8] span=tfl.pseudo_qconst24:0:0 */, %v_param_108: Tensor[(64), int32] /* ty=Tensor[(64), int32] span=tfl.pseudo_qconst23:0:0 */, %v_param_109: Tensor[(3, 3, 128, 64), int8] /* ty=Tensor[(3, 3, 128, 64), int8] span=tfl.pseudo_qconst22:0:0 */, %v_param_110: Tensor[(64), int32] /* ty=Tensor[(64), int32] span=tfl.pseudo_qconst21:0:0 */, %v_param_111: Tensor[(3, 3, 64, 64), int8] /* ty=Tensor[(3, 3, 64, 64), int8] span=tfl.pseudo_qconst20:0:0 */, %v_param_112: Tensor[(64), int32] /* ty=Tensor[(64), int32] span=tfl.pseudo_qconst19:0:0 */, %v_param_113: Tensor[(1, 1, 64, 15), int8] /* ty=Tensor[(1, 1, 64, 15), int8] span=tfl.pseudo_qconst18:0:0 */, %v_param_114: Tensor[(15), int32] /* ty=Tensor[(15), int32] span=tfl.pseudo_qconst17:0:0 */, %v_param_81: Tensor[(3, 3, 128, 128), int8] /* ty=Tensor[(3, 3, 128, 128), int8] span=tfl.pseudo_qconst50:0:0 */, %v_param_82: Tensor[(128), int32] /* ty=Tensor[(128), int32] span=tfl.pseudo_qconst49:0:0 */, %v_param_83: Tensor[(1, 1, 384, 256), int8] /* ty=Tensor[(1, 1, 384, 256), int8] span=tfl.pseudo_qconst48:0:0 */, %v_param_84: Tensor[(256), int32] /* ty=Tensor[(256), int32] span=tfl.pseudo_qconst47:0:0 */, %v_param_85: Tensor[(3, 3, 128, 128), int8] /* ty=Tensor[(3, 3, 128, 128), int8] span=tfl.pseudo_qconst46:0:0 */, %v_param_86: Tensor[(128), int32] /* ty=Tensor[(128), int32] span=tfl.pseudo_qconst45:0:0 */, %v_param_87: Tensor[(3, 3, 128, 128), int8] /* ty=Tensor[(3, 3, 128, 128), int8] span=tfl.pseudo_qconst44:0:0 */, %v_param_88: Tensor[(128), int32] /* ty=Tensor[(128), int32] span=tfl.pseudo_qconst43:0:0 */, %v_param_89: Tensor[(1, 1, 384, 256), int8] /* ty=Tensor[(1, 1, 384, 256), int8] span=tfl.pseudo_qconst42:0:0 */, %v_param_90: Tensor[(256), int32] /* ty=Tensor[(256), int32] span=tfl.pseudo_qconst41:0:0 */, %v_param_91: Tensor[(3, 3, 256, 64), int8] /* ty=Tensor[(3, 3, 256, 64), int8] span=tfl.pseudo_qconst40:0:0 */, %v_param_92: Tensor[(64), int32] /* ty=Tensor[(64), int32] span=tfl.pseudo_qconst39:0:0 */, %v_param_93: Tensor[(3, 3, 64, 64), int8] /* ty=Tensor[(3, 3, 64, 64), int8] span=tfl.pseudo_qconst38:0:0 */, %v_param_94: Tensor[(64), int32] /* ty=Tensor[(64), int32] span=tfl.pseudo_qconst37:0:0 */, %v_param_95: Tensor[(1, 1, 64, 64), int8] /* ty=Tensor[(1, 1, 64, 64), int8] span=tfl.pseudo_qconst36:0:0 */, %v_param_96: Tensor[(64), int32] /* ty=Tensor[(64), int32] span=tfl.pseudo_qconst35:0:0 */, %v_param_97: Tensor[(3, 3, 256, 64), int8] /* ty=Tensor[(3, 3, 256, 64), int8] span=tfl.pseudo_qconst34:0:0 */, %v_param_98: Tensor[(64), int32] /* ty=Tensor[(64), int32] span=tfl.pseudo_qconst33:0:0 */, %v_param_99: Tensor[(3, 3, 64, 64), int8] /* ty=Tensor[(3, 3, 64, 64), int8] span=tfl.pseudo_qconst32:0:0 */, %v_param_100: Tensor[(64), int32] /* ty=Tensor[(64), int32] span=tfl.pseudo_qconst31:0:0 */, %v_param_101: Tensor[(1, 1, 64, 15), int8] /* ty=Tensor[(1, 1, 64, 15), int8] span=tfl.pseudo_qconst30:0:0 */, %v_param_102: Tensor[(15), int32] /* ty=Tensor[(15), int32] span=tfl.pseudo_qconst29:0:0 */, %v_param_127: Tensor[(1, 1, 16, 1), int8] /* ty=Tensor[(1, 1, 16, 1), int8] span=tfl.pseudo_qconst4:0:0 */, %v_param_128: Tensor[(1), int32] /* ty=Tensor[(1), int32] span=tfl.pseudo_qconst3:0:0 */, %v_param_129: Tensor[(1, 4, 8400), int8] /* ty=Tensor[(1, 4, 8400), int8] span=tfl.pseudo_qconst2:0:0 */, %v_param_131: Tensor[(1, 2, 8400), int8] /* ty=Tensor[(1, 2, 8400), int8] span=tfl.pseudo_qconst1:0:0 */, %v_param_132: int8 /* ty=int8 span=tfl.pseudo_qconst:0:0 */, output_tensor_names=["PartitionedCall_0"]) -> Tensor[(1, 19, 8400), int8] {
  %0 = nn.pad(%serving_default_images:0, -128f /* ty=float32 span=model_10/tf.compat.v1.pad/Pad:0:0 */, pad_width=[[0, 0], [1, 1], [1, 1], [0, 0]]) /* ty=Tensor[(1, 642, 642, 3), int8] span=model_10/tf.compat.v1.pad/Pad:0:0 */;
  %1 = qnn.conv2d(%0, %v_param_1, -128 /* ty=int32 span=model_10/tf.math.add/Add;model_10/tf.nn.convolution/convolution;Const_177:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add/Add;model_10/tf.nn.convolution/convolution;Const_177:0:0 */, 0.00392157f /* ty=float32 span=model_10/tf.math.add/Add;model_10/tf.nn.convolution/convolution;Const_177:0:0 */, meta[relay.Constant][0] /* ty=Tensor[(16), float32] span=model_10/tf.math.add/Add;model_10/tf.nn.convolution/convolution;Const_177:0:0 */, strides=[2, 2], padding=[0, 0, 0, 0], channels=16, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 320, 320, 16), int32] span=model_10/tf.math.add/Add;model_10/tf.nn.convolution/convolution;Const_177:0:0 */;
  %2 = nn.bias_add(%1, %v_param_2, axis=3) /* ty=Tensor[(1, 320, 320, 16), int32] span=model_10/tf.math.add/Add;model_10/tf.nn.convolution/convolution;Const_177:0:0 */;
  %3 = qnn.requantize(%2, meta[relay.Constant][1] /* ty=Tensor[(16), float32] span=model_10/tf.math.add/Add;model_10/tf.nn.convolution/convolution;Const_177:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add/Add;model_10/tf.nn.convolution/convolution;Const_177:0:0 */, 0.0933233f /* ty=float32 span=model_10/tf.math.add/Add;model_10/tf.nn.convolution/convolution;Const_177:0:0 */, 2 /* ty=int32 span=model_10/tf.math.add/Add;model_10/tf.nn.convolution/convolution;Const_177:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 320, 320, 16), int8] span=model_10/tf.math.add/Add;model_10/tf.nn.convolution/convolution;Const_177:0:0 */;
  %4 = qnn.dequantize(%3, 0.0933233f /* ty=float32 span=model_10/tf.math.sigmoid/Sigmoid:0:0 */, 2 /* ty=int32 span=model_10/tf.math.sigmoid/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 320, 320, 16), float32] span=model_10/tf.math.sigmoid/Sigmoid:0:0 */;
  %5 = sigmoid(%4) /* ty=Tensor[(1, 320, 320, 16), float32] span=model_10/tf.math.sigmoid/Sigmoid:0:0 */;
  %6 = qnn.quantize(%5, 0.00390625f /* ty=float32 span=model_10/tf.math.sigmoid/Sigmoid:0:0 */, -128 /* ty=int32 span=model_10/tf.math.sigmoid/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 320, 320, 16), int8] span=model_10/tf.math.sigmoid/Sigmoid:0:0 */;
  %7 = qnn.mul(%3, %6, 0.0933233f /* ty=float32 span=model_10/tf.math.multiply_3/Mul:0:0 */, 2 /* ty=int32 span=model_10/tf.math.multiply_3/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_10/tf.math.multiply_3/Mul:0:0 */, -128 /* ty=int32 span=model_10/tf.math.multiply_3/Mul:0:0 */, 0.0467829f /* ty=float32 span=model_10/tf.math.multiply_3/Mul:0:0 */, -122 /* ty=int32 span=model_10/tf.math.multiply_3/Mul:0:0 */) /* ty=Tensor[(1, 320, 320, 16), int8] span=model_10/tf.math.multiply_3/Mul:0:0 */;
  %8 = nn.pad(%7, -122f /* ty=float32 span=model_10/tf.compat.v1.pad_1/Pad:0:0 */, pad_width=[[0, 0], [1, 1], [1, 1], [0, 0]]) /* ty=Tensor[(1, 322, 322, 16), int8] span=model_10/tf.compat.v1.pad_1/Pad:0:0 */;
  %9 = qnn.conv2d(%8, %v_param_3, -122 /* ty=int32 span=model_10/tf.math.add_1/Add;model_10/tf.nn.convolution_1/convolution;Const_174:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_1/Add;model_10/tf.nn.convolution_1/convolution;Const_174:0:0 */, 0.0467829f /* ty=float32 span=model_10/tf.math.add_1/Add;model_10/tf.nn.convolution_1/convolution;Const_174:0:0 */, meta[relay.Constant][2] /* ty=Tensor[(32), float32] span=model_10/tf.math.add_1/Add;model_10/tf.nn.convolution_1/convolution;Const_174:0:0 */, strides=[2, 2], padding=[0, 0, 0, 0], channels=32, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 160, 160, 32), int32] span=model_10/tf.math.add_1/Add;model_10/tf.nn.convolution_1/convolution;Const_174:0:0 */;
  %10 = nn.bias_add(%9, %v_param_4, axis=3) /* ty=Tensor[(1, 160, 160, 32), int32] span=model_10/tf.math.add_1/Add;model_10/tf.nn.convolution_1/convolution;Const_174:0:0 */;
  %11 = qnn.requantize(%10, meta[relay.Constant][3] /* ty=Tensor[(32), float32] span=model_10/tf.math.add_1/Add;model_10/tf.nn.convolution_1/convolution;Const_174:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_1/Add;model_10/tf.nn.convolution_1/convolution;Const_174:0:0 */, 0.145552f /* ty=float32 span=model_10/tf.math.add_1/Add;model_10/tf.nn.convolution_1/convolution;Const_174:0:0 */, 28 /* ty=int32 span=model_10/tf.math.add_1/Add;model_10/tf.nn.convolution_1/convolution;Const_174:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 160, 160, 32), int8] span=model_10/tf.math.add_1/Add;model_10/tf.nn.convolution_1/convolution;Const_174:0:0 */;
  %12 = qnn.dequantize(%11, 0.145552f /* ty=float32 span=model_10/tf.math.sigmoid_1/Sigmoid:0:0 */, 28 /* ty=int32 span=model_10/tf.math.sigmoid_1/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 160, 160, 32), float32] span=model_10/tf.math.sigmoid_1/Sigmoid:0:0 */;
  %13 = sigmoid(%12) /* ty=Tensor[(1, 160, 160, 32), float32] span=model_10/tf.math.sigmoid_1/Sigmoid:0:0 */;
  %14 = qnn.quantize(%13, 0.00390625f /* ty=float32 span=model_10/tf.math.sigmoid_1/Sigmoid:0:0 */, -128 /* ty=int32 span=model_10/tf.math.sigmoid_1/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 160, 160, 32), int8] span=model_10/tf.math.sigmoid_1/Sigmoid:0:0 */;
  %15 = qnn.mul(%11, %14, 0.145552f /* ty=float32 span=model_10/tf.math.multiply_7/Mul:0:0 */, 28 /* ty=int32 span=model_10/tf.math.multiply_7/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_10/tf.math.multiply_7/Mul:0:0 */, -128 /* ty=int32 span=model_10/tf.math.multiply_7/Mul:0:0 */, 0.0575569f /* ty=float32 span=model_10/tf.math.multiply_7/Mul:0:0 */, -123 /* ty=int32 span=model_10/tf.math.multiply_7/Mul:0:0 */) /* ty=Tensor[(1, 160, 160, 32), int8] span=model_10/tf.math.multiply_7/Mul:0:0 */;
  %16 = qnn.conv2d(%15, %v_param_5, -123 /* ty=int32 span=model_10/tf.math.add_2/Add;model_10/tf.nn.convolution_2/convolution;Const_172:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_2/Add;model_10/tf.nn.convolution_2/convolution;Const_172:0:0 */, 0.0575569f /* ty=float32 span=model_10/tf.math.add_2/Add;model_10/tf.nn.convolution_2/convolution;Const_172:0:0 */, meta[relay.Constant][4] /* ty=Tensor[(64), float32] span=model_10/tf.math.add_2/Add;model_10/tf.nn.convolution_2/convolution;Const_172:0:0 */, padding=[0, 0, 0, 0], channels=64, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 160, 160, 64), int32] span=model_10/tf.math.add_2/Add;model_10/tf.nn.convolution_2/convolution;Const_172:0:0 */;
  %17 = nn.bias_add(%16, %v_param_6, axis=3) /* ty=Tensor[(1, 160, 160, 64), int32] span=model_10/tf.math.add_2/Add;model_10/tf.nn.convolution_2/convolution;Const_172:0:0 */;
  %18 = qnn.requantize(%17, meta[relay.Constant][5] /* ty=Tensor[(64), float32] span=model_10/tf.math.add_2/Add;model_10/tf.nn.convolution_2/convolution;Const_172:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_2/Add;model_10/tf.nn.convolution_2/convolution;Const_172:0:0 */, 0.11051f /* ty=float32 span=model_10/tf.math.add_2/Add;model_10/tf.nn.convolution_2/convolution;Const_172:0:0 */, -16 /* ty=int32 span=model_10/tf.math.add_2/Add;model_10/tf.nn.convolution_2/convolution;Const_172:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 160, 160, 64), int8] span=model_10/tf.math.add_2/Add;model_10/tf.nn.convolution_2/convolution;Const_172:0:0 */;
  %19 = qnn.dequantize(%18, 0.11051f /* ty=float32 span=model_10/tf.math.sigmoid_2/Sigmoid:0:0 */, -16 /* ty=int32 span=model_10/tf.math.sigmoid_2/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 160, 160, 64), float32] span=model_10/tf.math.sigmoid_2/Sigmoid:0:0 */;
  %20 = sigmoid(%19) /* ty=Tensor[(1, 160, 160, 64), float32] span=model_10/tf.math.sigmoid_2/Sigmoid:0:0 */;
  %21 = qnn.quantize(%20, 0.00390625f /* ty=float32 span=model_10/tf.math.sigmoid_2/Sigmoid:0:0 */, -128 /* ty=int32 span=model_10/tf.math.sigmoid_2/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 160, 160, 64), int8] span=model_10/tf.math.sigmoid_2/Sigmoid:0:0 */;
  %22 = qnn.mul(%18, %21, 0.11051f /* ty=float32 span=model_10/tf.math.multiply_11/Mul:0:0 */, -16 /* ty=int32 span=model_10/tf.math.multiply_11/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_10/tf.math.multiply_11/Mul:0:0 */, -128 /* ty=int32 span=model_10/tf.math.multiply_11/Mul:0:0 */, 0.0666328f /* ty=float32 span=model_10/tf.math.multiply_11/Mul:0:0 */, -124 /* ty=int32 span=model_10/tf.math.multiply_11/Mul:0:0 */) /* ty=Tensor[(1, 160, 160, 64), int8] span=model_10/tf.math.multiply_11/Mul:0:0 */;
  %23 = strided_slice(%22, begin=[0, 0, 0, 0], end=[1, 160, 160, 32], strides=[1, 1, 1, 1], axes=None) /* ty=Tensor[(1, 160, 160, 32), int8] span=model_10/tf.strided_slice/StridedSlice:0:0 */;
  %24 = strided_slice(%22, begin=[0, 0, 0, 32], end=[1, 160, 160, 64], strides=[1, 1, 1, 1], axes=None) /* ty=Tensor[(1, 160, 160, 32), int8] span=model_10/tf.strided_slice_1/StridedSlice:0:0 */;
  %25 = @tvmgen_default_ethos_n_main_1(%24) /* ty=Tensor[(1, 160, 160, 32), int8] */;
  %26 = qnn.conv2d(%25, %v_param_7, -124 /* ty=int32 span=model_10/tf.math.add_3/Add;model_10/tf.nn.convolution_3/convolution;Const_168:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_3/Add;model_10/tf.nn.convolution_3/convolution;Const_168:0:0 */, 0.0666328f /* ty=float32 span=model_10/tf.math.add_3/Add;model_10/tf.nn.convolution_3/convolution;Const_168:0:0 */, meta[relay.Constant][6] /* ty=Tensor[(32), float32] span=model_10/tf.math.add_3/Add;model_10/tf.nn.convolution_3/convolution;Const_168:0:0 */, padding=[1, 1, 1, 1], channels=32, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 160, 160, 32), int32] span=model_10/tf.math.add_3/Add;model_10/tf.nn.convolution_3/convolution;Const_168:0:0 */;
  %27 = nn.bias_add(%26, %v_param_8, axis=3) /* ty=Tensor[(1, 160, 160, 32), int32] span=model_10/tf.math.add_3/Add;model_10/tf.nn.convolution_3/convolution;Const_168:0:0 */;
  %28 = qnn.requantize(%27, meta[relay.Constant][7] /* ty=Tensor[(32), float32] span=model_10/tf.math.add_3/Add;model_10/tf.nn.convolution_3/convolution;Const_168:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_3/Add;model_10/tf.nn.convolution_3/convolution;Const_168:0:0 */, 0.173837f /* ty=float32 span=model_10/tf.math.add_3/Add;model_10/tf.nn.convolution_3/convolution;Const_168:0:0 */, 24 /* ty=int32 span=model_10/tf.math.add_3/Add;model_10/tf.nn.convolution_3/convolution;Const_168:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 160, 160, 32), int8] span=model_10/tf.math.add_3/Add;model_10/tf.nn.convolution_3/convolution;Const_168:0:0 */;
  %29 = qnn.dequantize(%28, 0.173837f /* ty=float32 span=model_10/tf.math.sigmoid_3/Sigmoid:0:0 */, 24 /* ty=int32 span=model_10/tf.math.sigmoid_3/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 160, 160, 32), float32] span=model_10/tf.math.sigmoid_3/Sigmoid:0:0 */;
  %30 = sigmoid(%29) /* ty=Tensor[(1, 160, 160, 32), float32] span=model_10/tf.math.sigmoid_3/Sigmoid:0:0 */;
  %31 = qnn.quantize(%30, 0.00390625f /* ty=float32 span=model_10/tf.math.sigmoid_3/Sigmoid:0:0 */, -128 /* ty=int32 span=model_10/tf.math.sigmoid_3/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 160, 160, 32), int8] span=model_10/tf.math.sigmoid_3/Sigmoid:0:0 */;
  %32 = qnn.mul(%28, %31, 0.173837f /* ty=float32 span=model_10/tf.math.multiply_15/Mul:0:0 */, 24 /* ty=int32 span=model_10/tf.math.multiply_15/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_10/tf.math.multiply_15/Mul:0:0 */, -128 /* ty=int32 span=model_10/tf.math.multiply_15/Mul:0:0 */, 0.0715576f /* ty=float32 span=model_10/tf.math.multiply_15/Mul:0:0 */, -124 /* ty=int32 span=model_10/tf.math.multiply_15/Mul:0:0 */) /* ty=Tensor[(1, 160, 160, 32), int8] span=model_10/tf.math.multiply_15/Mul:0:0 */;
  %33 = qnn.conv2d(%32, %v_param_9, -124 /* ty=int32 span=model_10/tf.math.add_4/Add;model_10/tf.nn.convolution_4/convolution;Const_166:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_4/Add;model_10/tf.nn.convolution_4/convolution;Const_166:0:0 */, 0.0715576f /* ty=float32 span=model_10/tf.math.add_4/Add;model_10/tf.nn.convolution_4/convolution;Const_166:0:0 */, meta[relay.Constant][8] /* ty=Tensor[(32), float32] span=model_10/tf.math.add_4/Add;model_10/tf.nn.convolution_4/convolution;Const_166:0:0 */, padding=[1, 1, 1, 1], channels=32, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 160, 160, 32), int32] span=model_10/tf.math.add_4/Add;model_10/tf.nn.convolution_4/convolution;Const_166:0:0 */;
  %34 = nn.bias_add(%33, %v_param_10, axis=3) /* ty=Tensor[(1, 160, 160, 32), int32] span=model_10/tf.math.add_4/Add;model_10/tf.nn.convolution_4/convolution;Const_166:0:0 */;
  %35 = qnn.requantize(%34, meta[relay.Constant][9] /* ty=Tensor[(32), float32] span=model_10/tf.math.add_4/Add;model_10/tf.nn.convolution_4/convolution;Const_166:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_4/Add;model_10/tf.nn.convolution_4/convolution;Const_166:0:0 */, 0.121139f /* ty=float32 span=model_10/tf.math.add_4/Add;model_10/tf.nn.convolution_4/convolution;Const_166:0:0 */, -11 /* ty=int32 span=model_10/tf.math.add_4/Add;model_10/tf.nn.convolution_4/convolution;Const_166:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 160, 160, 32), int8] span=model_10/tf.math.add_4/Add;model_10/tf.nn.convolution_4/convolution;Const_166:0:0 */;
  %36 = qnn.dequantize(%35, 0.121139f /* ty=float32 span=model_10/tf.math.sigmoid_4/Sigmoid:0:0 */, -11 /* ty=int32 span=model_10/tf.math.sigmoid_4/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 160, 160, 32), float32] span=model_10/tf.math.sigmoid_4/Sigmoid:0:0 */;
  %37 = sigmoid(%36) /* ty=Tensor[(1, 160, 160, 32), float32] span=model_10/tf.math.sigmoid_4/Sigmoid:0:0 */;
  %38 = qnn.quantize(%37, 0.00390625f /* ty=float32 span=model_10/tf.math.sigmoid_4/Sigmoid:0:0 */, -128 /* ty=int32 span=model_10/tf.math.sigmoid_4/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 160, 160, 32), int8] span=model_10/tf.math.sigmoid_4/Sigmoid:0:0 */;
  %39 = @tvmgen_default_ethos_n_main_0(%23) /* ty=Tensor[(1, 160, 160, 32), int8] */;
  %40 = qnn.mul(%35, %38, 0.121139f /* ty=float32 span=model_10/tf.math.multiply_19/Mul:0:0 */, -11 /* ty=int32 span=model_10/tf.math.multiply_19/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_10/tf.math.multiply_19/Mul:0:0 */, -128 /* ty=int32 span=model_10/tf.math.multiply_19/Mul:0:0 */, 0.0666328f /* ty=float32 span=model_10/tf.math.multiply_19/Mul:0:0 */, -124 /* ty=int32 span=model_10/tf.math.multiply_19/Mul:0:0 */) /* ty=Tensor[(1, 160, 160, 32), int8] span=model_10/tf.math.multiply_19/Mul:0:0 */;
  %41 = (%39, %25, %40) /* ty=(Tensor[(1, 160, 160, 32), int8], Tensor[(1, 160, 160, 32), int8], Tensor[(1, 160, 160, 32), int8]) span=model_10/tf.concat/concat:0:0 */;
  %42 = @tvmgen_default_ethos_n_main_2(%41) /* ty=Tensor[(1, 160, 160, 96), int8] */;
  %43 = qnn.conv2d(%42, %v_param_11, -124 /* ty=int32 span=model_10/tf.math.add_5/Add;model_10/tf.nn.convolution_5/convolution;Const_162:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_5/Add;model_10/tf.nn.convolution_5/convolution;Const_162:0:0 */, 0.0666328f /* ty=float32 span=model_10/tf.math.add_5/Add;model_10/tf.nn.convolution_5/convolution;Const_162:0:0 */, meta[relay.Constant][10] /* ty=Tensor[(64), float32] span=model_10/tf.math.add_5/Add;model_10/tf.nn.convolution_5/convolution;Const_162:0:0 */, padding=[0, 0, 0, 0], channels=64, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 160, 160, 64), int32] span=model_10/tf.math.add_5/Add;model_10/tf.nn.convolution_5/convolution;Const_162:0:0 */;
  %44 = nn.bias_add(%43, %v_param_12, axis=3) /* ty=Tensor[(1, 160, 160, 64), int32] span=model_10/tf.math.add_5/Add;model_10/tf.nn.convolution_5/convolution;Const_162:0:0 */;
  %45 = qnn.requantize(%44, meta[relay.Constant][11] /* ty=Tensor[(64), float32] span=model_10/tf.math.add_5/Add;model_10/tf.nn.convolution_5/convolution;Const_162:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_5/Add;model_10/tf.nn.convolution_5/convolution;Const_162:0:0 */, 0.113024f /* ty=float32 span=model_10/tf.math.add_5/Add;model_10/tf.nn.convolution_5/convolution;Const_162:0:0 */, 5 /* ty=int32 span=model_10/tf.math.add_5/Add;model_10/tf.nn.convolution_5/convolution;Const_162:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 160, 160, 64), int8] span=model_10/tf.math.add_5/Add;model_10/tf.nn.convolution_5/convolution;Const_162:0:0 */;
  %46 = qnn.dequantize(%45, 0.113024f /* ty=float32 span=model_10/tf.math.sigmoid_5/Sigmoid:0:0 */, 5 /* ty=int32 span=model_10/tf.math.sigmoid_5/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 160, 160, 64), float32] span=model_10/tf.math.sigmoid_5/Sigmoid:0:0 */;
  %47 = sigmoid(%46) /* ty=Tensor[(1, 160, 160, 64), float32] span=model_10/tf.math.sigmoid_5/Sigmoid:0:0 */;
  %48 = qnn.quantize(%47, 0.00390625f /* ty=float32 span=model_10/tf.math.sigmoid_5/Sigmoid:0:0 */, -128 /* ty=int32 span=model_10/tf.math.sigmoid_5/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 160, 160, 64), int8] span=model_10/tf.math.sigmoid_5/Sigmoid:0:0 */;
  %49 = qnn.mul(%45, %48, 0.113024f /* ty=float32 span=model_10/tf.math.multiply_23/Mul:0:0 */, 5 /* ty=int32 span=model_10/tf.math.multiply_23/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_10/tf.math.multiply_23/Mul:0:0 */, -128 /* ty=int32 span=model_10/tf.math.multiply_23/Mul:0:0 */, 0.0551584f /* ty=float32 span=model_10/tf.math.multiply_23/Mul:0:0 */, -123 /* ty=int32 span=model_10/tf.math.multiply_23/Mul:0:0 */) /* ty=Tensor[(1, 160, 160, 64), int8] span=model_10/tf.math.multiply_23/Mul:0:0 */;
  %50 = nn.pad(%49, -123f /* ty=float32 span=model_10/tf.compat.v1.pad_2/Pad:0:0 */, pad_width=[[0, 0], [1, 1], [1, 1], [0, 0]]) /* ty=Tensor[(1, 162, 162, 64), int8] span=model_10/tf.compat.v1.pad_2/Pad:0:0 */;
  %51 = qnn.conv2d(%50, %v_param_13, -123 /* ty=int32 span=model_10/tf.math.add_6/Add;model_10/tf.nn.convolution_6/convolution;Const_159:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_6/Add;model_10/tf.nn.convolution_6/convolution;Const_159:0:0 */, 0.0551584f /* ty=float32 span=model_10/tf.math.add_6/Add;model_10/tf.nn.convolution_6/convolution;Const_159:0:0 */, meta[relay.Constant][12] /* ty=Tensor[(64), float32] span=model_10/tf.math.add_6/Add;model_10/tf.nn.convolution_6/convolution;Const_159:0:0 */, strides=[2, 2], padding=[0, 0, 0, 0], channels=64, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 80, 80, 64), int32] span=model_10/tf.math.add_6/Add;model_10/tf.nn.convolution_6/convolution;Const_159:0:0 */;
  %52 = nn.bias_add(%51, %v_param_14, axis=3) /* ty=Tensor[(1, 80, 80, 64), int32] span=model_10/tf.math.add_6/Add;model_10/tf.nn.convolution_6/convolution;Const_159:0:0 */;
  %53 = qnn.requantize(%52, meta[relay.Constant][13] /* ty=Tensor[(64), float32] span=model_10/tf.math.add_6/Add;model_10/tf.nn.convolution_6/convolution;Const_159:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_6/Add;model_10/tf.nn.convolution_6/convolution;Const_159:0:0 */, 0.0812957f /* ty=float32 span=model_10/tf.math.add_6/Add;model_10/tf.nn.convolution_6/convolution;Const_159:0:0 */, 7 /* ty=int32 span=model_10/tf.math.add_6/Add;model_10/tf.nn.convolution_6/convolution;Const_159:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 80, 80, 64), int8] span=model_10/tf.math.add_6/Add;model_10/tf.nn.convolution_6/convolution;Const_159:0:0 */;
  %54 = qnn.dequantize(%53, 0.0812957f /* ty=float32 span=model_10/tf.math.sigmoid_6/Sigmoid:0:0 */, 7 /* ty=int32 span=model_10/tf.math.sigmoid_6/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 80, 80, 64), float32] span=model_10/tf.math.sigmoid_6/Sigmoid:0:0 */;
  %55 = sigmoid(%54) /* ty=Tensor[(1, 80, 80, 64), float32] span=model_10/tf.math.sigmoid_6/Sigmoid:0:0 */;
  %56 = qnn.quantize(%55, 0.00390625f /* ty=float32 span=model_10/tf.math.sigmoid_6/Sigmoid:0:0 */, -128 /* ty=int32 span=model_10/tf.math.sigmoid_6/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 80, 80, 64), int8] span=model_10/tf.math.sigmoid_6/Sigmoid:0:0 */;
  %57 = qnn.mul(%53, %56, 0.0812957f /* ty=float32 span=model_10/tf.math.multiply_27/Mul:0:0 */, 7 /* ty=int32 span=model_10/tf.math.multiply_27/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_10/tf.math.multiply_27/Mul:0:0 */, -128 /* ty=int32 span=model_10/tf.math.multiply_27/Mul:0:0 */, 0.0393816f /* ty=float32 span=model_10/tf.math.multiply_27/Mul:0:0 */, -121 /* ty=int32 span=model_10/tf.math.multiply_27/Mul:0:0 */) /* ty=Tensor[(1, 80, 80, 64), int8] span=model_10/tf.math.multiply_27/Mul:0:0 */;
  %58 = qnn.conv2d(%57, %v_param_15, -121 /* ty=int32 span=model_10/tf.math.add_7/Add;model_10/tf.nn.convolution_7/convolution;Const_157:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_7/Add;model_10/tf.nn.convolution_7/convolution;Const_157:0:0 */, 0.0393816f /* ty=float32 span=model_10/tf.math.add_7/Add;model_10/tf.nn.convolution_7/convolution;Const_157:0:0 */, meta[relay.Constant][14] /* ty=Tensor[(128), float32] span=model_10/tf.math.add_7/Add;model_10/tf.nn.convolution_7/convolution;Const_157:0:0 */, padding=[0, 0, 0, 0], channels=128, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 80, 80, 128), int32] span=model_10/tf.math.add_7/Add;model_10/tf.nn.convolution_7/convolution;Const_157:0:0 */;
  %59 = nn.bias_add(%58, %v_param_16, axis=3) /* ty=Tensor[(1, 80, 80, 128), int32] span=model_10/tf.math.add_7/Add;model_10/tf.nn.convolution_7/convolution;Const_157:0:0 */;
  %60 = qnn.requantize(%59, meta[relay.Constant][15] /* ty=Tensor[(128), float32] span=model_10/tf.math.add_7/Add;model_10/tf.nn.convolution_7/convolution;Const_157:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_7/Add;model_10/tf.nn.convolution_7/convolution;Const_157:0:0 */, 0.071696f /* ty=float32 span=model_10/tf.math.add_7/Add;model_10/tf.nn.convolution_7/convolution;Const_157:0:0 */, 3 /* ty=int32 span=model_10/tf.math.add_7/Add;model_10/tf.nn.convolution_7/convolution;Const_157:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 80, 80, 128), int8] span=model_10/tf.math.add_7/Add;model_10/tf.nn.convolution_7/convolution;Const_157:0:0 */;
  %61 = qnn.dequantize(%60, 0.071696f /* ty=float32 span=model_10/tf.math.sigmoid_7/Sigmoid:0:0 */, 3 /* ty=int32 span=model_10/tf.math.sigmoid_7/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 80, 80, 128), float32] span=model_10/tf.math.sigmoid_7/Sigmoid:0:0 */;
  %62 = sigmoid(%61) /* ty=Tensor[(1, 80, 80, 128), float32] span=model_10/tf.math.sigmoid_7/Sigmoid:0:0 */;
  %63 = qnn.quantize(%62, 0.00390625f /* ty=float32 span=model_10/tf.math.sigmoid_7/Sigmoid:0:0 */, -128 /* ty=int32 span=model_10/tf.math.sigmoid_7/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 80, 80, 128), int8] span=model_10/tf.math.sigmoid_7/Sigmoid:0:0 */;
  %64 = qnn.mul(%60, %63, 0.071696f /* ty=float32 span=model_10/tf.math.multiply_31/Mul:0:0 */, 3 /* ty=int32 span=model_10/tf.math.multiply_31/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_10/tf.math.multiply_31/Mul:0:0 */, -128 /* ty=int32 span=model_10/tf.math.multiply_31/Mul:0:0 */, 0.0360564f /* ty=float32 span=model_10/tf.math.multiply_31/Mul:0:0 */, -120 /* ty=int32 span=model_10/tf.math.multiply_31/Mul:0:0 */) /* ty=Tensor[(1, 80, 80, 128), int8] span=model_10/tf.math.multiply_31/Mul:0:0 */;
  %65 = strided_slice(%64, begin=[0, 0, 0, 0], end=[1, 80, 80, 64], strides=[1, 1, 1, 1], axes=None) /* ty=Tensor[(1, 80, 80, 64), int8] span=model_10/tf.strided_slice_2/StridedSlice:0:0 */;
  %66 = strided_slice(%64, begin=[0, 0, 0, 64], end=[1, 80, 80, 128], strides=[1, 1, 1, 1], axes=None) /* ty=Tensor[(1, 80, 80, 64), int8] span=model_10/tf.strided_slice_3/StridedSlice:0:0 */;
  %67 = @tvmgen_default_ethos_n_main_8(%66) /* ty=Tensor[(1, 80, 80, 64), int8] */;
  %68 = qnn.conv2d(%67, %v_param_17, -120 /* ty=int32 span=model_10/tf.math.add_8/Add;model_10/tf.nn.convolution_8/convolution;Const_153:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_8/Add;model_10/tf.nn.convolution_8/convolution;Const_153:0:0 */, 0.0360564f /* ty=float32 span=model_10/tf.math.add_8/Add;model_10/tf.nn.convolution_8/convolution;Const_153:0:0 */, meta[relay.Constant][16] /* ty=Tensor[(64), float32] span=model_10/tf.math.add_8/Add;model_10/tf.nn.convolution_8/convolution;Const_153:0:0 */, padding=[1, 1, 1, 1], channels=64, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 80, 80, 64), int32] span=model_10/tf.math.add_8/Add;model_10/tf.nn.convolution_8/convolution;Const_153:0:0 */;
  %69 = nn.bias_add(%68, %v_param_18, axis=3) /* ty=Tensor[(1, 80, 80, 64), int32] span=model_10/tf.math.add_8/Add;model_10/tf.nn.convolution_8/convolution;Const_153:0:0 */;
  %70 = qnn.requantize(%69, meta[relay.Constant][17] /* ty=Tensor[(64), float32] span=model_10/tf.math.add_8/Add;model_10/tf.nn.convolution_8/convolution;Const_153:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_8/Add;model_10/tf.nn.convolution_8/convolution;Const_153:0:0 */, 0.065177f /* ty=float32 span=model_10/tf.math.add_8/Add;model_10/tf.nn.convolution_8/convolution;Const_153:0:0 */, 7 /* ty=int32 span=model_10/tf.math.add_8/Add;model_10/tf.nn.convolution_8/convolution;Const_153:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 80, 80, 64), int8] span=model_10/tf.math.add_8/Add;model_10/tf.nn.convolution_8/convolution;Const_153:0:0 */;
  %71 = qnn.dequantize(%70, 0.065177f /* ty=float32 span=model_10/tf.math.sigmoid_8/Sigmoid:0:0 */, 7 /* ty=int32 span=model_10/tf.math.sigmoid_8/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 80, 80, 64), float32] span=model_10/tf.math.sigmoid_8/Sigmoid:0:0 */;
  %72 = sigmoid(%71) /* ty=Tensor[(1, 80, 80, 64), float32] span=model_10/tf.math.sigmoid_8/Sigmoid:0:0 */;
  %73 = qnn.quantize(%72, 0.00390625f /* ty=float32 span=model_10/tf.math.sigmoid_8/Sigmoid:0:0 */, -128 /* ty=int32 span=model_10/tf.math.sigmoid_8/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 80, 80, 64), int8] span=model_10/tf.math.sigmoid_8/Sigmoid:0:0 */;
  %74 = qnn.mul(%70, %73, 0.065177f /* ty=float32 span=model_10/tf.math.multiply_35/Mul:0:0 */, 7 /* ty=int32 span=model_10/tf.math.multiply_35/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_10/tf.math.multiply_35/Mul:0:0 */, -128 /* ty=int32 span=model_10/tf.math.multiply_35/Mul:0:0 */, 0.0318296f /* ty=float32 span=model_10/tf.math.multiply_35/Mul:0:0 */, -119 /* ty=int32 span=model_10/tf.math.multiply_35/Mul:0:0 */) /* ty=Tensor[(1, 80, 80, 64), int8] span=model_10/tf.math.multiply_35/Mul:0:0 */;
  %75 = qnn.conv2d(%74, %v_param_19, -119 /* ty=int32 span=model_10/tf.math.add_9/Add;model_10/tf.nn.convolution_9/convolution;Const_151:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_9/Add;model_10/tf.nn.convolution_9/convolution;Const_151:0:0 */, 0.0318296f /* ty=float32 span=model_10/tf.math.add_9/Add;model_10/tf.nn.convolution_9/convolution;Const_151:0:0 */, meta[relay.Constant][18] /* ty=Tensor[(64), float32] span=model_10/tf.math.add_9/Add;model_10/tf.nn.convolution_9/convolution;Const_151:0:0 */, padding=[1, 1, 1, 1], channels=64, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 80, 80, 64), int32] span=model_10/tf.math.add_9/Add;model_10/tf.nn.convolution_9/convolution;Const_151:0:0 */;
  %76 = nn.bias_add(%75, %v_param_20, axis=3) /* ty=Tensor[(1, 80, 80, 64), int32] span=model_10/tf.math.add_9/Add;model_10/tf.nn.convolution_9/convolution;Const_151:0:0 */;
  %77 = qnn.requantize(%76, meta[relay.Constant][19] /* ty=Tensor[(64), float32] span=model_10/tf.math.add_9/Add;model_10/tf.nn.convolution_9/convolution;Const_151:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_9/Add;model_10/tf.nn.convolution_9/convolution;Const_151:0:0 */, 0.0707764f /* ty=float32 span=model_10/tf.math.add_9/Add;model_10/tf.nn.convolution_9/convolution;Const_151:0:0 */, 4 /* ty=int32 span=model_10/tf.math.add_9/Add;model_10/tf.nn.convolution_9/convolution;Const_151:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 80, 80, 64), int8] span=model_10/tf.math.add_9/Add;model_10/tf.nn.convolution_9/convolution;Const_151:0:0 */;
  %78 = qnn.dequantize(%77, 0.0707764f /* ty=float32 span=model_10/tf.math.sigmoid_9/Sigmoid:0:0 */, 4 /* ty=int32 span=model_10/tf.math.sigmoid_9/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 80, 80, 64), float32] span=model_10/tf.math.sigmoid_9/Sigmoid:0:0 */;
  %79 = sigmoid(%78) /* ty=Tensor[(1, 80, 80, 64), float32] span=model_10/tf.math.sigmoid_9/Sigmoid:0:0 */;
  %80 = qnn.quantize(%79, 0.00390625f /* ty=float32 span=model_10/tf.math.sigmoid_9/Sigmoid:0:0 */, -128 /* ty=int32 span=model_10/tf.math.sigmoid_9/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 80, 80, 64), int8] span=model_10/tf.math.sigmoid_9/Sigmoid:0:0 */;
  %81 = @tvmgen_default_ethos_n_main_7(%65) /* ty=Tensor[(1, 80, 80, 64), int8] */;
  %82 = qnn.mul(%77, %80, 0.0707764f /* ty=float32 span=model_10/tf.math.multiply_39/Mul:0:0 */, 4 /* ty=int32 span=model_10/tf.math.multiply_39/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_10/tf.math.multiply_39/Mul:0:0 */, -128 /* ty=int32 span=model_10/tf.math.multiply_39/Mul:0:0 */, 0.0360564f /* ty=float32 span=model_10/tf.math.multiply_39/Mul:0:0 */, -120 /* ty=int32 span=model_10/tf.math.multiply_39/Mul:0:0 */) /* ty=Tensor[(1, 80, 80, 64), int8] span=model_10/tf.math.multiply_39/Mul:0:0 */;
  %83 = (%81, %67, %82) /* ty=(Tensor[(1, 80, 80, 64), int8], Tensor[(1, 80, 80, 64), int8], Tensor[(1, 80, 80, 64), int8]) span=model_10/tf.concat_1/concat:0:0 */;
  %84 = @tvmgen_default_ethos_n_main_9(%83) /* ty=Tensor[(1, 80, 80, 192), int8] */;
  %85 = qnn.conv2d(%84, %v_param_21, -120 /* ty=int32 span=model_10/tf.math.add_10/Add;model_10/tf.nn.convolution_10/convolution;Const_147:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_10/Add;model_10/tf.nn.convolution_10/convolution;Const_147:0:0 */, 0.0360564f /* ty=float32 span=model_10/tf.math.add_10/Add;model_10/tf.nn.convolution_10/convolution;Const_147:0:0 */, meta[relay.Constant][20] /* ty=Tensor[(128), float32] span=model_10/tf.math.add_10/Add;model_10/tf.nn.convolution_10/convolution;Const_147:0:0 */, padding=[0, 0, 0, 0], channels=128, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 80, 80, 128), int32] span=model_10/tf.math.add_10/Add;model_10/tf.nn.convolution_10/convolution;Const_147:0:0 */;
  %86 = nn.bias_add(%85, %v_param_22, axis=3) /* ty=Tensor[(1, 80, 80, 128), int32] span=model_10/tf.math.add_10/Add;model_10/tf.nn.convolution_10/convolution;Const_147:0:0 */;
  %87 = qnn.requantize(%86, meta[relay.Constant][21] /* ty=Tensor[(128), float32] span=model_10/tf.math.add_10/Add;model_10/tf.nn.convolution_10/convolution;Const_147:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_10/Add;model_10/tf.nn.convolution_10/convolution;Const_147:0:0 */, 0.0739018f /* ty=float32 span=model_10/tf.math.add_10/Add;model_10/tf.nn.convolution_10/convolution;Const_147:0:0 */, 13 /* ty=int32 span=model_10/tf.math.add_10/Add;model_10/tf.nn.convolution_10/convolution;Const_147:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 80, 80, 128), int8] span=model_10/tf.math.add_10/Add;model_10/tf.nn.convolution_10/convolution;Const_147:0:0 */;
  %88 = qnn.dequantize(%87, 0.0739018f /* ty=float32 span=model_10/tf.math.sigmoid_10/Sigmoid:0:0 */, 13 /* ty=int32 span=model_10/tf.math.sigmoid_10/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 80, 80, 128), float32] span=model_10/tf.math.sigmoid_10/Sigmoid:0:0 */;
  %89 = sigmoid(%88) /* ty=Tensor[(1, 80, 80, 128), float32] span=model_10/tf.math.sigmoid_10/Sigmoid:0:0 */;
  %90 = qnn.quantize(%89, 0.00390625f /* ty=float32 span=model_10/tf.math.sigmoid_10/Sigmoid:0:0 */, -128 /* ty=int32 span=model_10/tf.math.sigmoid_10/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 80, 80, 128), int8] span=model_10/tf.math.sigmoid_10/Sigmoid:0:0 */;
  %91 = qnn.mul(%87, %90, 0.0739018f /* ty=float32 span=model_10/tf.math.multiply_43/Mul:0:0 */, 13 /* ty=int32 span=model_10/tf.math.multiply_43/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_10/tf.math.multiply_43/Mul:0:0 */, -128 /* ty=int32 span=model_10/tf.math.multiply_43/Mul:0:0 */, 0.0341957f /* ty=float32 span=model_10/tf.math.multiply_43/Mul:0:0 */, -120 /* ty=int32 span=model_10/tf.math.multiply_43/Mul:0:0 */) /* ty=Tensor[(1, 80, 80, 128), int8] span=model_10/tf.math.multiply_43/Mul:0:0 */;
  %92 = nn.pad(%91, -120f /* ty=float32 span=model_10/tf.compat.v1.pad_3/Pad:0:0 */, pad_width=[[0, 0], [1, 1], [1, 1], [0, 0]]) /* ty=Tensor[(1, 82, 82, 128), int8] span=model_10/tf.compat.v1.pad_3/Pad:0:0 */;
  %93 = qnn.conv2d(%92, %v_param_23, -120 /* ty=int32 span=model_10/tf.math.add_11/Add;model_10/tf.nn.convolution_11/convolution;Const_144:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_11/Add;model_10/tf.nn.convolution_11/convolution;Const_144:0:0 */, 0.0341957f /* ty=float32 span=model_10/tf.math.add_11/Add;model_10/tf.nn.convolution_11/convolution;Const_144:0:0 */, meta[relay.Constant][22] /* ty=Tensor[(128), float32] span=model_10/tf.math.add_11/Add;model_10/tf.nn.convolution_11/convolution;Const_144:0:0 */, strides=[2, 2], padding=[0, 0, 0, 0], channels=128, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 40, 40, 128), int32] span=model_10/tf.math.add_11/Add;model_10/tf.nn.convolution_11/convolution;Const_144:0:0 */;
  %94 = nn.bias_add(%93, %v_param_24, axis=3) /* ty=Tensor[(1, 40, 40, 128), int32] span=model_10/tf.math.add_11/Add;model_10/tf.nn.convolution_11/convolution;Const_144:0:0 */;
  %95 = qnn.requantize(%94, meta[relay.Constant][23] /* ty=Tensor[(128), float32] span=model_10/tf.math.add_11/Add;model_10/tf.nn.convolution_11/convolution;Const_144:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_11/Add;model_10/tf.nn.convolution_11/convolution;Const_144:0:0 */, 0.058145f /* ty=float32 span=model_10/tf.math.add_11/Add;model_10/tf.nn.convolution_11/convolution;Const_144:0:0 */, -29 /* ty=int32 span=model_10/tf.math.add_11/Add;model_10/tf.nn.convolution_11/convolution;Const_144:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 128), int8] span=model_10/tf.math.add_11/Add;model_10/tf.nn.convolution_11/convolution;Const_144:0:0 */;
  %96 = qnn.dequantize(%95, 0.058145f /* ty=float32 span=model_10/tf.math.sigmoid_11/Sigmoid:0:0 */, -29 /* ty=int32 span=model_10/tf.math.sigmoid_11/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 40, 40, 128), float32] span=model_10/tf.math.sigmoid_11/Sigmoid:0:0 */;
  %97 = sigmoid(%96) /* ty=Tensor[(1, 40, 40, 128), float32] span=model_10/tf.math.sigmoid_11/Sigmoid:0:0 */;
  %98 = qnn.quantize(%97, 0.00390625f /* ty=float32 span=model_10/tf.math.sigmoid_11/Sigmoid:0:0 */, -128 /* ty=int32 span=model_10/tf.math.sigmoid_11/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 128), int8] span=model_10/tf.math.sigmoid_11/Sigmoid:0:0 */;
  %99 = qnn.mul(%95, %98, 0.058145f /* ty=float32 span=model_10/tf.math.multiply_47/Mul:0:0 */, -29 /* ty=int32 span=model_10/tf.math.multiply_47/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_10/tf.math.multiply_47/Mul:0:0 */, -128 /* ty=int32 span=model_10/tf.math.multiply_47/Mul:0:0 */, 0.0365512f /* ty=float32 span=model_10/tf.math.multiply_47/Mul:0:0 */, -120 /* ty=int32 span=model_10/tf.math.multiply_47/Mul:0:0 */) /* ty=Tensor[(1, 40, 40, 128), int8] span=model_10/tf.math.multiply_47/Mul:0:0 */;
  %100 = qnn.conv2d(%99, %v_param_25, -120 /* ty=int32 span=model_10/tf.math.add_12/Add;model_10/tf.nn.convolution_12/convolution;Const_142:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_12/Add;model_10/tf.nn.convolution_12/convolution;Const_142:0:0 */, 0.0365512f /* ty=float32 span=model_10/tf.math.add_12/Add;model_10/tf.nn.convolution_12/convolution;Const_142:0:0 */, meta[relay.Constant][24] /* ty=Tensor[(128), float32] span=model_10/tf.math.add_12/Add;model_10/tf.nn.convolution_12/convolution;Const_142:0:0 */, padding=[0, 0, 0, 0], channels=128, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 40, 40, 128), int32] span=model_10/tf.math.add_12/Add;model_10/tf.nn.convolution_12/convolution;Const_142:0:0 */;
  %101 = nn.bias_add(%100, %v_param_26, axis=3) /* ty=Tensor[(1, 40, 40, 128), int32] span=model_10/tf.math.add_12/Add;model_10/tf.nn.convolution_12/convolution;Const_142:0:0 */;
  %102 = qnn.requantize(%101, meta[relay.Constant][25] /* ty=Tensor[(128), float32] span=model_10/tf.math.add_12/Add;model_10/tf.nn.convolution_12/convolution;Const_142:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_12/Add;model_10/tf.nn.convolution_12/convolution;Const_142:0:0 */, 0.0463125f /* ty=float32 span=model_10/tf.math.add_12/Add;model_10/tf.nn.convolution_12/convolution;Const_142:0:0 */, -2 /* ty=int32 span=model_10/tf.math.add_12/Add;model_10/tf.nn.convolution_12/convolution;Const_142:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 128), int8] span=model_10/tf.math.add_12/Add;model_10/tf.nn.convolution_12/convolution;Const_142:0:0 */;
  %103 = qnn.dequantize(%102, 0.0463125f /* ty=float32 span=model_10/tf.math.sigmoid_12/Sigmoid:0:0 */, -2 /* ty=int32 span=model_10/tf.math.sigmoid_12/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 40, 40, 128), float32] span=model_10/tf.math.sigmoid_12/Sigmoid:0:0 */;
  %104 = sigmoid(%103) /* ty=Tensor[(1, 40, 40, 128), float32] span=model_10/tf.math.sigmoid_12/Sigmoid:0:0 */;
  %105 = qnn.quantize(%104, 0.00390625f /* ty=float32 span=model_10/tf.math.sigmoid_12/Sigmoid:0:0 */, -128 /* ty=int32 span=model_10/tf.math.sigmoid_12/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 128), int8] span=model_10/tf.math.sigmoid_12/Sigmoid:0:0 */;
  %106 = qnn.mul(%102, %105, 0.0463125f /* ty=float32 span=model_10/tf.math.multiply_51/Mul:0:0 */, -2 /* ty=int32 span=model_10/tf.math.multiply_51/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_10/tf.math.multiply_51/Mul:0:0 */, -128 /* ty=int32 span=model_10/tf.math.multiply_51/Mul:0:0 */, 0.0323925f /* ty=float32 span=model_10/tf.math.multiply_51/Mul:0:0 */, -111 /* ty=int32 span=model_10/tf.math.multiply_51/Mul:0:0 */) /* ty=Tensor[(1, 40, 40, 128), int8] span=model_10/tf.math.multiply_51/Mul:0:0 */;
  %107 = strided_slice(%106, begin=[0, 0, 0, 0], end=[1, 40, 40, 64], strides=[1, 1, 1, 1], axes=None) /* ty=Tensor[(1, 40, 40, 64), int8] span=model_10/tf.strided_slice_4/StridedSlice:0:0 */;
  %108 = strided_slice(%106, begin=[0, 0, 0, 64], end=[1, 40, 40, 128], strides=[1, 1, 1, 1], axes=None) /* ty=Tensor[(1, 40, 40, 64), int8] span=model_10/tf.strided_slice_5/StridedSlice:0:0 */;
  %109 = @tvmgen_default_ethos_n_main_15(%108) /* ty=Tensor[(1, 40, 40, 64), int8] */;
  %110 = qnn.conv2d(%109, %v_param_27, -111 /* ty=int32 span=model_10/tf.math.add_13/Add;model_10/tf.nn.convolution_13/convolution;Const_138:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_13/Add;model_10/tf.nn.convolution_13/convolution;Const_138:0:0 */, 0.0323925f /* ty=float32 span=model_10/tf.math.add_13/Add;model_10/tf.nn.convolution_13/convolution;Const_138:0:0 */, meta[relay.Constant][26] /* ty=Tensor[(64), float32] span=model_10/tf.math.add_13/Add;model_10/tf.nn.convolution_13/convolution;Const_138:0:0 */, padding=[1, 1, 1, 1], channels=64, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 40, 40, 64), int32] span=model_10/tf.math.add_13/Add;model_10/tf.nn.convolution_13/convolution;Const_138:0:0 */;
  %111 = nn.bias_add(%110, %v_param_28, axis=3) /* ty=Tensor[(1, 40, 40, 64), int32] span=model_10/tf.math.add_13/Add;model_10/tf.nn.convolution_13/convolution;Const_138:0:0 */;
  %112 = qnn.requantize(%111, meta[relay.Constant][27] /* ty=Tensor[(64), float32] span=model_10/tf.math.add_13/Add;model_10/tf.nn.convolution_13/convolution;Const_138:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_13/Add;model_10/tf.nn.convolution_13/convolution;Const_138:0:0 */, 0.0455459f /* ty=float32 span=model_10/tf.math.add_13/Add;model_10/tf.nn.convolution_13/convolution;Const_138:0:0 */, -1 /* ty=int32 span=model_10/tf.math.add_13/Add;model_10/tf.nn.convolution_13/convolution;Const_138:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 64), int8] span=model_10/tf.math.add_13/Add;model_10/tf.nn.convolution_13/convolution;Const_138:0:0 */;
  %113 = qnn.dequantize(%112, 0.0455459f /* ty=float32 span=model_10/tf.math.sigmoid_13/Sigmoid:0:0 */, -1 /* ty=int32 span=model_10/tf.math.sigmoid_13/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 40, 40, 64), float32] span=model_10/tf.math.sigmoid_13/Sigmoid:0:0 */;
  %114 = sigmoid(%113) /* ty=Tensor[(1, 40, 40, 64), float32] span=model_10/tf.math.sigmoid_13/Sigmoid:0:0 */;
  %115 = qnn.quantize(%114, 0.00390625f /* ty=float32 span=model_10/tf.math.sigmoid_13/Sigmoid:0:0 */, -128 /* ty=int32 span=model_10/tf.math.sigmoid_13/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 64), int8] span=model_10/tf.math.sigmoid_13/Sigmoid:0:0 */;
  %116 = qnn.mul(%112, %115, 0.0455459f /* ty=float32 span=model_10/tf.math.multiply_55/Mul:0:0 */, -1 /* ty=int32 span=model_10/tf.math.multiply_55/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_10/tf.math.multiply_55/Mul:0:0 */, -128 /* ty=int32 span=model_10/tf.math.multiply_55/Mul:0:0 */, 0.0238953f /* ty=float32 span=model_10/tf.math.multiply_55/Mul:0:0 */, -116 /* ty=int32 span=model_10/tf.math.multiply_55/Mul:0:0 */) /* ty=Tensor[(1, 40, 40, 64), int8] span=model_10/tf.math.multiply_55/Mul:0:0 */;
  %117 = qnn.conv2d(%116, %v_param_29, -116 /* ty=int32 span=model_10/tf.math.add_14/Add;model_10/tf.nn.convolution_14/convolution;Const_136:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_14/Add;model_10/tf.nn.convolution_14/convolution;Const_136:0:0 */, 0.0238953f /* ty=float32 span=model_10/tf.math.add_14/Add;model_10/tf.nn.convolution_14/convolution;Const_136:0:0 */, meta[relay.Constant][28] /* ty=Tensor[(64), float32] span=model_10/tf.math.add_14/Add;model_10/tf.nn.convolution_14/convolution;Const_136:0:0 */, padding=[1, 1, 1, 1], channels=64, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 40, 40, 64), int32] span=model_10/tf.math.add_14/Add;model_10/tf.nn.convolution_14/convolution;Const_136:0:0 */;
  %118 = nn.bias_add(%117, %v_param_30, axis=3) /* ty=Tensor[(1, 40, 40, 64), int32] span=model_10/tf.math.add_14/Add;model_10/tf.nn.convolution_14/convolution;Const_136:0:0 */;
  %119 = qnn.requantize(%118, meta[relay.Constant][29] /* ty=Tensor[(64), float32] span=model_10/tf.math.add_14/Add;model_10/tf.nn.convolution_14/convolution;Const_136:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_14/Add;model_10/tf.nn.convolution_14/convolution;Const_136:0:0 */, 0.0488053f /* ty=float32 span=model_10/tf.math.add_14/Add;model_10/tf.nn.convolution_14/convolution;Const_136:0:0 */, -10 /* ty=int32 span=model_10/tf.math.add_14/Add;model_10/tf.nn.convolution_14/convolution;Const_136:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 64), int8] span=model_10/tf.math.add_14/Add;model_10/tf.nn.convolution_14/convolution;Const_136:0:0 */;
  %120 = qnn.dequantize(%119, 0.0488053f /* ty=float32 span=model_10/tf.math.sigmoid_14/Sigmoid:0:0 */, -10 /* ty=int32 span=model_10/tf.math.sigmoid_14/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 40, 40, 64), float32] span=model_10/tf.math.sigmoid_14/Sigmoid:0:0 */;
  %121 = sigmoid(%120) /* ty=Tensor[(1, 40, 40, 64), float32] span=model_10/tf.math.sigmoid_14/Sigmoid:0:0 */;
  %122 = qnn.quantize(%121, 0.00390625f /* ty=float32 span=model_10/tf.math.sigmoid_14/Sigmoid:0:0 */, -128 /* ty=int32 span=model_10/tf.math.sigmoid_14/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 64), int8] span=model_10/tf.math.sigmoid_14/Sigmoid:0:0 */;
  %123 = qnn.mul(%119, %122, 0.0488053f /* ty=float32 span=model_10/tf.math.multiply_59/Mul:0:0 */, -10 /* ty=int32 span=model_10/tf.math.multiply_59/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_10/tf.math.multiply_59/Mul:0:0 */, -128 /* ty=int32 span=model_10/tf.math.multiply_59/Mul:0:0 */, 0.0323925f /* ty=float32 span=model_10/tf.math.multiply_59/Mul:0:0 */, -111 /* ty=int32 span=model_10/tf.math.multiply_59/Mul:0:0 */) /* ty=Tensor[(1, 40, 40, 64), int8] span=model_10/tf.math.multiply_59/Mul:0:0 */;
  %124 = @tvmgen_default_ethos_n_main_14(%107) /* ty=Tensor[(1, 40, 40, 64), int8] */;
  %125 = qnn.add(%109, %123, 0.0323925f /* ty=float32 span=model_10/tf.math.add_16/Add:0:0 */, -111 /* ty=int32 span=model_10/tf.math.add_16/Add:0:0 */, 0.0323925f /* ty=float32 span=model_10/tf.math.add_16/Add:0:0 */, -111 /* ty=int32 span=model_10/tf.math.add_16/Add:0:0 */, 0.0323925f /* ty=float32 span=model_10/tf.math.add_16/Add:0:0 */, -111 /* ty=int32 span=model_10/tf.math.add_16/Add:0:0 */) /* ty=Tensor[(1, 40, 40, 64), int8] span=model_10/tf.math.add_16/Add:0:0 */;
  %126 = (%124, %109, %125) /* ty=(Tensor[(1, 40, 40, 64), int8], Tensor[(1, 40, 40, 64), int8], Tensor[(1, 40, 40, 64), int8]) span=model_10/tf.concat_2/concat:0:0 */;
  %127 = @tvmgen_default_ethos_n_main_16(%126) /* ty=Tensor[(1, 40, 40, 192), int8] */;
  %128 = qnn.conv2d(%127, %v_param_31, -111 /* ty=int32 span=model_10/tf.math.add_17/Add;model_10/tf.nn.convolution_15/convolution;Const_132:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_17/Add;model_10/tf.nn.convolution_15/convolution;Const_132:0:0 */, 0.0323925f /* ty=float32 span=model_10/tf.math.add_17/Add;model_10/tf.nn.convolution_15/convolution;Const_132:0:0 */, meta[relay.Constant][30] /* ty=Tensor[(128), float32] span=model_10/tf.math.add_17/Add;model_10/tf.nn.convolution_15/convolution;Const_132:0:0 */, padding=[0, 0, 0, 0], channels=128, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 40, 40, 128), int32] span=model_10/tf.math.add_17/Add;model_10/tf.nn.convolution_15/convolution;Const_132:0:0 */;
  %129 = nn.bias_add(%128, %v_param_32, axis=3) /* ty=Tensor[(1, 40, 40, 128), int32] span=model_10/tf.math.add_17/Add;model_10/tf.nn.convolution_15/convolution;Const_132:0:0 */;
  %130 = qnn.requantize(%129, meta[relay.Constant][31] /* ty=Tensor[(128), float32] span=model_10/tf.math.add_17/Add;model_10/tf.nn.convolution_15/convolution;Const_132:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_17/Add;model_10/tf.nn.convolution_15/convolution;Const_132:0:0 */, 0.0503572f /* ty=float32 span=model_10/tf.math.add_17/Add;model_10/tf.nn.convolution_15/convolution;Const_132:0:0 */, -8 /* ty=int32 span=model_10/tf.math.add_17/Add;model_10/tf.nn.convolution_15/convolution;Const_132:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 128), int8] span=model_10/tf.math.add_17/Add;model_10/tf.nn.convolution_15/convolution;Const_132:0:0 */;
  %131 = qnn.dequantize(%130, 0.0503572f /* ty=float32 span=model_10/tf.math.sigmoid_15/Sigmoid:0:0 */, -8 /* ty=int32 span=model_10/tf.math.sigmoid_15/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 40, 40, 128), float32] span=model_10/tf.math.sigmoid_15/Sigmoid:0:0 */;
  %132 = sigmoid(%131) /* ty=Tensor[(1, 40, 40, 128), float32] span=model_10/tf.math.sigmoid_15/Sigmoid:0:0 */;
  %133 = qnn.quantize(%132, 0.00390625f /* ty=float32 span=model_10/tf.math.sigmoid_15/Sigmoid:0:0 */, -128 /* ty=int32 span=model_10/tf.math.sigmoid_15/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 128), int8] span=model_10/tf.math.sigmoid_15/Sigmoid:0:0 */;
  %134 = qnn.mul(%130, %133, 0.0503572f /* ty=float32 span=model_10/tf.math.multiply_65/Mul:0:0 */, -8 /* ty=int32 span=model_10/tf.math.multiply_65/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_10/tf.math.multiply_65/Mul:0:0 */, -128 /* ty=int32 span=model_10/tf.math.multiply_65/Mul:0:0 */, 0.0277646f /* ty=float32 span=model_10/tf.math.multiply_65/Mul:0:0 */, -118 /* ty=int32 span=model_10/tf.math.multiply_65/Mul:0:0 */) /* ty=Tensor[(1, 40, 40, 128), int8] span=model_10/tf.math.multiply_65/Mul:0:0 */;
  %135 = nn.pad(%134, -118f /* ty=float32 span=model_10/tf.compat.v1.pad_4/Pad:0:0 */, pad_width=[[0, 0], [1, 1], [1, 1], [0, 0]]) /* ty=Tensor[(1, 42, 42, 128), int8] span=model_10/tf.compat.v1.pad_4/Pad:0:0 */;
  %136 = qnn.conv2d(%135, %v_param_33, -118 /* ty=int32 span=model_10/tf.math.add_18/Add;model_10/tf.nn.convolution_16/convolution;Const_129:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_18/Add;model_10/tf.nn.convolution_16/convolution;Const_129:0:0 */, 0.0277646f /* ty=float32 span=model_10/tf.math.add_18/Add;model_10/tf.nn.convolution_16/convolution;Const_129:0:0 */, meta[relay.Constant][32] /* ty=Tensor[(256), float32] span=model_10/tf.math.add_18/Add;model_10/tf.nn.convolution_16/convolution;Const_129:0:0 */, strides=[2, 2], padding=[0, 0, 0, 0], channels=256, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 20, 20, 256), int32] span=model_10/tf.math.add_18/Add;model_10/tf.nn.convolution_16/convolution;Const_129:0:0 */;
  %137 = nn.bias_add(%136, %v_param_34, axis=3) /* ty=Tensor[(1, 20, 20, 256), int32] span=model_10/tf.math.add_18/Add;model_10/tf.nn.convolution_16/convolution;Const_129:0:0 */;
  %138 = qnn.requantize(%137, meta[relay.Constant][33] /* ty=Tensor[(256), float32] span=model_10/tf.math.add_18/Add;model_10/tf.nn.convolution_16/convolution;Const_129:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_18/Add;model_10/tf.nn.convolution_16/convolution;Const_129:0:0 */, 0.0412837f /* ty=float32 span=model_10/tf.math.add_18/Add;model_10/tf.nn.convolution_16/convolution;Const_129:0:0 */, -12 /* ty=int32 span=model_10/tf.math.add_18/Add;model_10/tf.nn.convolution_16/convolution;Const_129:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 256), int8] span=model_10/tf.math.add_18/Add;model_10/tf.nn.convolution_16/convolution;Const_129:0:0 */;
  %139 = qnn.dequantize(%138, 0.0412837f /* ty=float32 span=model_10/tf.math.sigmoid_16/Sigmoid:0:0 */, -12 /* ty=int32 span=model_10/tf.math.sigmoid_16/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 20, 20, 256), float32] span=model_10/tf.math.sigmoid_16/Sigmoid:0:0 */;
  %140 = sigmoid(%139) /* ty=Tensor[(1, 20, 20, 256), float32] span=model_10/tf.math.sigmoid_16/Sigmoid:0:0 */;
  %141 = qnn.quantize(%140, 0.00390625f /* ty=float32 span=model_10/tf.math.sigmoid_16/Sigmoid:0:0 */, -128 /* ty=int32 span=model_10/tf.math.sigmoid_16/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 256), int8] span=model_10/tf.math.sigmoid_16/Sigmoid:0:0 */;
  %142 = qnn.mul(%138, %141, 0.0412837f /* ty=float32 span=model_10/tf.math.multiply_69/Mul:0:0 */, -12 /* ty=int32 span=model_10/tf.math.multiply_69/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_10/tf.math.multiply_69/Mul:0:0 */, -128 /* ty=int32 span=model_10/tf.math.multiply_69/Mul:0:0 */, 0.0235612f /* ty=float32 span=model_10/tf.math.multiply_69/Mul:0:0 */, -116 /* ty=int32 span=model_10/tf.math.multiply_69/Mul:0:0 */) /* ty=Tensor[(1, 20, 20, 256), int8] span=model_10/tf.math.multiply_69/Mul:0:0 */;
  %143 = qnn.conv2d(%142, %v_param_35, -116 /* ty=int32 span=model_10/tf.math.add_19/Add;model_10/tf.nn.convolution_17/convolution;Const_127:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_19/Add;model_10/tf.nn.convolution_17/convolution;Const_127:0:0 */, 0.0235612f /* ty=float32 span=model_10/tf.math.add_19/Add;model_10/tf.nn.convolution_17/convolution;Const_127:0:0 */, meta[relay.Constant][34] /* ty=Tensor[(256), float32] span=model_10/tf.math.add_19/Add;model_10/tf.nn.convolution_17/convolution;Const_127:0:0 */, padding=[0, 0, 0, 0], channels=256, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 20, 20, 256), int32] span=model_10/tf.math.add_19/Add;model_10/tf.nn.convolution_17/convolution;Const_127:0:0 */;
  %144 = nn.bias_add(%143, %v_param_36, axis=3) /* ty=Tensor[(1, 20, 20, 256), int32] span=model_10/tf.math.add_19/Add;model_10/tf.nn.convolution_17/convolution;Const_127:0:0 */;
  %145 = qnn.requantize(%144, meta[relay.Constant][35] /* ty=Tensor[(256), float32] span=model_10/tf.math.add_19/Add;model_10/tf.nn.convolution_17/convolution;Const_127:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_19/Add;model_10/tf.nn.convolution_17/convolution;Const_127:0:0 */, 0.0455848f /* ty=float32 span=model_10/tf.math.add_19/Add;model_10/tf.nn.convolution_17/convolution;Const_127:0:0 */, 6 /* ty=int32 span=model_10/tf.math.add_19/Add;model_10/tf.nn.convolution_17/convolution;Const_127:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 256), int8] span=model_10/tf.math.add_19/Add;model_10/tf.nn.convolution_17/convolution;Const_127:0:0 */;
  %146 = qnn.dequantize(%145, 0.0455848f /* ty=float32 span=model_10/tf.math.sigmoid_17/Sigmoid:0:0 */, 6 /* ty=int32 span=model_10/tf.math.sigmoid_17/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 20, 20, 256), float32] span=model_10/tf.math.sigmoid_17/Sigmoid:0:0 */;
  %147 = sigmoid(%146) /* ty=Tensor[(1, 20, 20, 256), float32] span=model_10/tf.math.sigmoid_17/Sigmoid:0:0 */;
  %148 = qnn.quantize(%147, 0.00390625f /* ty=float32 span=model_10/tf.math.sigmoid_17/Sigmoid:0:0 */, -128 /* ty=int32 span=model_10/tf.math.sigmoid_17/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 256), int8] span=model_10/tf.math.sigmoid_17/Sigmoid:0:0 */;
  %149 = qnn.mul(%145, %148, 0.0455848f /* ty=float32 span=model_10/tf.math.multiply_73/Mul:0:0 */, 6 /* ty=int32 span=model_10/tf.math.multiply_73/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_10/tf.math.multiply_73/Mul:0:0 */, -128 /* ty=int32 span=model_10/tf.math.multiply_73/Mul:0:0 */, 0.0386514f /* ty=float32 span=model_10/tf.math.multiply_73/Mul:0:0 */, -114 /* ty=int32 span=model_10/tf.math.multiply_73/Mul:0:0 */) /* ty=Tensor[(1, 20, 20, 256), int8] span=model_10/tf.math.multiply_73/Mul:0:0 */;
  %150 = strided_slice(%149, begin=[0, 0, 0, 0], end=[1, 20, 20, 128], strides=[1, 1, 1, 1], axes=None) /* ty=Tensor[(1, 20, 20, 128), int8] span=model_10/tf.strided_slice_6/StridedSlice:0:0 */;
  %151 = strided_slice(%149, begin=[0, 0, 0, 128], end=[1, 20, 20, 256], strides=[1, 1, 1, 1], axes=None) /* ty=Tensor[(1, 20, 20, 128), int8] span=model_10/tf.strided_slice_7/StridedSlice:0:0 */;
  %152 = @tvmgen_default_ethos_n_main_22(%151) /* ty=Tensor[(1, 20, 20, 128), int8] */;
  %153 = qnn.conv2d(%152, %v_param_37, -114 /* ty=int32 span=model_10/tf.math.add_20/Add;model_10/tf.nn.convolution_18/convolution;Const_123:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_20/Add;model_10/tf.nn.convolution_18/convolution;Const_123:0:0 */, 0.0386514f /* ty=float32 span=model_10/tf.math.add_20/Add;model_10/tf.nn.convolution_18/convolution;Const_123:0:0 */, meta[relay.Constant][36] /* ty=Tensor[(128), float32] span=model_10/tf.math.add_20/Add;model_10/tf.nn.convolution_18/convolution;Const_123:0:0 */, padding=[1, 1, 1, 1], channels=128, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 20, 20, 128), int32] span=model_10/tf.math.add_20/Add;model_10/tf.nn.convolution_18/convolution;Const_123:0:0 */;
  %154 = nn.bias_add(%153, %v_param_38, axis=3) /* ty=Tensor[(1, 20, 20, 128), int32] span=model_10/tf.math.add_20/Add;model_10/tf.nn.convolution_18/convolution;Const_123:0:0 */;
  %155 = qnn.requantize(%154, meta[relay.Constant][37] /* ty=Tensor[(128), float32] span=model_10/tf.math.add_20/Add;model_10/tf.nn.convolution_18/convolution;Const_123:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_20/Add;model_10/tf.nn.convolution_18/convolution;Const_123:0:0 */, 0.0401773f /* ty=float32 span=model_10/tf.math.add_20/Add;model_10/tf.nn.convolution_18/convolution;Const_123:0:0 */, -3 /* ty=int32 span=model_10/tf.math.add_20/Add;model_10/tf.nn.convolution_18/convolution;Const_123:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 128), int8] span=model_10/tf.math.add_20/Add;model_10/tf.nn.convolution_18/convolution;Const_123:0:0 */;
  %156 = qnn.dequantize(%155, 0.0401773f /* ty=float32 span=model_10/tf.math.sigmoid_18/Sigmoid:0:0 */, -3 /* ty=int32 span=model_10/tf.math.sigmoid_18/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 20, 20, 128), float32] span=model_10/tf.math.sigmoid_18/Sigmoid:0:0 */;
  %157 = sigmoid(%156) /* ty=Tensor[(1, 20, 20, 128), float32] span=model_10/tf.math.sigmoid_18/Sigmoid:0:0 */;
  %158 = qnn.quantize(%157, 0.00390625f /* ty=float32 span=model_10/tf.math.sigmoid_18/Sigmoid:0:0 */, -128 /* ty=int32 span=model_10/tf.math.sigmoid_18/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 128), int8] span=model_10/tf.math.sigmoid_18/Sigmoid:0:0 */;
  %159 = qnn.mul(%155, %158, 0.0401773f /* ty=float32 span=model_10/tf.math.multiply_77/Mul:0:0 */, -3 /* ty=int32 span=model_10/tf.math.multiply_77/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_10/tf.math.multiply_77/Mul:0:0 */, -128 /* ty=int32 span=model_10/tf.math.multiply_77/Mul:0:0 */, 0.0214877f /* ty=float32 span=model_10/tf.math.multiply_77/Mul:0:0 */, -115 /* ty=int32 span=model_10/tf.math.multiply_77/Mul:0:0 */) /* ty=Tensor[(1, 20, 20, 128), int8] span=model_10/tf.math.multiply_77/Mul:0:0 */;
  %160 = qnn.conv2d(%159, %v_param_39, -115 /* ty=int32 span=model_10/tf.math.add_21/Add;model_10/tf.nn.convolution_19/convolution;Const_121:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_21/Add;model_10/tf.nn.convolution_19/convolution;Const_121:0:0 */, 0.0214877f /* ty=float32 span=model_10/tf.math.add_21/Add;model_10/tf.nn.convolution_19/convolution;Const_121:0:0 */, meta[relay.Constant][38] /* ty=Tensor[(128), float32] span=model_10/tf.math.add_21/Add;model_10/tf.nn.convolution_19/convolution;Const_121:0:0 */, padding=[1, 1, 1, 1], channels=128, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 20, 20, 128), int32] span=model_10/tf.math.add_21/Add;model_10/tf.nn.convolution_19/convolution;Const_121:0:0 */;
  %161 = nn.bias_add(%160, %v_param_40, axis=3) /* ty=Tensor[(1, 20, 20, 128), int32] span=model_10/tf.math.add_21/Add;model_10/tf.nn.convolution_19/convolution;Const_121:0:0 */;
  %162 = qnn.requantize(%161, meta[relay.Constant][39] /* ty=Tensor[(128), float32] span=model_10/tf.math.add_21/Add;model_10/tf.nn.convolution_19/convolution;Const_121:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_21/Add;model_10/tf.nn.convolution_19/convolution;Const_121:0:0 */, 0.0442336f /* ty=float32 span=model_10/tf.math.add_21/Add;model_10/tf.nn.convolution_19/convolution;Const_121:0:0 */, -9 /* ty=int32 span=model_10/tf.math.add_21/Add;model_10/tf.nn.convolution_19/convolution;Const_121:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 128), int8] span=model_10/tf.math.add_21/Add;model_10/tf.nn.convolution_19/convolution;Const_121:0:0 */;
  %163 = qnn.dequantize(%162, 0.0442336f /* ty=float32 span=model_10/tf.math.sigmoid_19/Sigmoid:0:0 */, -9 /* ty=int32 span=model_10/tf.math.sigmoid_19/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 20, 20, 128), float32] span=model_10/tf.math.sigmoid_19/Sigmoid:0:0 */;
  %164 = sigmoid(%163) /* ty=Tensor[(1, 20, 20, 128), float32] span=model_10/tf.math.sigmoid_19/Sigmoid:0:0 */;
  %165 = qnn.quantize(%164, 0.00390625f /* ty=float32 span=model_10/tf.math.sigmoid_19/Sigmoid:0:0 */, -128 /* ty=int32 span=model_10/tf.math.sigmoid_19/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 128), int8] span=model_10/tf.math.sigmoid_19/Sigmoid:0:0 */;
  %166 = qnn.mul(%162, %165, 0.0442336f /* ty=float32 span=model_10/tf.math.multiply_81/Mul:0:0 */, -9 /* ty=int32 span=model_10/tf.math.multiply_81/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_10/tf.math.multiply_81/Mul:0:0 */, -128 /* ty=int32 span=model_10/tf.math.multiply_81/Mul:0:0 */, 0.0386514f /* ty=float32 span=model_10/tf.math.multiply_81/Mul:0:0 */, -114 /* ty=int32 span=model_10/tf.math.multiply_81/Mul:0:0 */) /* ty=Tensor[(1, 20, 20, 128), int8] span=model_10/tf.math.multiply_81/Mul:0:0 */;
  %167 = @tvmgen_default_ethos_n_main_21(%150) /* ty=Tensor[(1, 20, 20, 128), int8] */;
  %168 = qnn.add(%152, %166, 0.0386514f /* ty=float32 span=model_10/tf.math.add_23/Add:0:0 */, -114 /* ty=int32 span=model_10/tf.math.add_23/Add:0:0 */, 0.0386514f /* ty=float32 span=model_10/tf.math.add_23/Add:0:0 */, -114 /* ty=int32 span=model_10/tf.math.add_23/Add:0:0 */, 0.0386514f /* ty=float32 span=model_10/tf.math.add_23/Add:0:0 */, -114 /* ty=int32 span=model_10/tf.math.add_23/Add:0:0 */) /* ty=Tensor[(1, 20, 20, 128), int8] span=model_10/tf.math.add_23/Add:0:0 */;
  %169 = (%167, %152, %168) /* ty=(Tensor[(1, 20, 20, 128), int8], Tensor[(1, 20, 20, 128), int8], Tensor[(1, 20, 20, 128), int8]) span=model_10/tf.concat_3/concat:0:0 */;
  %170 = @tvmgen_default_ethos_n_main_23(%169) /* ty=Tensor[(1, 20, 20, 384), int8] */;
  %171 = qnn.conv2d(%170, %v_param_41, -114 /* ty=int32 span=model_10/tf.math.add_24/Add;model_10/tf.nn.convolution_20/convolution;Const_117:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_24/Add;model_10/tf.nn.convolution_20/convolution;Const_117:0:0 */, 0.0386514f /* ty=float32 span=model_10/tf.math.add_24/Add;model_10/tf.nn.convolution_20/convolution;Const_117:0:0 */, meta[relay.Constant][40] /* ty=Tensor[(256), float32] span=model_10/tf.math.add_24/Add;model_10/tf.nn.convolution_20/convolution;Const_117:0:0 */, padding=[0, 0, 0, 0], channels=256, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 20, 20, 256), int32] span=model_10/tf.math.add_24/Add;model_10/tf.nn.convolution_20/convolution;Const_117:0:0 */;
  %172 = nn.bias_add(%171, %v_param_42, axis=3) /* ty=Tensor[(1, 20, 20, 256), int32] span=model_10/tf.math.add_24/Add;model_10/tf.nn.convolution_20/convolution;Const_117:0:0 */;
  %173 = qnn.requantize(%172, meta[relay.Constant][41] /* ty=Tensor[(256), float32] span=model_10/tf.math.add_24/Add;model_10/tf.nn.convolution_20/convolution;Const_117:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_24/Add;model_10/tf.nn.convolution_20/convolution;Const_117:0:0 */, 0.0447661f /* ty=float32 span=model_10/tf.math.add_24/Add;model_10/tf.nn.convolution_20/convolution;Const_117:0:0 */, 1 /* ty=int32 span=model_10/tf.math.add_24/Add;model_10/tf.nn.convolution_20/convolution;Const_117:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 256), int8] span=model_10/tf.math.add_24/Add;model_10/tf.nn.convolution_20/convolution;Const_117:0:0 */;
  %174 = qnn.dequantize(%173, 0.0447661f /* ty=float32 span=model_10/tf.math.sigmoid_20/Sigmoid:0:0 */, 1 /* ty=int32 span=model_10/tf.math.sigmoid_20/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 20, 20, 256), float32] span=model_10/tf.math.sigmoid_20/Sigmoid:0:0 */;
  %175 = sigmoid(%174) /* ty=Tensor[(1, 20, 20, 256), float32] span=model_10/tf.math.sigmoid_20/Sigmoid:0:0 */;
  %176 = qnn.quantize(%175, 0.00390625f /* ty=float32 span=model_10/tf.math.sigmoid_20/Sigmoid:0:0 */, -128 /* ty=int32 span=model_10/tf.math.sigmoid_20/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 256), int8] span=model_10/tf.math.sigmoid_20/Sigmoid:0:0 */;
  %177 = qnn.mul(%173, %176, 0.0447661f /* ty=float32 span=model_10/tf.math.multiply_87/Mul:0:0 */, 1 /* ty=int32 span=model_10/tf.math.multiply_87/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_10/tf.math.multiply_87/Mul:0:0 */, -128 /* ty=int32 span=model_10/tf.math.multiply_87/Mul:0:0 */, 0.0231551f /* ty=float32 span=model_10/tf.math.multiply_87/Mul:0:0 */, -116 /* ty=int32 span=model_10/tf.math.multiply_87/Mul:0:0 */) /* ty=Tensor[(1, 20, 20, 256), int8] span=model_10/tf.math.multiply_87/Mul:0:0 */;
  %178 = qnn.conv2d(%177, %v_param_43, -116 /* ty=int32 span=model_10/tf.math.add_25/Add;model_10/tf.nn.convolution_21/convolution;Const_115:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_25/Add;model_10/tf.nn.convolution_21/convolution;Const_115:0:0 */, 0.0231551f /* ty=float32 span=model_10/tf.math.add_25/Add;model_10/tf.nn.convolution_21/convolution;Const_115:0:0 */, meta[relay.Constant][42] /* ty=Tensor[(128), float32] span=model_10/tf.math.add_25/Add;model_10/tf.nn.convolution_21/convolution;Const_115:0:0 */, padding=[0, 0, 0, 0], channels=128, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 20, 20, 128), int32] span=model_10/tf.math.add_25/Add;model_10/tf.nn.convolution_21/convolution;Const_115:0:0 */;
  %179 = nn.bias_add(%178, %v_param_44, axis=3) /* ty=Tensor[(1, 20, 20, 128), int32] span=model_10/tf.math.add_25/Add;model_10/tf.nn.convolution_21/convolution;Const_115:0:0 */;
  %180 = qnn.requantize(%179, meta[relay.Constant][43] /* ty=Tensor[(128), float32] span=model_10/tf.math.add_25/Add;model_10/tf.nn.convolution_21/convolution;Const_115:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_25/Add;model_10/tf.nn.convolution_21/convolution;Const_115:0:0 */, 0.0481615f /* ty=float32 span=model_10/tf.math.add_25/Add;model_10/tf.nn.convolution_21/convolution;Const_115:0:0 */, -21 /* ty=int32 span=model_10/tf.math.add_25/Add;model_10/tf.nn.convolution_21/convolution;Const_115:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 128), int8] span=model_10/tf.math.add_25/Add;model_10/tf.nn.convolution_21/convolution;Const_115:0:0 */;
  %181 = qnn.dequantize(%180, 0.0481615f /* ty=float32 span=model_10/tf.math.sigmoid_21/Sigmoid:0:0 */, -21 /* ty=int32 span=model_10/tf.math.sigmoid_21/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 20, 20, 128), float32] span=model_10/tf.math.sigmoid_21/Sigmoid:0:0 */;
  %182 = sigmoid(%181) /* ty=Tensor[(1, 20, 20, 128), float32] span=model_10/tf.math.sigmoid_21/Sigmoid:0:0 */;
  %183 = qnn.quantize(%182, 0.00390625f /* ty=float32 span=model_10/tf.math.sigmoid_21/Sigmoid:0:0 */, -128 /* ty=int32 span=model_10/tf.math.sigmoid_21/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 128), int8] span=model_10/tf.math.sigmoid_21/Sigmoid:0:0 */;
  %184 = qnn.mul(%180, %183, 0.0481615f /* ty=float32 span=model_10/tf.math.multiply_91/Mul:0:0 */, -21 /* ty=int32 span=model_10/tf.math.multiply_91/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_10/tf.math.multiply_91/Mul:0:0 */, -128 /* ty=int32 span=model_10/tf.math.multiply_91/Mul:0:0 */, 0.0289307f /* ty=float32 span=model_10/tf.math.multiply_91/Mul:0:0 */, -118 /* ty=int32 span=model_10/tf.math.multiply_91/Mul:0:0 */) /* ty=Tensor[(1, 20, 20, 128), int8] span=model_10/tf.math.multiply_91/Mul:0:0 */;
  %185 = @tvmgen_default_ethos_n_main_28(%184) /* ty=(Tensor[(1, 20, 20, 128), int8], Tensor[(1, 20, 20, 128), int8], Tensor[(1, 20, 20, 128), int8]) */;
  %186 = %185.0 /* ty=Tensor[(1, 20, 20, 128), int8] */;
  %187 = %185.1 /* ty=Tensor[(1, 20, 20, 128), int8] */;
  %188 = %185.2 /* ty=Tensor[(1, 20, 20, 128), int8] */;
  %189 = (%184, %186, %187, %188) /* ty=(Tensor[(1, 20, 20, 128), int8], Tensor[(1, 20, 20, 128), int8], Tensor[(1, 20, 20, 128), int8], Tensor[(1, 20, 20, 128), int8]) span=model_10/tf.concat_4/concat:0:0 */;
  %190 = @tvmgen_default_ethos_n_main_29(%189) /* ty=Tensor[(1, 20, 20, 512), int8] */;
  %191 = qnn.conv2d(%190, %v_param_45, -118 /* ty=int32 span=model_10/tf.math.add_26/Add;model_10/tf.nn.convolution_22/convolution;Const_113:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_26/Add;model_10/tf.nn.convolution_22/convolution;Const_113:0:0 */, 0.0289307f /* ty=float32 span=model_10/tf.math.add_26/Add;model_10/tf.nn.convolution_22/convolution;Const_113:0:0 */, meta[relay.Constant][44] /* ty=Tensor[(256), float32] span=model_10/tf.math.add_26/Add;model_10/tf.nn.convolution_22/convolution;Const_113:0:0 */, padding=[0, 0, 0, 0], channels=256, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 20, 20, 256), int32] span=model_10/tf.math.add_26/Add;model_10/tf.nn.convolution_22/convolution;Const_113:0:0 */;
  %192 = nn.bias_add(%191, %v_param_46, axis=3) /* ty=Tensor[(1, 20, 20, 256), int32] span=model_10/tf.math.add_26/Add;model_10/tf.nn.convolution_22/convolution;Const_113:0:0 */;
  %193 = qnn.requantize(%192, meta[relay.Constant][45] /* ty=Tensor[(256), float32] span=model_10/tf.math.add_26/Add;model_10/tf.nn.convolution_22/convolution;Const_113:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_26/Add;model_10/tf.nn.convolution_22/convolution;Const_113:0:0 */, 0.0336638f /* ty=float32 span=model_10/tf.math.add_26/Add;model_10/tf.nn.convolution_22/convolution;Const_113:0:0 */, -4 /* ty=int32 span=model_10/tf.math.add_26/Add;model_10/tf.nn.convolution_22/convolution;Const_113:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 256), int8] span=model_10/tf.math.add_26/Add;model_10/tf.nn.convolution_22/convolution;Const_113:0:0 */;
  %194 = qnn.dequantize(%193, 0.0336638f /* ty=float32 span=model_10/tf.math.sigmoid_22/Sigmoid:0:0 */, -4 /* ty=int32 span=model_10/tf.math.sigmoid_22/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 20, 20, 256), float32] span=model_10/tf.math.sigmoid_22/Sigmoid:0:0 */;
  %195 = sigmoid(%194) /* ty=Tensor[(1, 20, 20, 256), float32] span=model_10/tf.math.sigmoid_22/Sigmoid:0:0 */;
  %196 = qnn.quantize(%195, 0.00390625f /* ty=float32 span=model_10/tf.math.sigmoid_22/Sigmoid:0:0 */, -128 /* ty=int32 span=model_10/tf.math.sigmoid_22/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 256), int8] span=model_10/tf.math.sigmoid_22/Sigmoid:0:0 */;
  %197 = qnn.mul(%193, %196, 0.0336638f /* ty=float32 span=model_10/tf.math.multiply_95/Mul:0:0 */, -4 /* ty=int32 span=model_10/tf.math.multiply_95/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_10/tf.math.multiply_95/Mul:0:0 */, -128 /* ty=int32 span=model_10/tf.math.multiply_95/Mul:0:0 */, 0.0181708f /* ty=float32 span=model_10/tf.math.multiply_95/Mul:0:0 */, -113 /* ty=int32 span=model_10/tf.math.multiply_95/Mul:0:0 */) /* ty=Tensor[(1, 20, 20, 256), int8] span=model_10/tf.math.multiply_95/Mul:0:0 */;
  %198 = qnn.conv2d(%197, %v_param_47, -113 /* ty=int32 span=model_10/tf.math.add_27/Add;model_10/tf.nn.convolution_23/convolution;Const_111:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_27/Add;model_10/tf.nn.convolution_23/convolution;Const_111:0:0 */, 0.0181708f /* ty=float32 span=model_10/tf.math.add_27/Add;model_10/tf.nn.convolution_23/convolution;Const_111:0:0 */, meta[relay.Constant][46] /* ty=Tensor[(256), float32] span=model_10/tf.math.add_27/Add;model_10/tf.nn.convolution_23/convolution;Const_111:0:0 */, padding=[0, 0, 0, 0], channels=256, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 20, 20, 256), int32] span=model_10/tf.math.add_27/Add;model_10/tf.nn.convolution_23/convolution;Const_111:0:0 */;
  %199 = nn.bias_add(%198, %v_param_48, axis=3) /* ty=Tensor[(1, 20, 20, 256), int32] span=model_10/tf.math.add_27/Add;model_10/tf.nn.convolution_23/convolution;Const_111:0:0 */;
  %200 = qnn.requantize(%199, meta[relay.Constant][47] /* ty=Tensor[(256), float32] span=model_10/tf.math.add_27/Add;model_10/tf.nn.convolution_23/convolution;Const_111:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_27/Add;model_10/tf.nn.convolution_23/convolution;Const_111:0:0 */, 0.034337f /* ty=float32 span=model_10/tf.math.add_27/Add;model_10/tf.nn.convolution_23/convolution;Const_111:0:0 */, 9 /* ty=int32 span=model_10/tf.math.add_27/Add;model_10/tf.nn.convolution_23/convolution;Const_111:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 256), int8] span=model_10/tf.math.add_27/Add;model_10/tf.nn.convolution_23/convolution;Const_111:0:0 */;
  %201 = qnn.dequantize(%200, 0.034337f /* ty=float32 span=model_10/tf.math.sigmoid_23/Sigmoid:0:0 */, 9 /* ty=int32 span=model_10/tf.math.sigmoid_23/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 20, 20, 256), float32] span=model_10/tf.math.sigmoid_23/Sigmoid:0:0 */;
  %202 = sigmoid(%201) /* ty=Tensor[(1, 20, 20, 256), float32] span=model_10/tf.math.sigmoid_23/Sigmoid:0:0 */;
  %203 = qnn.quantize(%202, 0.00390625f /* ty=float32 span=model_10/tf.math.sigmoid_23/Sigmoid:0:0 */, -128 /* ty=int32 span=model_10/tf.math.sigmoid_23/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 256), int8] span=model_10/tf.math.sigmoid_23/Sigmoid:0:0 */;
  %204 = qnn.mul(%200, %203, 0.034337f /* ty=float32 span=model_10/tf.math.multiply_99/Mul:0:0 */, 9 /* ty=int32 span=model_10/tf.math.multiply_99/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_10/tf.math.multiply_99/Mul:0:0 */, -128 /* ty=int32 span=model_10/tf.math.multiply_99/Mul:0:0 */, 0.024731f /* ty=float32 span=model_10/tf.math.multiply_99/Mul:0:0 */, -105 /* ty=int32 span=model_10/tf.math.multiply_99/Mul:0:0 */) /* ty=Tensor[(1, 20, 20, 256), int8] span=model_10/tf.math.multiply_99/Mul:0:0 */;
  %205 = strided_slice(%204, begin=[0, 0, 0, 0], end=[1, 20, 20, 128], strides=[1, 1, 1, 1], axes=None) /* ty=Tensor[(1, 20, 20, 128), int8] span=model_10/tf.strided_slice_8/StridedSlice:0:0 */;
  %206 = strided_slice(%204, begin=[0, 0, 0, 128], end=[1, 20, 20, 256], strides=[1, 1, 1, 1], axes=None) /* ty=Tensor[(1, 20, 20, 128), int8] span=model_10/tf.strided_slice_9/StridedSlice:0:0 */;
  %207 = @tvmgen_default_ethos_n_main_35(%206) /* ty=Tensor[(1, 20, 20, 128), int8] */;
  %208 = qnn.conv2d(%207, %v_param_49, -105 /* ty=int32 span=model_10/tf.math.add_28/Add;model_10/tf.nn.convolution_24/convolution;Const_107:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_28/Add;model_10/tf.nn.convolution_24/convolution;Const_107:0:0 */, 0.024731f /* ty=float32 span=model_10/tf.math.add_28/Add;model_10/tf.nn.convolution_24/convolution;Const_107:0:0 */, meta[relay.Constant][48] /* ty=Tensor[(128), float32] span=model_10/tf.math.add_28/Add;model_10/tf.nn.convolution_24/convolution;Const_107:0:0 */, padding=[1, 1, 1, 1], channels=128, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 20, 20, 128), int32] span=model_10/tf.math.add_28/Add;model_10/tf.nn.convolution_24/convolution;Const_107:0:0 */;
  %209 = nn.bias_add(%208, %v_param_50, axis=3) /* ty=Tensor[(1, 20, 20, 128), int32] span=model_10/tf.math.add_28/Add;model_10/tf.nn.convolution_24/convolution;Const_107:0:0 */;
  %210 = qnn.requantize(%209, meta[relay.Constant][49] /* ty=Tensor[(128), float32] span=model_10/tf.math.add_28/Add;model_10/tf.nn.convolution_24/convolution;Const_107:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_28/Add;model_10/tf.nn.convolution_24/convolution;Const_107:0:0 */, 0.037209f /* ty=float32 span=model_10/tf.math.add_28/Add;model_10/tf.nn.convolution_24/convolution;Const_107:0:0 */, -11 /* ty=int32 span=model_10/tf.math.add_28/Add;model_10/tf.nn.convolution_24/convolution;Const_107:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 128), int8] span=model_10/tf.math.add_28/Add;model_10/tf.nn.convolution_24/convolution;Const_107:0:0 */;
  %211 = qnn.dequantize(%210, 0.037209f /* ty=float32 span=model_10/tf.math.sigmoid_24/Sigmoid:0:0 */, -11 /* ty=int32 span=model_10/tf.math.sigmoid_24/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 20, 20, 128), float32] span=model_10/tf.math.sigmoid_24/Sigmoid:0:0 */;
  %212 = sigmoid(%211) /* ty=Tensor[(1, 20, 20, 128), float32] span=model_10/tf.math.sigmoid_24/Sigmoid:0:0 */;
  %213 = qnn.quantize(%212, 0.00390625f /* ty=float32 span=model_10/tf.math.sigmoid_24/Sigmoid:0:0 */, -128 /* ty=int32 span=model_10/tf.math.sigmoid_24/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 128), int8] span=model_10/tf.math.sigmoid_24/Sigmoid:0:0 */;
  %214 = qnn.mul(%210, %213, 0.037209f /* ty=float32 span=model_10/tf.math.multiply_103/Mul:0:0 */, -11 /* ty=int32 span=model_10/tf.math.multiply_103/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_10/tf.math.multiply_103/Mul:0:0 */, -128 /* ty=int32 span=model_10/tf.math.multiply_103/Mul:0:0 */, 0.0211125f /* ty=float32 span=model_10/tf.math.multiply_103/Mul:0:0 */, -115 /* ty=int32 span=model_10/tf.math.multiply_103/Mul:0:0 */) /* ty=Tensor[(1, 20, 20, 128), int8] span=model_10/tf.math.multiply_103/Mul:0:0 */;
  %215 = qnn.conv2d(%214, %v_param_51, -115 /* ty=int32 span=model_10/tf.math.add_29/Add;model_10/tf.nn.convolution_25/convolution;Const_105:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_29/Add;model_10/tf.nn.convolution_25/convolution;Const_105:0:0 */, 0.0211125f /* ty=float32 span=model_10/tf.math.add_29/Add;model_10/tf.nn.convolution_25/convolution;Const_105:0:0 */, meta[relay.Constant][50] /* ty=Tensor[(128), float32] span=model_10/tf.math.add_29/Add;model_10/tf.nn.convolution_25/convolution;Const_105:0:0 */, padding=[1, 1, 1, 1], channels=128, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 20, 20, 128), int32] span=model_10/tf.math.add_29/Add;model_10/tf.nn.convolution_25/convolution;Const_105:0:0 */;
  %216 = nn.bias_add(%215, %v_param_52, axis=3) /* ty=Tensor[(1, 20, 20, 128), int32] span=model_10/tf.math.add_29/Add;model_10/tf.nn.convolution_25/convolution;Const_105:0:0 */;
  %217 = qnn.requantize(%216, meta[relay.Constant][51] /* ty=Tensor[(128), float32] span=model_10/tf.math.add_29/Add;model_10/tf.nn.convolution_25/convolution;Const_105:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_29/Add;model_10/tf.nn.convolution_25/convolution;Const_105:0:0 */, 0.0378315f /* ty=float32 span=model_10/tf.math.add_29/Add;model_10/tf.nn.convolution_25/convolution;Const_105:0:0 */, -12 /* ty=int32 span=model_10/tf.math.add_29/Add;model_10/tf.nn.convolution_25/convolution;Const_105:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 128), int8] span=model_10/tf.math.add_29/Add;model_10/tf.nn.convolution_25/convolution;Const_105:0:0 */;
  %218 = qnn.dequantize(%217, 0.0378315f /* ty=float32 span=model_10/tf.math.sigmoid_25/Sigmoid:0:0 */, -12 /* ty=int32 span=model_10/tf.math.sigmoid_25/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 20, 20, 128), float32] span=model_10/tf.math.sigmoid_25/Sigmoid:0:0 */;
  %219 = sigmoid(%218) /* ty=Tensor[(1, 20, 20, 128), float32] span=model_10/tf.math.sigmoid_25/Sigmoid:0:0 */;
  %220 = qnn.quantize(%219, 0.00390625f /* ty=float32 span=model_10/tf.math.sigmoid_25/Sigmoid:0:0 */, -128 /* ty=int32 span=model_10/tf.math.sigmoid_25/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 128), int8] span=model_10/tf.math.sigmoid_25/Sigmoid:0:0 */;
  %221 = qnn.mul(%217, %220, 0.0378315f /* ty=float32 span=model_10/tf.math.multiply_107/Mul:0:0 */, -12 /* ty=int32 span=model_10/tf.math.multiply_107/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_10/tf.math.multiply_107/Mul:0:0 */, -128 /* ty=int32 span=model_10/tf.math.multiply_107/Mul:0:0 */, 0.024731f /* ty=float32 span=model_10/tf.math.multiply_107/Mul:0:0 */, -105 /* ty=int32 span=model_10/tf.math.multiply_107/Mul:0:0 */) /* ty=Tensor[(1, 20, 20, 128), int8] span=model_10/tf.math.multiply_107/Mul:0:0 */;
  %222 = @tvmgen_default_ethos_n_main_34(%205) /* ty=Tensor[(1, 20, 20, 128), int8] */;
  %223 = qnn.add(%207, %221, 0.024731f /* ty=float32 span=model_10/tf.math.add_31/Add:0:0 */, -105 /* ty=int32 span=model_10/tf.math.add_31/Add:0:0 */, 0.024731f /* ty=float32 span=model_10/tf.math.add_31/Add:0:0 */, -105 /* ty=int32 span=model_10/tf.math.add_31/Add:0:0 */, 0.024731f /* ty=float32 span=model_10/tf.math.add_31/Add:0:0 */, -105 /* ty=int32 span=model_10/tf.math.add_31/Add:0:0 */) /* ty=Tensor[(1, 20, 20, 128), int8] span=model_10/tf.math.add_31/Add:0:0 */;
  %224 = (%222, %207, %223) /* ty=(Tensor[(1, 20, 20, 128), int8], Tensor[(1, 20, 20, 128), int8], Tensor[(1, 20, 20, 128), int8]) span=model_10/tf.concat_5/concat:0:0 */;
  %225 = @tvmgen_default_ethos_n_main_36(%224) /* ty=Tensor[(1, 20, 20, 384), int8] */;
  %226 = qnn.conv2d(%225, %v_param_53, -105 /* ty=int32 span=model_10/tf.math.add_32/Add;model_10/tf.nn.convolution_26/convolution;Const_101:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_32/Add;model_10/tf.nn.convolution_26/convolution;Const_101:0:0 */, 0.024731f /* ty=float32 span=model_10/tf.math.add_32/Add;model_10/tf.nn.convolution_26/convolution;Const_101:0:0 */, meta[relay.Constant][52] /* ty=Tensor[(256), float32] span=model_10/tf.math.add_32/Add;model_10/tf.nn.convolution_26/convolution;Const_101:0:0 */, padding=[0, 0, 0, 0], channels=256, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 20, 20, 256), int32] span=model_10/tf.math.add_32/Add;model_10/tf.nn.convolution_26/convolution;Const_101:0:0 */;
  %227 = nn.bias_add(%226, %v_param_54, axis=3) /* ty=Tensor[(1, 20, 20, 256), int32] span=model_10/tf.math.add_32/Add;model_10/tf.nn.convolution_26/convolution;Const_101:0:0 */;
  %228 = qnn.requantize(%227, meta[relay.Constant][53] /* ty=Tensor[(256), float32] span=model_10/tf.math.add_32/Add;model_10/tf.nn.convolution_26/convolution;Const_101:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_32/Add;model_10/tf.nn.convolution_26/convolution;Const_101:0:0 */, 0.0337834f /* ty=float32 span=model_10/tf.math.add_32/Add;model_10/tf.nn.convolution_26/convolution;Const_101:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_32/Add;model_10/tf.nn.convolution_26/convolution;Const_101:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 256), int8] span=model_10/tf.math.add_32/Add;model_10/tf.nn.convolution_26/convolution;Const_101:0:0 */;
  %229 = qnn.dequantize(%228, 0.0337834f /* ty=float32 span=model_10/tf.math.sigmoid_26/Sigmoid:0:0 */, 0 /* ty=int32 span=model_10/tf.math.sigmoid_26/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 20, 20, 256), float32] span=model_10/tf.math.sigmoid_26/Sigmoid:0:0 */;
  %230 = sigmoid(%229) /* ty=Tensor[(1, 20, 20, 256), float32] span=model_10/tf.math.sigmoid_26/Sigmoid:0:0 */;
  %231 = qnn.quantize(%230, 0.00390625f /* ty=float32 span=model_10/tf.math.sigmoid_26/Sigmoid:0:0 */, -128 /* ty=int32 span=model_10/tf.math.sigmoid_26/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 256), int8] span=model_10/tf.math.sigmoid_26/Sigmoid:0:0 */;
  %232 = qnn.mul(%228, %231, 0.0337834f /* ty=float32 span=model_10/tf.math.multiply_113/Mul:0:0 */, 0 /* ty=int32 span=model_10/tf.math.multiply_113/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_10/tf.math.multiply_113/Mul:0:0 */, -128 /* ty=int32 span=model_10/tf.math.multiply_113/Mul:0:0 */, 0.0312304f /* ty=float32 span=model_10/tf.math.multiply_113/Mul:0:0 */, -119 /* ty=int32 span=model_10/tf.math.multiply_113/Mul:0:0 */) /* ty=Tensor[(1, 20, 20, 256), int8] span=model_10/tf.math.multiply_113/Mul:0:0 */;
  %233 = qnn.requantize(%232, 0.0312304f /* ty=float32 span=model_10/tf.math.multiply_113/Mul1:0:0 */, -119 /* ty=int32 span=model_10/tf.math.multiply_113/Mul1:0:0 */, 0.0277646f /* ty=float32 span=model_10/tf.math.multiply_113/Mul1:0:0 */, -118 /* ty=int32 span=model_10/tf.math.multiply_113/Mul1:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 256), int8] span=model_10/tf.math.multiply_113/Mul1:0:0 */;
  %234 = image.resize2d(%233, size=[40, 40], roi=[0f, 0f, 0f, 0f], layout="NHWC", method="nearest_neighbor", rounding_method="round_prefer_ceil") /* ty=Tensor[(1, 40, 40, 256), int8] span=model_10/tf.image.resize/resize/ResizeNearestNeighbor:0:0 */;
  %235 = (%234, %134) /* ty=(Tensor[(1, 40, 40, 256), int8], Tensor[(1, 40, 40, 128), int8]) span=model_10/tf.concat_6/concat:0:0 */;
  %236 = @tvmgen_default_ethos_n_main_41(%235) /* ty=Tensor[(1, 40, 40, 384), int8] */;
  %237 = qnn.conv2d(%236, %v_param_55, -118 /* ty=int32 span=model_10/tf.math.add_33/Add;model_10/tf.nn.convolution_27/convolution;Const_99:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_33/Add;model_10/tf.nn.convolution_27/convolution;Const_99:0:0 */, 0.0277646f /* ty=float32 span=model_10/tf.math.add_33/Add;model_10/tf.nn.convolution_27/convolution;Const_99:0:0 */, meta[relay.Constant][54] /* ty=Tensor[(128), float32] span=model_10/tf.math.add_33/Add;model_10/tf.nn.convolution_27/convolution;Const_99:0:0 */, padding=[0, 0, 0, 0], channels=128, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 40, 40, 128), int32] span=model_10/tf.math.add_33/Add;model_10/tf.nn.convolution_27/convolution;Const_99:0:0 */;
  %238 = nn.bias_add(%237, %v_param_56, axis=3) /* ty=Tensor[(1, 40, 40, 128), int32] span=model_10/tf.math.add_33/Add;model_10/tf.nn.convolution_27/convolution;Const_99:0:0 */;
  %239 = qnn.requantize(%238, meta[relay.Constant][55] /* ty=Tensor[(128), float32] span=model_10/tf.math.add_33/Add;model_10/tf.nn.convolution_27/convolution;Const_99:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_33/Add;model_10/tf.nn.convolution_27/convolution;Const_99:0:0 */, 0.0392135f /* ty=float32 span=model_10/tf.math.add_33/Add;model_10/tf.nn.convolution_27/convolution;Const_99:0:0 */, -3 /* ty=int32 span=model_10/tf.math.add_33/Add;model_10/tf.nn.convolution_27/convolution;Const_99:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 128), int8] span=model_10/tf.math.add_33/Add;model_10/tf.nn.convolution_27/convolution;Const_99:0:0 */;
  %240 = qnn.dequantize(%239, 0.0392135f /* ty=float32 span=model_10/tf.math.sigmoid_27/Sigmoid:0:0 */, -3 /* ty=int32 span=model_10/tf.math.sigmoid_27/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 40, 40, 128), float32] span=model_10/tf.math.sigmoid_27/Sigmoid:0:0 */;
  %241 = sigmoid(%240) /* ty=Tensor[(1, 40, 40, 128), float32] span=model_10/tf.math.sigmoid_27/Sigmoid:0:0 */;
  %242 = qnn.quantize(%241, 0.00390625f /* ty=float32 span=model_10/tf.math.sigmoid_27/Sigmoid:0:0 */, -128 /* ty=int32 span=model_10/tf.math.sigmoid_27/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 128), int8] span=model_10/tf.math.sigmoid_27/Sigmoid:0:0 */;
  %243 = qnn.mul(%239, %242, 0.0392135f /* ty=float32 span=model_10/tf.math.multiply_117/Mul:0:0 */, -3 /* ty=int32 span=model_10/tf.math.multiply_117/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_10/tf.math.multiply_117/Mul:0:0 */, -128 /* ty=int32 span=model_10/tf.math.multiply_117/Mul:0:0 */, 0.030216f /* ty=float32 span=model_10/tf.math.multiply_117/Mul:0:0 */, -119 /* ty=int32 span=model_10/tf.math.multiply_117/Mul:0:0 */) /* ty=Tensor[(1, 40, 40, 128), int8] span=model_10/tf.math.multiply_117/Mul:0:0 */;
  %244 = strided_slice(%243, begin=[0, 0, 0, 0], end=[1, 40, 40, 64], strides=[1, 1, 1, 1], axes=None) /* ty=Tensor[(1, 40, 40, 64), int8] span=model_10/tf.strided_slice_10/StridedSlice:0:0 */;
  %245 = strided_slice(%243, begin=[0, 0, 0, 64], end=[1, 40, 40, 128], strides=[1, 1, 1, 1], axes=None) /* ty=Tensor[(1, 40, 40, 64), int8] span=model_10/tf.strided_slice_11/StridedSlice:0:0 */;
  %246 = @tvmgen_default_ethos_n_main_47(%245) /* ty=Tensor[(1, 40, 40, 64), int8] */;
  %247 = qnn.conv2d(%246, %v_param_57, -119 /* ty=int32 span=model_10/tf.math.add_34/Add;model_10/tf.nn.convolution_28/convolution;Const_95:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_34/Add;model_10/tf.nn.convolution_28/convolution;Const_95:0:0 */, 0.030216f /* ty=float32 span=model_10/tf.math.add_34/Add;model_10/tf.nn.convolution_28/convolution;Const_95:0:0 */, meta[relay.Constant][56] /* ty=Tensor[(64), float32] span=model_10/tf.math.add_34/Add;model_10/tf.nn.convolution_28/convolution;Const_95:0:0 */, padding=[1, 1, 1, 1], channels=64, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 40, 40, 64), int32] span=model_10/tf.math.add_34/Add;model_10/tf.nn.convolution_28/convolution;Const_95:0:0 */;
  %248 = nn.bias_add(%247, %v_param_58, axis=3) /* ty=Tensor[(1, 40, 40, 64), int32] span=model_10/tf.math.add_34/Add;model_10/tf.nn.convolution_28/convolution;Const_95:0:0 */;
  %249 = qnn.requantize(%248, meta[relay.Constant][57] /* ty=Tensor[(64), float32] span=model_10/tf.math.add_34/Add;model_10/tf.nn.convolution_28/convolution;Const_95:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_34/Add;model_10/tf.nn.convolution_28/convolution;Const_95:0:0 */, 0.0477849f /* ty=float32 span=model_10/tf.math.add_34/Add;model_10/tf.nn.convolution_28/convolution;Const_95:0:0 */, -11 /* ty=int32 span=model_10/tf.math.add_34/Add;model_10/tf.nn.convolution_28/convolution;Const_95:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 64), int8] span=model_10/tf.math.add_34/Add;model_10/tf.nn.convolution_28/convolution;Const_95:0:0 */;
  %250 = qnn.dequantize(%249, 0.0477849f /* ty=float32 span=model_10/tf.math.sigmoid_28/Sigmoid:0:0 */, -11 /* ty=int32 span=model_10/tf.math.sigmoid_28/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 40, 40, 64), float32] span=model_10/tf.math.sigmoid_28/Sigmoid:0:0 */;
  %251 = sigmoid(%250) /* ty=Tensor[(1, 40, 40, 64), float32] span=model_10/tf.math.sigmoid_28/Sigmoid:0:0 */;
  %252 = qnn.quantize(%251, 0.00390625f /* ty=float32 span=model_10/tf.math.sigmoid_28/Sigmoid:0:0 */, -128 /* ty=int32 span=model_10/tf.math.sigmoid_28/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 64), int8] span=model_10/tf.math.sigmoid_28/Sigmoid:0:0 */;
  %253 = qnn.mul(%249, %252, 0.0477849f /* ty=float32 span=model_10/tf.math.multiply_121/Mul:0:0 */, -11 /* ty=int32 span=model_10/tf.math.multiply_121/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_10/tf.math.multiply_121/Mul:0:0 */, -128 /* ty=int32 span=model_10/tf.math.multiply_121/Mul:0:0 */, 0.0268737f /* ty=float32 span=model_10/tf.math.multiply_121/Mul:0:0 */, -118 /* ty=int32 span=model_10/tf.math.multiply_121/Mul:0:0 */) /* ty=Tensor[(1, 40, 40, 64), int8] span=model_10/tf.math.multiply_121/Mul:0:0 */;
  %254 = qnn.conv2d(%253, %v_param_59, -118 /* ty=int32 span=model_10/tf.math.add_35/Add;model_10/tf.nn.convolution_29/convolution;Const_93:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_35/Add;model_10/tf.nn.convolution_29/convolution;Const_93:0:0 */, 0.0268737f /* ty=float32 span=model_10/tf.math.add_35/Add;model_10/tf.nn.convolution_29/convolution;Const_93:0:0 */, meta[relay.Constant][58] /* ty=Tensor[(64), float32] span=model_10/tf.math.add_35/Add;model_10/tf.nn.convolution_29/convolution;Const_93:0:0 */, padding=[1, 1, 1, 1], channels=64, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 40, 40, 64), int32] span=model_10/tf.math.add_35/Add;model_10/tf.nn.convolution_29/convolution;Const_93:0:0 */;
  %255 = nn.bias_add(%254, %v_param_60, axis=3) /* ty=Tensor[(1, 40, 40, 64), int32] span=model_10/tf.math.add_35/Add;model_10/tf.nn.convolution_29/convolution;Const_93:0:0 */;
  %256 = qnn.requantize(%255, meta[relay.Constant][59] /* ty=Tensor[(64), float32] span=model_10/tf.math.add_35/Add;model_10/tf.nn.convolution_29/convolution;Const_93:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_35/Add;model_10/tf.nn.convolution_29/convolution;Const_93:0:0 */, 0.0553818f /* ty=float32 span=model_10/tf.math.add_35/Add;model_10/tf.nn.convolution_29/convolution;Const_93:0:0 */, -7 /* ty=int32 span=model_10/tf.math.add_35/Add;model_10/tf.nn.convolution_29/convolution;Const_93:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 64), int8] span=model_10/tf.math.add_35/Add;model_10/tf.nn.convolution_29/convolution;Const_93:0:0 */;
  %257 = qnn.dequantize(%256, 0.0553818f /* ty=float32 span=model_10/tf.math.sigmoid_29/Sigmoid:0:0 */, -7 /* ty=int32 span=model_10/tf.math.sigmoid_29/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 40, 40, 64), float32] span=model_10/tf.math.sigmoid_29/Sigmoid:0:0 */;
  %258 = sigmoid(%257) /* ty=Tensor[(1, 40, 40, 64), float32] span=model_10/tf.math.sigmoid_29/Sigmoid:0:0 */;
  %259 = qnn.quantize(%258, 0.00390625f /* ty=float32 span=model_10/tf.math.sigmoid_29/Sigmoid:0:0 */, -128 /* ty=int32 span=model_10/tf.math.sigmoid_29/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 64), int8] span=model_10/tf.math.sigmoid_29/Sigmoid:0:0 */;
  %260 = @tvmgen_default_ethos_n_main_46(%244) /* ty=Tensor[(1, 40, 40, 64), int8] */;
  %261 = qnn.mul(%256, %259, 0.0553818f /* ty=float32 span=model_10/tf.math.multiply_125/Mul:0:0 */, -7 /* ty=int32 span=model_10/tf.math.multiply_125/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_10/tf.math.multiply_125/Mul:0:0 */, -128 /* ty=int32 span=model_10/tf.math.multiply_125/Mul:0:0 */, 0.030216f /* ty=float32 span=model_10/tf.math.multiply_125/Mul:0:0 */, -119 /* ty=int32 span=model_10/tf.math.multiply_125/Mul:0:0 */) /* ty=Tensor[(1, 40, 40, 64), int8] span=model_10/tf.math.multiply_125/Mul:0:0 */;
  %262 = (%260, %246, %261) /* ty=(Tensor[(1, 40, 40, 64), int8], Tensor[(1, 40, 40, 64), int8], Tensor[(1, 40, 40, 64), int8]) span=model_10/tf.concat_7/concat:0:0 */;
  %263 = @tvmgen_default_ethos_n_main_48(%262) /* ty=Tensor[(1, 40, 40, 192), int8] */;
  %264 = qnn.conv2d(%263, %v_param_61, -119 /* ty=int32 span=model_10/tf.math.add_36/Add;model_10/tf.nn.convolution_30/convolution;Const_89:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_36/Add;model_10/tf.nn.convolution_30/convolution;Const_89:0:0 */, 0.030216f /* ty=float32 span=model_10/tf.math.add_36/Add;model_10/tf.nn.convolution_30/convolution;Const_89:0:0 */, meta[relay.Constant][60] /* ty=Tensor[(128), float32] span=model_10/tf.math.add_36/Add;model_10/tf.nn.convolution_30/convolution;Const_89:0:0 */, padding=[0, 0, 0, 0], channels=128, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 40, 40, 128), int32] span=model_10/tf.math.add_36/Add;model_10/tf.nn.convolution_30/convolution;Const_89:0:0 */;
  %265 = nn.bias_add(%264, %v_param_62, axis=3) /* ty=Tensor[(1, 40, 40, 128), int32] span=model_10/tf.math.add_36/Add;model_10/tf.nn.convolution_30/convolution;Const_89:0:0 */;
  %266 = qnn.requantize(%265, meta[relay.Constant][61] /* ty=Tensor[(128), float32] span=model_10/tf.math.add_36/Add;model_10/tf.nn.convolution_30/convolution;Const_89:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_36/Add;model_10/tf.nn.convolution_30/convolution;Const_89:0:0 */, 0.0494829f /* ty=float32 span=model_10/tf.math.add_36/Add;model_10/tf.nn.convolution_30/convolution;Const_89:0:0 */, -3 /* ty=int32 span=model_10/tf.math.add_36/Add;model_10/tf.nn.convolution_30/convolution;Const_89:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 128), int8] span=model_10/tf.math.add_36/Add;model_10/tf.nn.convolution_30/convolution;Const_89:0:0 */;
  %267 = qnn.dequantize(%266, 0.0494829f /* ty=float32 span=model_10/tf.math.sigmoid_30/Sigmoid:0:0 */, -3 /* ty=int32 span=model_10/tf.math.sigmoid_30/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 40, 40, 128), float32] span=model_10/tf.math.sigmoid_30/Sigmoid:0:0 */;
  %268 = sigmoid(%267) /* ty=Tensor[(1, 40, 40, 128), float32] span=model_10/tf.math.sigmoid_30/Sigmoid:0:0 */;
  %269 = qnn.quantize(%268, 0.00390625f /* ty=float32 span=model_10/tf.math.sigmoid_30/Sigmoid:0:0 */, -128 /* ty=int32 span=model_10/tf.math.sigmoid_30/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 128), int8] span=model_10/tf.math.sigmoid_30/Sigmoid:0:0 */;
  %270 = qnn.mul(%266, %269, 0.0494829f /* ty=float32 span=model_10/tf.math.multiply_129/Mul:0:0 */, -3 /* ty=int32 span=model_10/tf.math.multiply_129/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_10/tf.math.multiply_129/Mul:0:0 */, -128 /* ty=int32 span=model_10/tf.math.multiply_129/Mul:0:0 */, 0.030537f /* ty=float32 span=model_10/tf.math.multiply_129/Mul:0:0 */, -119 /* ty=int32 span=model_10/tf.math.multiply_129/Mul:0:0 */) /* ty=Tensor[(1, 40, 40, 128), int8] span=model_10/tf.math.multiply_129/Mul:0:0 */;
  %271 = qnn.requantize(%270, 0.030537f /* ty=float32 span=model_10/tf.math.multiply_129/Mul1:0:0 */, -119 /* ty=int32 span=model_10/tf.math.multiply_129/Mul1:0:0 */, 0.0341957f /* ty=float32 span=model_10/tf.math.multiply_129/Mul1:0:0 */, -120 /* ty=int32 span=model_10/tf.math.multiply_129/Mul1:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 128), int8] span=model_10/tf.math.multiply_129/Mul1:0:0 */;
  %272 = image.resize2d(%271, size=[80, 80], roi=[0f, 0f, 0f, 0f], layout="NHWC", method="nearest_neighbor", rounding_method="round_prefer_ceil") /* ty=Tensor[(1, 80, 80, 128), int8] span=model_10/tf.image.resize_1/resize/ResizeNearestNeighbor:0:0 */;
  %273 = (%272, %91) /* ty=(Tensor[(1, 80, 80, 128), int8], Tensor[(1, 80, 80, 128), int8]) span=model_10/tf.concat_8/concat:0:0 */;
  %274 = @tvmgen_default_ethos_n_main_53(%273) /* ty=Tensor[(1, 80, 80, 256), int8] */;
  %275 = qnn.conv2d(%274, %v_param_63, -120 /* ty=int32 span=model_10/tf.math.add_37/Add;model_10/tf.nn.convolution_31/convolution;Const_87:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_37/Add;model_10/tf.nn.convolution_31/convolution;Const_87:0:0 */, 0.0341957f /* ty=float32 span=model_10/tf.math.add_37/Add;model_10/tf.nn.convolution_31/convolution;Const_87:0:0 */, meta[relay.Constant][62] /* ty=Tensor[(64), float32] span=model_10/tf.math.add_37/Add;model_10/tf.nn.convolution_31/convolution;Const_87:0:0 */, padding=[0, 0, 0, 0], channels=64, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 80, 80, 64), int32] span=model_10/tf.math.add_37/Add;model_10/tf.nn.convolution_31/convolution;Const_87:0:0 */;
  %276 = nn.bias_add(%275, %v_param_64, axis=3) /* ty=Tensor[(1, 80, 80, 64), int32] span=model_10/tf.math.add_37/Add;model_10/tf.nn.convolution_31/convolution;Const_87:0:0 */;
  %277 = qnn.requantize(%276, meta[relay.Constant][63] /* ty=Tensor[(64), float32] span=model_10/tf.math.add_37/Add;model_10/tf.nn.convolution_31/convolution;Const_87:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_37/Add;model_10/tf.nn.convolution_31/convolution;Const_87:0:0 */, 0.0549361f /* ty=float32 span=model_10/tf.math.add_37/Add;model_10/tf.nn.convolution_31/convolution;Const_87:0:0 */, -12 /* ty=int32 span=model_10/tf.math.add_37/Add;model_10/tf.nn.convolution_31/convolution;Const_87:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 80, 80, 64), int8] span=model_10/tf.math.add_37/Add;model_10/tf.nn.convolution_31/convolution;Const_87:0:0 */;
  %278 = qnn.dequantize(%277, 0.0549361f /* ty=float32 span=model_10/tf.math.sigmoid_31/Sigmoid:0:0 */, -12 /* ty=int32 span=model_10/tf.math.sigmoid_31/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 80, 80, 64), float32] span=model_10/tf.math.sigmoid_31/Sigmoid:0:0 */;
  %279 = sigmoid(%278) /* ty=Tensor[(1, 80, 80, 64), float32] span=model_10/tf.math.sigmoid_31/Sigmoid:0:0 */;
  %280 = qnn.quantize(%279, 0.00390625f /* ty=float32 span=model_10/tf.math.sigmoid_31/Sigmoid:0:0 */, -128 /* ty=int32 span=model_10/tf.math.sigmoid_31/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 80, 80, 64), int8] span=model_10/tf.math.sigmoid_31/Sigmoid:0:0 */;
  %281 = qnn.mul(%277, %280, 0.0549361f /* ty=float32 span=model_10/tf.math.multiply_133/Mul:0:0 */, -12 /* ty=int32 span=model_10/tf.math.multiply_133/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_10/tf.math.multiply_133/Mul:0:0 */, -128 /* ty=int32 span=model_10/tf.math.multiply_133/Mul:0:0 */, 0.0362055f /* ty=float32 span=model_10/tf.math.multiply_133/Mul:0:0 */, -120 /* ty=int32 span=model_10/tf.math.multiply_133/Mul:0:0 */) /* ty=Tensor[(1, 80, 80, 64), int8] span=model_10/tf.math.multiply_133/Mul:0:0 */;
  %282 = strided_slice(%281, begin=[0, 0, 0, 0], end=[1, 80, 80, 32], strides=[1, 1, 1, 1], axes=None) /* ty=Tensor[(1, 80, 80, 32), int8] span=model_10/tf.strided_slice_12/StridedSlice:0:0 */;
  %283 = strided_slice(%281, begin=[0, 0, 0, 32], end=[1, 80, 80, 64], strides=[1, 1, 1, 1], axes=None) /* ty=Tensor[(1, 80, 80, 32), int8] span=model_10/tf.strided_slice_13/StridedSlice:0:0 */;
  %284 = @tvmgen_default_ethos_n_main_59(%283) /* ty=Tensor[(1, 80, 80, 32), int8] */;
  %285 = qnn.conv2d(%284, %v_param_65, -120 /* ty=int32 span=model_10/tf.math.add_38/Add;model_10/tf.nn.convolution_32/convolution;Const_83:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_38/Add;model_10/tf.nn.convolution_32/convolution;Const_83:0:0 */, 0.0362055f /* ty=float32 span=model_10/tf.math.add_38/Add;model_10/tf.nn.convolution_32/convolution;Const_83:0:0 */, meta[relay.Constant][64] /* ty=Tensor[(32), float32] span=model_10/tf.math.add_38/Add;model_10/tf.nn.convolution_32/convolution;Const_83:0:0 */, padding=[1, 1, 1, 1], channels=32, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 80, 80, 32), int32] span=model_10/tf.math.add_38/Add;model_10/tf.nn.convolution_32/convolution;Const_83:0:0 */;
  %286 = nn.bias_add(%285, %v_param_66, axis=3) /* ty=Tensor[(1, 80, 80, 32), int32] span=model_10/tf.math.add_38/Add;model_10/tf.nn.convolution_32/convolution;Const_83:0:0 */;
  %287 = qnn.requantize(%286, meta[relay.Constant][65] /* ty=Tensor[(32), float32] span=model_10/tf.math.add_38/Add;model_10/tf.nn.convolution_32/convolution;Const_83:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_38/Add;model_10/tf.nn.convolution_32/convolution;Const_83:0:0 */, 0.0598487f /* ty=float32 span=model_10/tf.math.add_38/Add;model_10/tf.nn.convolution_32/convolution;Const_83:0:0 */, -10 /* ty=int32 span=model_10/tf.math.add_38/Add;model_10/tf.nn.convolution_32/convolution;Const_83:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 80, 80, 32), int8] span=model_10/tf.math.add_38/Add;model_10/tf.nn.convolution_32/convolution;Const_83:0:0 */;
  %288 = qnn.dequantize(%287, 0.0598487f /* ty=float32 span=model_10/tf.math.sigmoid_32/Sigmoid:0:0 */, -10 /* ty=int32 span=model_10/tf.math.sigmoid_32/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 80, 80, 32), float32] span=model_10/tf.math.sigmoid_32/Sigmoid:0:0 */;
  %289 = sigmoid(%288) /* ty=Tensor[(1, 80, 80, 32), float32] span=model_10/tf.math.sigmoid_32/Sigmoid:0:0 */;
  %290 = qnn.quantize(%289, 0.00390625f /* ty=float32 span=model_10/tf.math.sigmoid_32/Sigmoid:0:0 */, -128 /* ty=int32 span=model_10/tf.math.sigmoid_32/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 80, 80, 32), int8] span=model_10/tf.math.sigmoid_32/Sigmoid:0:0 */;
  %291 = qnn.mul(%287, %290, 0.0598487f /* ty=float32 span=model_10/tf.math.multiply_137/Mul:0:0 */, -10 /* ty=int32 span=model_10/tf.math.multiply_137/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_10/tf.math.multiply_137/Mul:0:0 */, -128 /* ty=int32 span=model_10/tf.math.multiply_137/Mul:0:0 */, 0.0333433f /* ty=float32 span=model_10/tf.math.multiply_137/Mul:0:0 */, -120 /* ty=int32 span=model_10/tf.math.multiply_137/Mul:0:0 */) /* ty=Tensor[(1, 80, 80, 32), int8] span=model_10/tf.math.multiply_137/Mul:0:0 */;
  %292 = qnn.conv2d(%291, %v_param_67, -120 /* ty=int32 span=model_10/tf.math.add_39/Add;model_10/tf.nn.convolution_33/convolution;Const_81:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_39/Add;model_10/tf.nn.convolution_33/convolution;Const_81:0:0 */, 0.0333433f /* ty=float32 span=model_10/tf.math.add_39/Add;model_10/tf.nn.convolution_33/convolution;Const_81:0:0 */, meta[relay.Constant][66] /* ty=Tensor[(32), float32] span=model_10/tf.math.add_39/Add;model_10/tf.nn.convolution_33/convolution;Const_81:0:0 */, padding=[1, 1, 1, 1], channels=32, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 80, 80, 32), int32] span=model_10/tf.math.add_39/Add;model_10/tf.nn.convolution_33/convolution;Const_81:0:0 */;
  %293 = nn.bias_add(%292, %v_param_68, axis=3) /* ty=Tensor[(1, 80, 80, 32), int32] span=model_10/tf.math.add_39/Add;model_10/tf.nn.convolution_33/convolution;Const_81:0:0 */;
  %294 = qnn.requantize(%293, meta[relay.Constant][67] /* ty=Tensor[(32), float32] span=model_10/tf.math.add_39/Add;model_10/tf.nn.convolution_33/convolution;Const_81:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_39/Add;model_10/tf.nn.convolution_33/convolution;Const_81:0:0 */, 0.0619014f /* ty=float32 span=model_10/tf.math.add_39/Add;model_10/tf.nn.convolution_33/convolution;Const_81:0:0 */, -18 /* ty=int32 span=model_10/tf.math.add_39/Add;model_10/tf.nn.convolution_33/convolution;Const_81:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 80, 80, 32), int8] span=model_10/tf.math.add_39/Add;model_10/tf.nn.convolution_33/convolution;Const_81:0:0 */;
  %295 = qnn.dequantize(%294, 0.0619014f /* ty=float32 span=model_10/tf.math.sigmoid_33/Sigmoid:0:0 */, -18 /* ty=int32 span=model_10/tf.math.sigmoid_33/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 80, 80, 32), float32] span=model_10/tf.math.sigmoid_33/Sigmoid:0:0 */;
  %296 = sigmoid(%295) /* ty=Tensor[(1, 80, 80, 32), float32] span=model_10/tf.math.sigmoid_33/Sigmoid:0:0 */;
  %297 = qnn.quantize(%296, 0.00390625f /* ty=float32 span=model_10/tf.math.sigmoid_33/Sigmoid:0:0 */, -128 /* ty=int32 span=model_10/tf.math.sigmoid_33/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 80, 80, 32), int8] span=model_10/tf.math.sigmoid_33/Sigmoid:0:0 */;
  %298 = @tvmgen_default_ethos_n_main_58(%282) /* ty=Tensor[(1, 80, 80, 32), int8] */;
  %299 = qnn.mul(%294, %297, 0.0619014f /* ty=float32 span=model_10/tf.math.multiply_141/Mul:0:0 */, -18 /* ty=int32 span=model_10/tf.math.multiply_141/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_10/tf.math.multiply_141/Mul:0:0 */, -128 /* ty=int32 span=model_10/tf.math.multiply_141/Mul:0:0 */, 0.0362055f /* ty=float32 span=model_10/tf.math.multiply_141/Mul:0:0 */, -120 /* ty=int32 span=model_10/tf.math.multiply_141/Mul:0:0 */) /* ty=Tensor[(1, 80, 80, 32), int8] span=model_10/tf.math.multiply_141/Mul:0:0 */;
  %300 = (%298, %284, %299) /* ty=(Tensor[(1, 80, 80, 32), int8], Tensor[(1, 80, 80, 32), int8], Tensor[(1, 80, 80, 32), int8]) span=model_10/tf.concat_9/concat:0:0 */;
  %301 = @tvmgen_default_ethos_n_main_60(%300) /* ty=Tensor[(1, 80, 80, 96), int8] */;
  %302 = qnn.conv2d(%301, %v_param_69, -120 /* ty=int32 span=model_10/tf.math.add_40/Add;model_10/tf.nn.convolution_34/convolution;Const_77:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_40/Add;model_10/tf.nn.convolution_34/convolution;Const_77:0:0 */, 0.0362055f /* ty=float32 span=model_10/tf.math.add_40/Add;model_10/tf.nn.convolution_34/convolution;Const_77:0:0 */, meta[relay.Constant][68] /* ty=Tensor[(64), float32] span=model_10/tf.math.add_40/Add;model_10/tf.nn.convolution_34/convolution;Const_77:0:0 */, padding=[0, 0, 0, 0], channels=64, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 80, 80, 64), int32] span=model_10/tf.math.add_40/Add;model_10/tf.nn.convolution_34/convolution;Const_77:0:0 */;
  %303 = nn.bias_add(%302, %v_param_70, axis=3) /* ty=Tensor[(1, 80, 80, 64), int32] span=model_10/tf.math.add_40/Add;model_10/tf.nn.convolution_34/convolution;Const_77:0:0 */;
  %304 = qnn.requantize(%303, meta[relay.Constant][69] /* ty=Tensor[(64), float32] span=model_10/tf.math.add_40/Add;model_10/tf.nn.convolution_34/convolution;Const_77:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_40/Add;model_10/tf.nn.convolution_34/convolution;Const_77:0:0 */, 0.0641601f /* ty=float32 span=model_10/tf.math.add_40/Add;model_10/tf.nn.convolution_34/convolution;Const_77:0:0 */, -22 /* ty=int32 span=model_10/tf.math.add_40/Add;model_10/tf.nn.convolution_34/convolution;Const_77:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 80, 80, 64), int8] span=model_10/tf.math.add_40/Add;model_10/tf.nn.convolution_34/convolution;Const_77:0:0 */;
  %305 = qnn.dequantize(%304, 0.0641601f /* ty=float32 span=model_10/tf.math.sigmoid_34/Sigmoid:0:0 */, -22 /* ty=int32 span=model_10/tf.math.sigmoid_34/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 80, 80, 64), float32] span=model_10/tf.math.sigmoid_34/Sigmoid:0:0 */;
  %306 = sigmoid(%305) /* ty=Tensor[(1, 80, 80, 64), float32] span=model_10/tf.math.sigmoid_34/Sigmoid:0:0 */;
  %307 = qnn.quantize(%306, 0.00390625f /* ty=float32 span=model_10/tf.math.sigmoid_34/Sigmoid:0:0 */, -128 /* ty=int32 span=model_10/tf.math.sigmoid_34/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 80, 80, 64), int8] span=model_10/tf.math.sigmoid_34/Sigmoid:0:0 */;
  %308 = qnn.mul(%304, %307, 0.0641601f /* ty=float32 span=model_10/tf.math.multiply_145/Mul:0:0 */, -22 /* ty=int32 span=model_10/tf.math.multiply_145/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_10/tf.math.multiply_145/Mul:0:0 */, -128 /* ty=int32 span=model_10/tf.math.multiply_145/Mul:0:0 */, 0.0385924f /* ty=float32 span=model_10/tf.math.multiply_145/Mul:0:0 */, -121 /* ty=int32 span=model_10/tf.math.multiply_145/Mul:0:0 */) /* ty=Tensor[(1, 80, 80, 64), int8] span=model_10/tf.math.multiply_145/Mul:0:0 */;
  %309 = qnn.conv2d(%308, %v_param_115, -121 /* ty=int32 span=model_10/tf.math.add_42/Add;model_10/tf.nn.convolution_36/convolution;Const_35:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_42/Add;model_10/tf.nn.convolution_36/convolution;Const_35:0:0 */, 0.0385924f /* ty=float32 span=model_10/tf.math.add_42/Add;model_10/tf.nn.convolution_36/convolution;Const_35:0:0 */, meta[relay.Constant][70] /* ty=Tensor[(64), float32] span=model_10/tf.math.add_42/Add;model_10/tf.nn.convolution_36/convolution;Const_35:0:0 */, padding=[1, 1, 1, 1], channels=64, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 80, 80, 64), int32] span=model_10/tf.math.add_42/Add;model_10/tf.nn.convolution_36/convolution;Const_35:0:0 */;
  %310 = nn.bias_add(%309, %v_param_116, axis=3) /* ty=Tensor[(1, 80, 80, 64), int32] span=model_10/tf.math.add_42/Add;model_10/tf.nn.convolution_36/convolution;Const_35:0:0 */;
  %311 = qnn.requantize(%310, meta[relay.Constant][71] /* ty=Tensor[(64), float32] span=model_10/tf.math.add_42/Add;model_10/tf.nn.convolution_36/convolution;Const_35:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_42/Add;model_10/tf.nn.convolution_36/convolution;Const_35:0:0 */, 0.0722534f /* ty=float32 span=model_10/tf.math.add_42/Add;model_10/tf.nn.convolution_36/convolution;Const_35:0:0 */, -12 /* ty=int32 span=model_10/tf.math.add_42/Add;model_10/tf.nn.convolution_36/convolution;Const_35:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 80, 80, 64), int8] span=model_10/tf.math.add_42/Add;model_10/tf.nn.convolution_36/convolution;Const_35:0:0 */;
  %312 = qnn.dequantize(%311, 0.0722534f /* ty=float32 span=model_10/tf.math.sigmoid_36/Sigmoid:0:0 */, -12 /* ty=int32 span=model_10/tf.math.sigmoid_36/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 80, 80, 64), float32] span=model_10/tf.math.sigmoid_36/Sigmoid:0:0 */;
  %313 = sigmoid(%312) /* ty=Tensor[(1, 80, 80, 64), float32] span=model_10/tf.math.sigmoid_36/Sigmoid:0:0 */;
  %314 = qnn.quantize(%313, 0.00390625f /* ty=float32 span=model_10/tf.math.sigmoid_36/Sigmoid:0:0 */, -128 /* ty=int32 span=model_10/tf.math.sigmoid_36/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 80, 80, 64), int8] span=model_10/tf.math.sigmoid_36/Sigmoid:0:0 */;
  %315 = qnn.mul(%311, %314, 0.0722534f /* ty=float32 span=model_10/tf.math.multiply_153/Mul:0:0 */, -12 /* ty=int32 span=model_10/tf.math.multiply_153/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_10/tf.math.multiply_153/Mul:0:0 */, -128 /* ty=int32 span=model_10/tf.math.multiply_153/Mul:0:0 */, 0.0405651f /* ty=float32 span=model_10/tf.math.multiply_153/Mul:0:0 */, -121 /* ty=int32 span=model_10/tf.math.multiply_153/Mul:0:0 */) /* ty=Tensor[(1, 80, 80, 64), int8] span=model_10/tf.math.multiply_153/Mul:0:0 */;
  %316 = qnn.conv2d(%315, %v_param_117, -121 /* ty=int32 span=model_10/tf.math.add_44/Add;model_10/tf.nn.convolution_38/convolution;Const_23:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_44/Add;model_10/tf.nn.convolution_38/convolution;Const_23:0:0 */, 0.0405651f /* ty=float32 span=model_10/tf.math.add_44/Add;model_10/tf.nn.convolution_38/convolution;Const_23:0:0 */, meta[relay.Constant][72] /* ty=Tensor[(64), float32] span=model_10/tf.math.add_44/Add;model_10/tf.nn.convolution_38/convolution;Const_23:0:0 */, padding=[1, 1, 1, 1], channels=64, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 80, 80, 64), int32] span=model_10/tf.math.add_44/Add;model_10/tf.nn.convolution_38/convolution;Const_23:0:0 */;
  %317 = nn.bias_add(%316, %v_param_118, axis=3) /* ty=Tensor[(1, 80, 80, 64), int32] span=model_10/tf.math.add_44/Add;model_10/tf.nn.convolution_38/convolution;Const_23:0:0 */;
  %318 = qnn.requantize(%317, meta[relay.Constant][73] /* ty=Tensor[(64), float32] span=model_10/tf.math.add_44/Add;model_10/tf.nn.convolution_38/convolution;Const_23:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_44/Add;model_10/tf.nn.convolution_38/convolution;Const_23:0:0 */, 0.096096f /* ty=float32 span=model_10/tf.math.add_44/Add;model_10/tf.nn.convolution_38/convolution;Const_23:0:0 */, -5 /* ty=int32 span=model_10/tf.math.add_44/Add;model_10/tf.nn.convolution_38/convolution;Const_23:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 80, 80, 64), int8] span=model_10/tf.math.add_44/Add;model_10/tf.nn.convolution_38/convolution;Const_23:0:0 */;
  %319 = qnn.dequantize(%318, 0.096096f /* ty=float32 span=model_10/tf.math.sigmoid_38/Sigmoid:0:0 */, -5 /* ty=int32 span=model_10/tf.math.sigmoid_38/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 80, 80, 64), float32] span=model_10/tf.math.sigmoid_38/Sigmoid:0:0 */;
  %320 = sigmoid(%319) /* ty=Tensor[(1, 80, 80, 64), float32] span=model_10/tf.math.sigmoid_38/Sigmoid:0:0 */;
  %321 = qnn.quantize(%320, 0.00390625f /* ty=float32 span=model_10/tf.math.sigmoid_38/Sigmoid:0:0 */, -128 /* ty=int32 span=model_10/tf.math.sigmoid_38/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 80, 80, 64), int8] span=model_10/tf.math.sigmoid_38/Sigmoid:0:0 */;
  %322 = qnn.mul(%318, %321, 0.096096f /* ty=float32 span=model_10/tf.math.multiply_161/Mul:0:0 */, -5 /* ty=int32 span=model_10/tf.math.multiply_161/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_10/tf.math.multiply_161/Mul:0:0 */, -128 /* ty=int32 span=model_10/tf.math.multiply_161/Mul:0:0 */, 0.0508723f /* ty=float32 span=model_10/tf.math.multiply_161/Mul:0:0 */, -123 /* ty=int32 span=model_10/tf.math.multiply_161/Mul:0:0 */) /* ty=Tensor[(1, 80, 80, 64), int8] span=model_10/tf.math.multiply_161/Mul:0:0 */;
  %323 = qnn.conv2d(%322, %v_param_119, -123 /* ty=int32 span=model_10/tf.math.add_47/Add;model_10/tf.nn.convolution_41/convolution;Const_12:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_47/Add;model_10/tf.nn.convolution_41/convolution;Const_12:0:0 */, 0.0508723f /* ty=float32 span=model_10/tf.math.add_47/Add;model_10/tf.nn.convolution_41/convolution;Const_12:0:0 */, meta[relay.Constant][74] /* ty=Tensor[(64), float32] span=model_10/tf.math.add_47/Add;model_10/tf.nn.convolution_41/convolution;Const_12:0:0 */, padding=[0, 0, 0, 0], channels=64, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 80, 80, 64), int32] span=model_10/tf.math.add_47/Add;model_10/tf.nn.convolution_41/convolution;Const_12:0:0 */;
  %324 = nn.bias_add(%323, %v_param_120, axis=3) /* ty=Tensor[(1, 80, 80, 64), int32] span=model_10/tf.math.add_47/Add;model_10/tf.nn.convolution_41/convolution;Const_12:0:0 */;
  %325 = qnn.conv2d(%308, %v_param_121, -121 /* ty=int32 span=model_10/tf.math.add_43/Add;model_10/tf.nn.convolution_37/convolution;Const_36:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_43/Add;model_10/tf.nn.convolution_37/convolution;Const_36:0:0 */, 0.0385924f /* ty=float32 span=model_10/tf.math.add_43/Add;model_10/tf.nn.convolution_37/convolution;Const_36:0:0 */, meta[relay.Constant][76] /* ty=Tensor[(64), float32] span=model_10/tf.math.add_43/Add;model_10/tf.nn.convolution_37/convolution;Const_36:0:0 */, padding=[1, 1, 1, 1], channels=64, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 80, 80, 64), int32] span=model_10/tf.math.add_43/Add;model_10/tf.nn.convolution_37/convolution;Const_36:0:0 */;
  %326 = nn.bias_add(%325, %v_param_122, axis=3) /* ty=Tensor[(1, 80, 80, 64), int32] span=model_10/tf.math.add_43/Add;model_10/tf.nn.convolution_37/convolution;Const_36:0:0 */;
  %327 = qnn.requantize(%326, meta[relay.Constant][77] /* ty=Tensor[(64), float32] span=model_10/tf.math.add_43/Add;model_10/tf.nn.convolution_37/convolution;Const_36:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_43/Add;model_10/tf.nn.convolution_37/convolution;Const_36:0:0 */, 0.0674983f /* ty=float32 span=model_10/tf.math.add_43/Add;model_10/tf.nn.convolution_37/convolution;Const_36:0:0 */, -7 /* ty=int32 span=model_10/tf.math.add_43/Add;model_10/tf.nn.convolution_37/convolution;Const_36:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 80, 80, 64), int8] span=model_10/tf.math.add_43/Add;model_10/tf.nn.convolution_37/convolution;Const_36:0:0 */;
  %328 = qnn.dequantize(%327, 0.0674983f /* ty=float32 span=model_10/tf.math.sigmoid_37/Sigmoid:0:0 */, -7 /* ty=int32 span=model_10/tf.math.sigmoid_37/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 80, 80, 64), float32] span=model_10/tf.math.sigmoid_37/Sigmoid:0:0 */;
  %329 = sigmoid(%328) /* ty=Tensor[(1, 80, 80, 64), float32] span=model_10/tf.math.sigmoid_37/Sigmoid:0:0 */;
  %330 = qnn.quantize(%329, 0.00390625f /* ty=float32 span=model_10/tf.math.sigmoid_37/Sigmoid:0:0 */, -128 /* ty=int32 span=model_10/tf.math.sigmoid_37/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 80, 80, 64), int8] span=model_10/tf.math.sigmoid_37/Sigmoid:0:0 */;
  %331 = qnn.mul(%327, %330, 0.0674983f /* ty=float32 span=model_10/tf.math.multiply_157/Mul:0:0 */, -7 /* ty=int32 span=model_10/tf.math.multiply_157/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_10/tf.math.multiply_157/Mul:0:0 */, -128 /* ty=int32 span=model_10/tf.math.multiply_157/Mul:0:0 */, 0.0364854f /* ty=float32 span=model_10/tf.math.multiply_157/Mul:0:0 */, -120 /* ty=int32 span=model_10/tf.math.multiply_157/Mul:0:0 */) /* ty=Tensor[(1, 80, 80, 64), int8] span=model_10/tf.math.multiply_157/Mul:0:0 */;
  %332 = qnn.conv2d(%331, %v_param_123, -120 /* ty=int32 span=model_10/tf.math.add_45/Add;model_10/tf.nn.convolution_39/convolution;Const_24:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_45/Add;model_10/tf.nn.convolution_39/convolution;Const_24:0:0 */, 0.0364854f /* ty=float32 span=model_10/tf.math.add_45/Add;model_10/tf.nn.convolution_39/convolution;Const_24:0:0 */, meta[relay.Constant][78] /* ty=Tensor[(64), float32] span=model_10/tf.math.add_45/Add;model_10/tf.nn.convolution_39/convolution;Const_24:0:0 */, padding=[1, 1, 1, 1], channels=64, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 80, 80, 64), int32] span=model_10/tf.math.add_45/Add;model_10/tf.nn.convolution_39/convolution;Const_24:0:0 */;
  %333 = nn.bias_add(%332, %v_param_124, axis=3) /* ty=Tensor[(1, 80, 80, 64), int32] span=model_10/tf.math.add_45/Add;model_10/tf.nn.convolution_39/convolution;Const_24:0:0 */;
  %334 = qnn.requantize(%333, meta[relay.Constant][79] /* ty=Tensor[(64), float32] span=model_10/tf.math.add_45/Add;model_10/tf.nn.convolution_39/convolution;Const_24:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_45/Add;model_10/tf.nn.convolution_39/convolution;Const_24:0:0 */, 0.0914517f /* ty=float32 span=model_10/tf.math.add_45/Add;model_10/tf.nn.convolution_39/convolution;Const_24:0:0 */, -13 /* ty=int32 span=model_10/tf.math.add_45/Add;model_10/tf.nn.convolution_39/convolution;Const_24:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 80, 80, 64), int8] span=model_10/tf.math.add_45/Add;model_10/tf.nn.convolution_39/convolution;Const_24:0:0 */;
  %335 = qnn.dequantize(%334, 0.0914517f /* ty=float32 span=model_10/tf.math.sigmoid_39/Sigmoid:0:0 */, -13 /* ty=int32 span=model_10/tf.math.sigmoid_39/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 80, 80, 64), float32] span=model_10/tf.math.sigmoid_39/Sigmoid:0:0 */;
  %336 = sigmoid(%335) /* ty=Tensor[(1, 80, 80, 64), float32] span=model_10/tf.math.sigmoid_39/Sigmoid:0:0 */;
  %337 = qnn.quantize(%336, 0.00390625f /* ty=float32 span=model_10/tf.math.sigmoid_39/Sigmoid:0:0 */, -128 /* ty=int32 span=model_10/tf.math.sigmoid_39/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 80, 80, 64), int8] span=model_10/tf.math.sigmoid_39/Sigmoid:0:0 */;
  %338 = qnn.mul(%334, %337, 0.0914517f /* ty=float32 span=model_10/tf.math.multiply_165/Mul:0:0 */, -13 /* ty=int32 span=model_10/tf.math.multiply_165/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_10/tf.math.multiply_165/Mul:0:0 */, -128 /* ty=int32 span=model_10/tf.math.multiply_165/Mul:0:0 */, 0.0512722f /* ty=float32 span=model_10/tf.math.multiply_165/Mul:0:0 */, -123 /* ty=int32 span=model_10/tf.math.multiply_165/Mul:0:0 */) /* ty=Tensor[(1, 80, 80, 64), int8] span=model_10/tf.math.multiply_165/Mul:0:0 */;
  %339 = qnn.conv2d(%338, %v_param_125, -123 /* ty=int32 span=model_10/tf.math.add_48/Add;model_10/tf.nn.convolution_42/convolution;Const_11:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_48/Add;model_10/tf.nn.convolution_42/convolution;Const_11:0:0 */, 0.0512722f /* ty=float32 span=model_10/tf.math.add_48/Add;model_10/tf.nn.convolution_42/convolution;Const_11:0:0 */, meta[relay.Constant][80] /* ty=Tensor[(15), float32] span=model_10/tf.math.add_48/Add;model_10/tf.nn.convolution_42/convolution;Const_11:0:0 */, padding=[0, 0, 0, 0], channels=15, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 80, 80, 15), int32] span=model_10/tf.math.add_48/Add;model_10/tf.nn.convolution_42/convolution;Const_11:0:0 */;
  %340 = nn.bias_add(%339, %v_param_126, axis=3) /* ty=Tensor[(1, 80, 80, 15), int32] span=model_10/tf.math.add_48/Add;model_10/tf.nn.convolution_42/convolution;Const_11:0:0 */;
  %341 = qnn.requantize(%324, meta[relay.Constant][75] /* ty=Tensor[(64), float32] span=model_10/tf.math.add_47/Add;model_10/tf.nn.convolution_41/convolution;Const_12:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_47/Add;model_10/tf.nn.convolution_41/convolution;Const_12:0:0 */, 0.117723f /* ty=float32 span=model_10/tf.math.add_47/Add;model_10/tf.nn.convolution_41/convolution;Const_12:0:0 */, 37 /* ty=int32 span=model_10/tf.math.add_47/Add;model_10/tf.nn.convolution_41/convolution;Const_12:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 80, 80, 64), int8] span=model_10/tf.math.add_47/Add;model_10/tf.nn.convolution_41/convolution;Const_12:0:0 */;
  %342 = qnn.requantize(%340, meta[relay.Constant][81] /* ty=Tensor[(15), float32] span=model_10/tf.math.add_48/Add;model_10/tf.nn.convolution_42/convolution;Const_11:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_48/Add;model_10/tf.nn.convolution_42/convolution;Const_11:0:0 */, 0.117723f /* ty=float32 span=model_10/tf.math.add_48/Add;model_10/tf.nn.convolution_42/convolution;Const_11:0:0 */, 37 /* ty=int32 span=model_10/tf.math.add_48/Add;model_10/tf.nn.convolution_42/convolution;Const_11:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 80, 80, 15), int8] span=model_10/tf.math.add_48/Add;model_10/tf.nn.convolution_42/convolution;Const_11:0:0 */;
  %343 = (%341, %342) /* ty=(Tensor[(1, 80, 80, 64), int8], Tensor[(1, 80, 80, 15), int8]) span=model_10/tf.concat_11/concat:0:0 */;
  %344 = @tvmgen_default_ethos_n_main_65(%343) /* ty=Tensor[(1, 80, 80, 79), int8] */;
  %345 = transpose(%344, axes=[0, 3, 1, 2]) /* ty=Tensor[(1, 79, 80, 80), int8] span=model_10/tf.compat.v1.transpose_46/transpose:0:0 */;
  %346 = nn.pad(%308, -121f /* ty=float32 span=model_10/tf.compat.v1.pad_5/Pad:0:0 */, pad_width=[[0, 0], [1, 1], [1, 1], [0, 0]]) /* ty=Tensor[(1, 82, 82, 64), int8] span=model_10/tf.compat.v1.pad_5/Pad:0:0 */;
  %347 = qnn.conv2d(%346, %v_param_71, -121 /* ty=int32 span=model_10/tf.math.add_41/Add;model_10/tf.nn.convolution_35/convolution;Const_74:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_41/Add;model_10/tf.nn.convolution_35/convolution;Const_74:0:0 */, 0.0385924f /* ty=float32 span=model_10/tf.math.add_41/Add;model_10/tf.nn.convolution_35/convolution;Const_74:0:0 */, meta[relay.Constant][82] /* ty=Tensor[(64), float32] span=model_10/tf.math.add_41/Add;model_10/tf.nn.convolution_35/convolution;Const_74:0:0 */, strides=[2, 2], padding=[0, 0, 0, 0], channels=64, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 40, 40, 64), int32] span=model_10/tf.math.add_41/Add;model_10/tf.nn.convolution_35/convolution;Const_74:0:0 */;
  %348 = nn.bias_add(%347, %v_param_72, axis=3) /* ty=Tensor[(1, 40, 40, 64), int32] span=model_10/tf.math.add_41/Add;model_10/tf.nn.convolution_35/convolution;Const_74:0:0 */;
  %349 = qnn.requantize(%348, meta[relay.Constant][83] /* ty=Tensor[(64), float32] span=model_10/tf.math.add_41/Add;model_10/tf.nn.convolution_35/convolution;Const_74:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_41/Add;model_10/tf.nn.convolution_35/convolution;Const_74:0:0 */, 0.0573061f /* ty=float32 span=model_10/tf.math.add_41/Add;model_10/tf.nn.convolution_35/convolution;Const_74:0:0 */, -4 /* ty=int32 span=model_10/tf.math.add_41/Add;model_10/tf.nn.convolution_35/convolution;Const_74:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 64), int8] span=model_10/tf.math.add_41/Add;model_10/tf.nn.convolution_35/convolution;Const_74:0:0 */;
  %350 = qnn.dequantize(%349, 0.0573061f /* ty=float32 span=model_10/tf.math.sigmoid_35/Sigmoid:0:0 */, -4 /* ty=int32 span=model_10/tf.math.sigmoid_35/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 40, 40, 64), float32] span=model_10/tf.math.sigmoid_35/Sigmoid:0:0 */;
  %351 = sigmoid(%350) /* ty=Tensor[(1, 40, 40, 64), float32] span=model_10/tf.math.sigmoid_35/Sigmoid:0:0 */;
  %352 = qnn.quantize(%351, 0.00390625f /* ty=float32 span=model_10/tf.math.sigmoid_35/Sigmoid:0:0 */, -128 /* ty=int32 span=model_10/tf.math.sigmoid_35/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 64), int8] span=model_10/tf.math.sigmoid_35/Sigmoid:0:0 */;
  %353 = qnn.mul(%349, %352, 0.0573061f /* ty=float32 span=model_10/tf.math.multiply_149/Mul:0:0 */, -4 /* ty=int32 span=model_10/tf.math.multiply_149/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_10/tf.math.multiply_149/Mul:0:0 */, -128 /* ty=int32 span=model_10/tf.math.multiply_149/Mul:0:0 */, 0.030537f /* ty=float32 span=model_10/tf.math.multiply_149/Mul:0:0 */, -119 /* ty=int32 span=model_10/tf.math.multiply_149/Mul:0:0 */) /* ty=Tensor[(1, 40, 40, 64), int8] span=model_10/tf.math.multiply_149/Mul:0:0 */;
  %354 = (%353, %270) /* ty=(Tensor[(1, 40, 40, 64), int8], Tensor[(1, 40, 40, 128), int8]) span=model_10/tf.concat_10/concat:0:0 */;
  %355 = @tvmgen_default_ethos_n_main_71(%354) /* ty=Tensor[(1, 40, 40, 192), int8] */;
  %356 = qnn.conv2d(%355, %v_param_73, -119 /* ty=int32 span=model_10/tf.math.add_46/Add;model_10/tf.nn.convolution_40/convolution;Const_72:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_46/Add;model_10/tf.nn.convolution_40/convolution;Const_72:0:0 */, 0.030537f /* ty=float32 span=model_10/tf.math.add_46/Add;model_10/tf.nn.convolution_40/convolution;Const_72:0:0 */, meta[relay.Constant][84] /* ty=Tensor[(128), float32] span=model_10/tf.math.add_46/Add;model_10/tf.nn.convolution_40/convolution;Const_72:0:0 */, padding=[0, 0, 0, 0], channels=128, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 40, 40, 128), int32] span=model_10/tf.math.add_46/Add;model_10/tf.nn.convolution_40/convolution;Const_72:0:0 */;
  %357 = nn.bias_add(%356, %v_param_74, axis=3) /* ty=Tensor[(1, 40, 40, 128), int32] span=model_10/tf.math.add_46/Add;model_10/tf.nn.convolution_40/convolution;Const_72:0:0 */;
  %358 = qnn.requantize(%357, meta[relay.Constant][85] /* ty=Tensor[(128), float32] span=model_10/tf.math.add_46/Add;model_10/tf.nn.convolution_40/convolution;Const_72:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_46/Add;model_10/tf.nn.convolution_40/convolution;Const_72:0:0 */, 0.0508234f /* ty=float32 span=model_10/tf.math.add_46/Add;model_10/tf.nn.convolution_40/convolution;Const_72:0:0 */, -7 /* ty=int32 span=model_10/tf.math.add_46/Add;model_10/tf.nn.convolution_40/convolution;Const_72:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 128), int8] span=model_10/tf.math.add_46/Add;model_10/tf.nn.convolution_40/convolution;Const_72:0:0 */;
  %359 = qnn.dequantize(%358, 0.0508234f /* ty=float32 span=model_10/tf.math.sigmoid_40/Sigmoid:0:0 */, -7 /* ty=int32 span=model_10/tf.math.sigmoid_40/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 40, 40, 128), float32] span=model_10/tf.math.sigmoid_40/Sigmoid:0:0 */;
  %360 = sigmoid(%359) /* ty=Tensor[(1, 40, 40, 128), float32] span=model_10/tf.math.sigmoid_40/Sigmoid:0:0 */;
  %361 = qnn.quantize(%360, 0.00390625f /* ty=float32 span=model_10/tf.math.sigmoid_40/Sigmoid:0:0 */, -128 /* ty=int32 span=model_10/tf.math.sigmoid_40/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 128), int8] span=model_10/tf.math.sigmoid_40/Sigmoid:0:0 */;
  %362 = qnn.mul(%358, %361, 0.0508234f /* ty=float32 span=model_10/tf.math.multiply_169/Mul:0:0 */, -7 /* ty=int32 span=model_10/tf.math.multiply_169/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_10/tf.math.multiply_169/Mul:0:0 */, -128 /* ty=int32 span=model_10/tf.math.multiply_169/Mul:0:0 */, 0.0286268f /* ty=float32 span=model_10/tf.math.multiply_169/Mul:0:0 */, -118 /* ty=int32 span=model_10/tf.math.multiply_169/Mul:0:0 */) /* ty=Tensor[(1, 40, 40, 128), int8] span=model_10/tf.math.multiply_169/Mul:0:0 */;
  %363 = strided_slice(%362, begin=[0, 0, 0, 0], end=[1, 40, 40, 64], strides=[1, 1, 1, 1], axes=None) /* ty=Tensor[(1, 40, 40, 64), int8] span=model_10/tf.strided_slice_14/StridedSlice:0:0 */;
  %364 = strided_slice(%362, begin=[0, 0, 0, 64], end=[1, 40, 40, 128], strides=[1, 1, 1, 1], axes=None) /* ty=Tensor[(1, 40, 40, 64), int8] span=model_10/tf.strided_slice_15/StridedSlice:0:0 */;
  %365 = @tvmgen_default_ethos_n_main_77(%364) /* ty=Tensor[(1, 40, 40, 64), int8] */;
  %366 = qnn.conv2d(%365, %v_param_75, -118 /* ty=int32 span=model_10/tf.math.add_49/Add;model_10/tf.nn.convolution_43/convolution;Const_68:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_49/Add;model_10/tf.nn.convolution_43/convolution;Const_68:0:0 */, 0.0286268f /* ty=float32 span=model_10/tf.math.add_49/Add;model_10/tf.nn.convolution_43/convolution;Const_68:0:0 */, meta[relay.Constant][86] /* ty=Tensor[(64), float32] span=model_10/tf.math.add_49/Add;model_10/tf.nn.convolution_43/convolution;Const_68:0:0 */, padding=[1, 1, 1, 1], channels=64, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 40, 40, 64), int32] span=model_10/tf.math.add_49/Add;model_10/tf.nn.convolution_43/convolution;Const_68:0:0 */;
  %367 = nn.bias_add(%366, %v_param_76, axis=3) /* ty=Tensor[(1, 40, 40, 64), int32] span=model_10/tf.math.add_49/Add;model_10/tf.nn.convolution_43/convolution;Const_68:0:0 */;
  %368 = qnn.requantize(%367, meta[relay.Constant][87] /* ty=Tensor[(64), float32] span=model_10/tf.math.add_49/Add;model_10/tf.nn.convolution_43/convolution;Const_68:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_49/Add;model_10/tf.nn.convolution_43/convolution;Const_68:0:0 */, 0.0562288f /* ty=float32 span=model_10/tf.math.add_49/Add;model_10/tf.nn.convolution_43/convolution;Const_68:0:0 */, -7 /* ty=int32 span=model_10/tf.math.add_49/Add;model_10/tf.nn.convolution_43/convolution;Const_68:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 64), int8] span=model_10/tf.math.add_49/Add;model_10/tf.nn.convolution_43/convolution;Const_68:0:0 */;
  %369 = qnn.dequantize(%368, 0.0562288f /* ty=float32 span=model_10/tf.math.sigmoid_41/Sigmoid:0:0 */, -7 /* ty=int32 span=model_10/tf.math.sigmoid_41/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 40, 40, 64), float32] span=model_10/tf.math.sigmoid_41/Sigmoid:0:0 */;
  %370 = sigmoid(%369) /* ty=Tensor[(1, 40, 40, 64), float32] span=model_10/tf.math.sigmoid_41/Sigmoid:0:0 */;
  %371 = qnn.quantize(%370, 0.00390625f /* ty=float32 span=model_10/tf.math.sigmoid_41/Sigmoid:0:0 */, -128 /* ty=int32 span=model_10/tf.math.sigmoid_41/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 64), int8] span=model_10/tf.math.sigmoid_41/Sigmoid:0:0 */;
  %372 = qnn.mul(%368, %371, 0.0562288f /* ty=float32 span=model_10/tf.math.multiply_173/Mul:0:0 */, -7 /* ty=int32 span=model_10/tf.math.multiply_173/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_10/tf.math.multiply_173/Mul:0:0 */, -128 /* ty=int32 span=model_10/tf.math.multiply_173/Mul:0:0 */, 0.0307217f /* ty=float32 span=model_10/tf.math.multiply_173/Mul:0:0 */, -119 /* ty=int32 span=model_10/tf.math.multiply_173/Mul:0:0 */) /* ty=Tensor[(1, 40, 40, 64), int8] span=model_10/tf.math.multiply_173/Mul:0:0 */;
  %373 = qnn.conv2d(%372, %v_param_77, -119 /* ty=int32 span=model_10/tf.math.add_50/Add;model_10/tf.nn.convolution_44/convolution;Const_66:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_50/Add;model_10/tf.nn.convolution_44/convolution;Const_66:0:0 */, 0.0307217f /* ty=float32 span=model_10/tf.math.add_50/Add;model_10/tf.nn.convolution_44/convolution;Const_66:0:0 */, meta[relay.Constant][88] /* ty=Tensor[(64), float32] span=model_10/tf.math.add_50/Add;model_10/tf.nn.convolution_44/convolution;Const_66:0:0 */, padding=[1, 1, 1, 1], channels=64, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 40, 40, 64), int32] span=model_10/tf.math.add_50/Add;model_10/tf.nn.convolution_44/convolution;Const_66:0:0 */;
  %374 = nn.bias_add(%373, %v_param_78, axis=3) /* ty=Tensor[(1, 40, 40, 64), int32] span=model_10/tf.math.add_50/Add;model_10/tf.nn.convolution_44/convolution;Const_66:0:0 */;
  %375 = qnn.requantize(%374, meta[relay.Constant][89] /* ty=Tensor[(64), float32] span=model_10/tf.math.add_50/Add;model_10/tf.nn.convolution_44/convolution;Const_66:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_50/Add;model_10/tf.nn.convolution_44/convolution;Const_66:0:0 */, 0.0538891f /* ty=float32 span=model_10/tf.math.add_50/Add;model_10/tf.nn.convolution_44/convolution;Const_66:0:0 */, -3 /* ty=int32 span=model_10/tf.math.add_50/Add;model_10/tf.nn.convolution_44/convolution;Const_66:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 64), int8] span=model_10/tf.math.add_50/Add;model_10/tf.nn.convolution_44/convolution;Const_66:0:0 */;
  %376 = qnn.dequantize(%375, 0.0538891f /* ty=float32 span=model_10/tf.math.sigmoid_42/Sigmoid:0:0 */, -3 /* ty=int32 span=model_10/tf.math.sigmoid_42/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 40, 40, 64), float32] span=model_10/tf.math.sigmoid_42/Sigmoid:0:0 */;
  %377 = sigmoid(%376) /* ty=Tensor[(1, 40, 40, 64), float32] span=model_10/tf.math.sigmoid_42/Sigmoid:0:0 */;
  %378 = qnn.quantize(%377, 0.00390625f /* ty=float32 span=model_10/tf.math.sigmoid_42/Sigmoid:0:0 */, -128 /* ty=int32 span=model_10/tf.math.sigmoid_42/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 64), int8] span=model_10/tf.math.sigmoid_42/Sigmoid:0:0 */;
  %379 = @tvmgen_default_ethos_n_main_76(%363) /* ty=Tensor[(1, 40, 40, 64), int8] */;
  %380 = qnn.mul(%375, %378, 0.0538891f /* ty=float32 span=model_10/tf.math.multiply_177/Mul:0:0 */, -3 /* ty=int32 span=model_10/tf.math.multiply_177/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_10/tf.math.multiply_177/Mul:0:0 */, -128 /* ty=int32 span=model_10/tf.math.multiply_177/Mul:0:0 */, 0.0286268f /* ty=float32 span=model_10/tf.math.multiply_177/Mul:0:0 */, -118 /* ty=int32 span=model_10/tf.math.multiply_177/Mul:0:0 */) /* ty=Tensor[(1, 40, 40, 64), int8] span=model_10/tf.math.multiply_177/Mul:0:0 */;
  %381 = (%379, %365, %380) /* ty=(Tensor[(1, 40, 40, 64), int8], Tensor[(1, 40, 40, 64), int8], Tensor[(1, 40, 40, 64), int8]) span=model_10/tf.concat_12/concat:0:0 */;
  %382 = @tvmgen_default_ethos_n_main_78(%381) /* ty=Tensor[(1, 40, 40, 192), int8] */;
  %383 = qnn.conv2d(%382, %v_param_79, -118 /* ty=int32 span=model_10/tf.math.add_51/Add;model_10/tf.nn.convolution_45/convolution;Const_62:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_51/Add;model_10/tf.nn.convolution_45/convolution;Const_62:0:0 */, 0.0286268f /* ty=float32 span=model_10/tf.math.add_51/Add;model_10/tf.nn.convolution_45/convolution;Const_62:0:0 */, meta[relay.Constant][90] /* ty=Tensor[(128), float32] span=model_10/tf.math.add_51/Add;model_10/tf.nn.convolution_45/convolution;Const_62:0:0 */, padding=[0, 0, 0, 0], channels=128, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 40, 40, 128), int32] span=model_10/tf.math.add_51/Add;model_10/tf.nn.convolution_45/convolution;Const_62:0:0 */;
  %384 = nn.bias_add(%383, %v_param_80, axis=3) /* ty=Tensor[(1, 40, 40, 128), int32] span=model_10/tf.math.add_51/Add;model_10/tf.nn.convolution_45/convolution;Const_62:0:0 */;
  %385 = qnn.requantize(%384, meta[relay.Constant][91] /* ty=Tensor[(128), float32] span=model_10/tf.math.add_51/Add;model_10/tf.nn.convolution_45/convolution;Const_62:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_51/Add;model_10/tf.nn.convolution_45/convolution;Const_62:0:0 */, 0.0641318f /* ty=float32 span=model_10/tf.math.add_51/Add;model_10/tf.nn.convolution_45/convolution;Const_62:0:0 */, -3 /* ty=int32 span=model_10/tf.math.add_51/Add;model_10/tf.nn.convolution_45/convolution;Const_62:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 128), int8] span=model_10/tf.math.add_51/Add;model_10/tf.nn.convolution_45/convolution;Const_62:0:0 */;
  %386 = qnn.dequantize(%385, 0.0641318f /* ty=float32 span=model_10/tf.math.sigmoid_43/Sigmoid:0:0 */, -3 /* ty=int32 span=model_10/tf.math.sigmoid_43/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 40, 40, 128), float32] span=model_10/tf.math.sigmoid_43/Sigmoid:0:0 */;
  %387 = sigmoid(%386) /* ty=Tensor[(1, 40, 40, 128), float32] span=model_10/tf.math.sigmoid_43/Sigmoid:0:0 */;
  %388 = qnn.quantize(%387, 0.00390625f /* ty=float32 span=model_10/tf.math.sigmoid_43/Sigmoid:0:0 */, -128 /* ty=int32 span=model_10/tf.math.sigmoid_43/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 128), int8] span=model_10/tf.math.sigmoid_43/Sigmoid:0:0 */;
  %389 = qnn.mul(%385, %388, 0.0641318f /* ty=float32 span=model_10/tf.math.multiply_181/Mul:0:0 */, -3 /* ty=int32 span=model_10/tf.math.multiply_181/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_10/tf.math.multiply_181/Mul:0:0 */, -128 /* ty=int32 span=model_10/tf.math.multiply_181/Mul:0:0 */, 0.0337268f /* ty=float32 span=model_10/tf.math.multiply_181/Mul:0:0 */, -120 /* ty=int32 span=model_10/tf.math.multiply_181/Mul:0:0 */) /* ty=Tensor[(1, 40, 40, 128), int8] span=model_10/tf.math.multiply_181/Mul:0:0 */;
  %390 = qnn.conv2d(%389, %v_param_103, -120 /* ty=int32 span=model_10/tf.math.add_53/Add;model_10/tf.nn.convolution_47/convolution;Const_37:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_53/Add;model_10/tf.nn.convolution_47/convolution;Const_37:0:0 */, 0.0337268f /* ty=float32 span=model_10/tf.math.add_53/Add;model_10/tf.nn.convolution_47/convolution;Const_37:0:0 */, meta[relay.Constant][92] /* ty=Tensor[(64), float32] span=model_10/tf.math.add_53/Add;model_10/tf.nn.convolution_47/convolution;Const_37:0:0 */, padding=[1, 1, 1, 1], channels=64, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 40, 40, 64), int32] span=model_10/tf.math.add_53/Add;model_10/tf.nn.convolution_47/convolution;Const_37:0:0 */;
  %391 = nn.bias_add(%390, %v_param_104, axis=3) /* ty=Tensor[(1, 40, 40, 64), int32] span=model_10/tf.math.add_53/Add;model_10/tf.nn.convolution_47/convolution;Const_37:0:0 */;
  %392 = qnn.requantize(%391, meta[relay.Constant][93] /* ty=Tensor[(64), float32] span=model_10/tf.math.add_53/Add;model_10/tf.nn.convolution_47/convolution;Const_37:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_53/Add;model_10/tf.nn.convolution_47/convolution;Const_37:0:0 */, 0.0625913f /* ty=float32 span=model_10/tf.math.add_53/Add;model_10/tf.nn.convolution_47/convolution;Const_37:0:0 */, -8 /* ty=int32 span=model_10/tf.math.add_53/Add;model_10/tf.nn.convolution_47/convolution;Const_37:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 64), int8] span=model_10/tf.math.add_53/Add;model_10/tf.nn.convolution_47/convolution;Const_37:0:0 */;
  %393 = qnn.dequantize(%392, 0.0625913f /* ty=float32 span=model_10/tf.math.sigmoid_45/Sigmoid:0:0 */, -8 /* ty=int32 span=model_10/tf.math.sigmoid_45/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 40, 40, 64), float32] span=model_10/tf.math.sigmoid_45/Sigmoid:0:0 */;
  %394 = sigmoid(%393) /* ty=Tensor[(1, 40, 40, 64), float32] span=model_10/tf.math.sigmoid_45/Sigmoid:0:0 */;
  %395 = qnn.quantize(%394, 0.00390625f /* ty=float32 span=model_10/tf.math.sigmoid_45/Sigmoid:0:0 */, -128 /* ty=int32 span=model_10/tf.math.sigmoid_45/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 64), int8] span=model_10/tf.math.sigmoid_45/Sigmoid:0:0 */;
  %396 = qnn.mul(%392, %395, 0.0625913f /* ty=float32 span=model_10/tf.math.multiply_189/Mul:0:0 */, -8 /* ty=int32 span=model_10/tf.math.multiply_189/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_10/tf.math.multiply_189/Mul:0:0 */, -128 /* ty=int32 span=model_10/tf.math.multiply_189/Mul:0:0 */, 0.0341786f /* ty=float32 span=model_10/tf.math.multiply_189/Mul:0:0 */, -120 /* ty=int32 span=model_10/tf.math.multiply_189/Mul:0:0 */) /* ty=Tensor[(1, 40, 40, 64), int8] span=model_10/tf.math.multiply_189/Mul:0:0 */;
  %397 = qnn.conv2d(%396, %v_param_105, -120 /* ty=int32 span=model_10/tf.math.add_55/Add;model_10/tf.nn.convolution_49/convolution;Const_25:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_55/Add;model_10/tf.nn.convolution_49/convolution;Const_25:0:0 */, 0.0341786f /* ty=float32 span=model_10/tf.math.add_55/Add;model_10/tf.nn.convolution_49/convolution;Const_25:0:0 */, meta[relay.Constant][94] /* ty=Tensor[(64), float32] span=model_10/tf.math.add_55/Add;model_10/tf.nn.convolution_49/convolution;Const_25:0:0 */, padding=[1, 1, 1, 1], channels=64, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 40, 40, 64), int32] span=model_10/tf.math.add_55/Add;model_10/tf.nn.convolution_49/convolution;Const_25:0:0 */;
  %398 = nn.bias_add(%397, %v_param_106, axis=3) /* ty=Tensor[(1, 40, 40, 64), int32] span=model_10/tf.math.add_55/Add;model_10/tf.nn.convolution_49/convolution;Const_25:0:0 */;
  %399 = qnn.requantize(%398, meta[relay.Constant][95] /* ty=Tensor[(64), float32] span=model_10/tf.math.add_55/Add;model_10/tf.nn.convolution_49/convolution;Const_25:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_55/Add;model_10/tf.nn.convolution_49/convolution;Const_25:0:0 */, 0.0772937f /* ty=float32 span=model_10/tf.math.add_55/Add;model_10/tf.nn.convolution_49/convolution;Const_25:0:0 */, -10 /* ty=int32 span=model_10/tf.math.add_55/Add;model_10/tf.nn.convolution_49/convolution;Const_25:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 64), int8] span=model_10/tf.math.add_55/Add;model_10/tf.nn.convolution_49/convolution;Const_25:0:0 */;
  %400 = qnn.dequantize(%399, 0.0772937f /* ty=float32 span=model_10/tf.math.sigmoid_47/Sigmoid:0:0 */, -10 /* ty=int32 span=model_10/tf.math.sigmoid_47/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 40, 40, 64), float32] span=model_10/tf.math.sigmoid_47/Sigmoid:0:0 */;
  %401 = sigmoid(%400) /* ty=Tensor[(1, 40, 40, 64), float32] span=model_10/tf.math.sigmoid_47/Sigmoid:0:0 */;
  %402 = qnn.quantize(%401, 0.00390625f /* ty=float32 span=model_10/tf.math.sigmoid_47/Sigmoid:0:0 */, -128 /* ty=int32 span=model_10/tf.math.sigmoid_47/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 64), int8] span=model_10/tf.math.sigmoid_47/Sigmoid:0:0 */;
  %403 = qnn.mul(%399, %402, 0.0772937f /* ty=float32 span=model_10/tf.math.multiply_197/Mul:0:0 */, -10 /* ty=int32 span=model_10/tf.math.multiply_197/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_10/tf.math.multiply_197/Mul:0:0 */, -128 /* ty=int32 span=model_10/tf.math.multiply_197/Mul:0:0 */, 0.0425826f /* ty=float32 span=model_10/tf.math.multiply_197/Mul:0:0 */, -121 /* ty=int32 span=model_10/tf.math.multiply_197/Mul:0:0 */) /* ty=Tensor[(1, 40, 40, 64), int8] span=model_10/tf.math.multiply_197/Mul:0:0 */;
  %404 = qnn.conv2d(%403, %v_param_107, -121 /* ty=int32 span=model_10/tf.math.add_58/Add;model_10/tf.nn.convolution_52/convolution;Const_14:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_58/Add;model_10/tf.nn.convolution_52/convolution;Const_14:0:0 */, 0.0425826f /* ty=float32 span=model_10/tf.math.add_58/Add;model_10/tf.nn.convolution_52/convolution;Const_14:0:0 */, meta[relay.Constant][96] /* ty=Tensor[(64), float32] span=model_10/tf.math.add_58/Add;model_10/tf.nn.convolution_52/convolution;Const_14:0:0 */, padding=[0, 0, 0, 0], channels=64, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 40, 40, 64), int32] span=model_10/tf.math.add_58/Add;model_10/tf.nn.convolution_52/convolution;Const_14:0:0 */;
  %405 = nn.bias_add(%404, %v_param_108, axis=3) /* ty=Tensor[(1, 40, 40, 64), int32] span=model_10/tf.math.add_58/Add;model_10/tf.nn.convolution_52/convolution;Const_14:0:0 */;
  %406 = qnn.conv2d(%389, %v_param_109, -120 /* ty=int32 span=model_10/tf.math.add_54/Add;model_10/tf.nn.convolution_48/convolution;Const_38:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_54/Add;model_10/tf.nn.convolution_48/convolution;Const_38:0:0 */, 0.0337268f /* ty=float32 span=model_10/tf.math.add_54/Add;model_10/tf.nn.convolution_48/convolution;Const_38:0:0 */, meta[relay.Constant][98] /* ty=Tensor[(64), float32] span=model_10/tf.math.add_54/Add;model_10/tf.nn.convolution_48/convolution;Const_38:0:0 */, padding=[1, 1, 1, 1], channels=64, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 40, 40, 64), int32] span=model_10/tf.math.add_54/Add;model_10/tf.nn.convolution_48/convolution;Const_38:0:0 */;
  %407 = nn.bias_add(%406, %v_param_110, axis=3) /* ty=Tensor[(1, 40, 40, 64), int32] span=model_10/tf.math.add_54/Add;model_10/tf.nn.convolution_48/convolution;Const_38:0:0 */;
  %408 = qnn.requantize(%407, meta[relay.Constant][99] /* ty=Tensor[(64), float32] span=model_10/tf.math.add_54/Add;model_10/tf.nn.convolution_48/convolution;Const_38:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_54/Add;model_10/tf.nn.convolution_48/convolution;Const_38:0:0 */, 0.0707587f /* ty=float32 span=model_10/tf.math.add_54/Add;model_10/tf.nn.convolution_48/convolution;Const_38:0:0 */, -30 /* ty=int32 span=model_10/tf.math.add_54/Add;model_10/tf.nn.convolution_48/convolution;Const_38:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 64), int8] span=model_10/tf.math.add_54/Add;model_10/tf.nn.convolution_48/convolution;Const_38:0:0 */;
  %409 = qnn.dequantize(%408, 0.0707587f /* ty=float32 span=model_10/tf.math.sigmoid_46/Sigmoid:0:0 */, -30 /* ty=int32 span=model_10/tf.math.sigmoid_46/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 40, 40, 64), float32] span=model_10/tf.math.sigmoid_46/Sigmoid:0:0 */;
  %410 = sigmoid(%409) /* ty=Tensor[(1, 40, 40, 64), float32] span=model_10/tf.math.sigmoid_46/Sigmoid:0:0 */;
  %411 = qnn.quantize(%410, 0.00390625f /* ty=float32 span=model_10/tf.math.sigmoid_46/Sigmoid:0:0 */, -128 /* ty=int32 span=model_10/tf.math.sigmoid_46/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 64), int8] span=model_10/tf.math.sigmoid_46/Sigmoid:0:0 */;
  %412 = qnn.mul(%408, %411, 0.0707587f /* ty=float32 span=model_10/tf.math.multiply_193/Mul:0:0 */, -30 /* ty=int32 span=model_10/tf.math.multiply_193/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_10/tf.math.multiply_193/Mul:0:0 */, -128 /* ty=int32 span=model_10/tf.math.multiply_193/Mul:0:0 */, 0.0446276f /* ty=float32 span=model_10/tf.math.multiply_193/Mul:0:0 */, -122 /* ty=int32 span=model_10/tf.math.multiply_193/Mul:0:0 */) /* ty=Tensor[(1, 40, 40, 64), int8] span=model_10/tf.math.multiply_193/Mul:0:0 */;
  %413 = qnn.conv2d(%412, %v_param_111, -122 /* ty=int32 span=model_10/tf.math.add_56/Add;model_10/tf.nn.convolution_50/convolution;Const_26:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_56/Add;model_10/tf.nn.convolution_50/convolution;Const_26:0:0 */, 0.0446276f /* ty=float32 span=model_10/tf.math.add_56/Add;model_10/tf.nn.convolution_50/convolution;Const_26:0:0 */, meta[relay.Constant][100] /* ty=Tensor[(64), float32] span=model_10/tf.math.add_56/Add;model_10/tf.nn.convolution_50/convolution;Const_26:0:0 */, padding=[1, 1, 1, 1], channels=64, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 40, 40, 64), int32] span=model_10/tf.math.add_56/Add;model_10/tf.nn.convolution_50/convolution;Const_26:0:0 */;
  %414 = nn.bias_add(%413, %v_param_112, axis=3) /* ty=Tensor[(1, 40, 40, 64), int32] span=model_10/tf.math.add_56/Add;model_10/tf.nn.convolution_50/convolution;Const_26:0:0 */;
  %415 = qnn.requantize(%414, meta[relay.Constant][101] /* ty=Tensor[(64), float32] span=model_10/tf.math.add_56/Add;model_10/tf.nn.convolution_50/convolution;Const_26:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_56/Add;model_10/tf.nn.convolution_50/convolution;Const_26:0:0 */, 0.0945345f /* ty=float32 span=model_10/tf.math.add_56/Add;model_10/tf.nn.convolution_50/convolution;Const_26:0:0 */, -35 /* ty=int32 span=model_10/tf.math.add_56/Add;model_10/tf.nn.convolution_50/convolution;Const_26:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 64), int8] span=model_10/tf.math.add_56/Add;model_10/tf.nn.convolution_50/convolution;Const_26:0:0 */;
  %416 = qnn.dequantize(%415, 0.0945345f /* ty=float32 span=model_10/tf.math.sigmoid_48/Sigmoid:0:0 */, -35 /* ty=int32 span=model_10/tf.math.sigmoid_48/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 40, 40, 64), float32] span=model_10/tf.math.sigmoid_48/Sigmoid:0:0 */;
  %417 = sigmoid(%416) /* ty=Tensor[(1, 40, 40, 64), float32] span=model_10/tf.math.sigmoid_48/Sigmoid:0:0 */;
  %418 = qnn.quantize(%417, 0.00390625f /* ty=float32 span=model_10/tf.math.sigmoid_48/Sigmoid:0:0 */, -128 /* ty=int32 span=model_10/tf.math.sigmoid_48/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 64), int8] span=model_10/tf.math.sigmoid_48/Sigmoid:0:0 */;
  %419 = qnn.mul(%415, %418, 0.0945345f /* ty=float32 span=model_10/tf.math.multiply_201/Mul:0:0 */, -35 /* ty=int32 span=model_10/tf.math.multiply_201/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_10/tf.math.multiply_201/Mul:0:0 */, -128 /* ty=int32 span=model_10/tf.math.multiply_201/Mul:0:0 */, 0.0613202f /* ty=float32 span=model_10/tf.math.multiply_201/Mul:0:0 */, -123 /* ty=int32 span=model_10/tf.math.multiply_201/Mul:0:0 */) /* ty=Tensor[(1, 40, 40, 64), int8] span=model_10/tf.math.multiply_201/Mul:0:0 */;
  %420 = qnn.conv2d(%419, %v_param_113, -123 /* ty=int32 span=model_10/tf.math.add_59/Add;model_10/tf.nn.convolution_53/convolution;Const_13:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_59/Add;model_10/tf.nn.convolution_53/convolution;Const_13:0:0 */, 0.0613202f /* ty=float32 span=model_10/tf.math.add_59/Add;model_10/tf.nn.convolution_53/convolution;Const_13:0:0 */, meta[relay.Constant][102] /* ty=Tensor[(15), float32] span=model_10/tf.math.add_59/Add;model_10/tf.nn.convolution_53/convolution;Const_13:0:0 */, padding=[0, 0, 0, 0], channels=15, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 40, 40, 15), int32] span=model_10/tf.math.add_59/Add;model_10/tf.nn.convolution_53/convolution;Const_13:0:0 */;
  %421 = nn.bias_add(%420, %v_param_114, axis=3) /* ty=Tensor[(1, 40, 40, 15), int32] span=model_10/tf.math.add_59/Add;model_10/tf.nn.convolution_53/convolution;Const_13:0:0 */;
  %422 = qnn.requantize(%405, meta[relay.Constant][97] /* ty=Tensor[(64), float32] span=model_10/tf.math.add_58/Add;model_10/tf.nn.convolution_52/convolution;Const_14:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_58/Add;model_10/tf.nn.convolution_52/convolution;Const_14:0:0 */, 0.117723f /* ty=float32 span=model_10/tf.math.add_58/Add;model_10/tf.nn.convolution_52/convolution;Const_14:0:0 */, 37 /* ty=int32 span=model_10/tf.math.add_58/Add;model_10/tf.nn.convolution_52/convolution;Const_14:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 64), int8] span=model_10/tf.math.add_58/Add;model_10/tf.nn.convolution_52/convolution;Const_14:0:0 */;
  %423 = qnn.requantize(%421, meta[relay.Constant][103] /* ty=Tensor[(15), float32] span=model_10/tf.math.add_59/Add;model_10/tf.nn.convolution_53/convolution;Const_13:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_59/Add;model_10/tf.nn.convolution_53/convolution;Const_13:0:0 */, 0.117723f /* ty=float32 span=model_10/tf.math.add_59/Add;model_10/tf.nn.convolution_53/convolution;Const_13:0:0 */, 37 /* ty=int32 span=model_10/tf.math.add_59/Add;model_10/tf.nn.convolution_53/convolution;Const_13:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 15), int8] span=model_10/tf.math.add_59/Add;model_10/tf.nn.convolution_53/convolution;Const_13:0:0 */;
  %424 = (%422, %423) /* ty=(Tensor[(1, 40, 40, 64), int8], Tensor[(1, 40, 40, 15), int8]) span=model_10/tf.concat_14/concat:0:0 */;
  %425 = @tvmgen_default_ethos_n_main_83(%424) /* ty=Tensor[(1, 40, 40, 79), int8] */;
  %426 = transpose(%425, axes=[0, 3, 1, 2]) /* ty=Tensor[(1, 79, 40, 40), int8] span=model_10/tf.compat.v1.transpose_60/transpose:0:0 */;
  %427 = nn.pad(%389, -120f /* ty=float32 span=model_10/tf.compat.v1.pad_6/Pad:0:0 */, pad_width=[[0, 0], [1, 1], [1, 1], [0, 0]]) /* ty=Tensor[(1, 42, 42, 128), int8] span=model_10/tf.compat.v1.pad_6/Pad:0:0 */;
  %428 = qnn.conv2d(%427, %v_param_81, -120 /* ty=int32 span=model_10/tf.math.add_52/Add;model_10/tf.nn.convolution_46/convolution;Const_59:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_52/Add;model_10/tf.nn.convolution_46/convolution;Const_59:0:0 */, 0.0337268f /* ty=float32 span=model_10/tf.math.add_52/Add;model_10/tf.nn.convolution_46/convolution;Const_59:0:0 */, meta[relay.Constant][104] /* ty=Tensor[(128), float32] span=model_10/tf.math.add_52/Add;model_10/tf.nn.convolution_46/convolution;Const_59:0:0 */, strides=[2, 2], padding=[0, 0, 0, 0], channels=128, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 20, 20, 128), int32] span=model_10/tf.math.add_52/Add;model_10/tf.nn.convolution_46/convolution;Const_59:0:0 */;
  %429 = nn.bias_add(%428, %v_param_82, axis=3) /* ty=Tensor[(1, 20, 20, 128), int32] span=model_10/tf.math.add_52/Add;model_10/tf.nn.convolution_46/convolution;Const_59:0:0 */;
  %430 = qnn.requantize(%429, meta[relay.Constant][105] /* ty=Tensor[(128), float32] span=model_10/tf.math.add_52/Add;model_10/tf.nn.convolution_46/convolution;Const_59:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_52/Add;model_10/tf.nn.convolution_46/convolution;Const_59:0:0 */, 0.0564478f /* ty=float32 span=model_10/tf.math.add_52/Add;model_10/tf.nn.convolution_46/convolution;Const_59:0:0 */, -9 /* ty=int32 span=model_10/tf.math.add_52/Add;model_10/tf.nn.convolution_46/convolution;Const_59:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 128), int8] span=model_10/tf.math.add_52/Add;model_10/tf.nn.convolution_46/convolution;Const_59:0:0 */;
  %431 = qnn.dequantize(%430, 0.0564478f /* ty=float32 span=model_10/tf.math.sigmoid_44/Sigmoid:0:0 */, -9 /* ty=int32 span=model_10/tf.math.sigmoid_44/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 20, 20, 128), float32] span=model_10/tf.math.sigmoid_44/Sigmoid:0:0 */;
  %432 = sigmoid(%431) /* ty=Tensor[(1, 20, 20, 128), float32] span=model_10/tf.math.sigmoid_44/Sigmoid:0:0 */;
  %433 = qnn.quantize(%432, 0.00390625f /* ty=float32 span=model_10/tf.math.sigmoid_44/Sigmoid:0:0 */, -128 /* ty=int32 span=model_10/tf.math.sigmoid_44/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 128), int8] span=model_10/tf.math.sigmoid_44/Sigmoid:0:0 */;
  %434 = qnn.mul(%430, %433, 0.0564478f /* ty=float32 span=model_10/tf.math.multiply_185/Mul:0:0 */, -9 /* ty=int32 span=model_10/tf.math.multiply_185/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_10/tf.math.multiply_185/Mul:0:0 */, -128 /* ty=int32 span=model_10/tf.math.multiply_185/Mul:0:0 */, 0.0312304f /* ty=float32 span=model_10/tf.math.multiply_185/Mul:0:0 */, -119 /* ty=int32 span=model_10/tf.math.multiply_185/Mul:0:0 */) /* ty=Tensor[(1, 20, 20, 128), int8] span=model_10/tf.math.multiply_185/Mul:0:0 */;
  %435 = (%434, %232) /* ty=(Tensor[(1, 20, 20, 128), int8], Tensor[(1, 20, 20, 256), int8]) span=model_10/tf.concat_13/concat:0:0 */;
  %436 = @tvmgen_default_ethos_n_main_89(%435) /* ty=Tensor[(1, 20, 20, 384), int8] */;
  %437 = qnn.conv2d(%436, %v_param_83, -119 /* ty=int32 span=model_10/tf.math.add_57/Add;model_10/tf.nn.convolution_51/convolution;Const_57:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_57/Add;model_10/tf.nn.convolution_51/convolution;Const_57:0:0 */, 0.0312304f /* ty=float32 span=model_10/tf.math.add_57/Add;model_10/tf.nn.convolution_51/convolution;Const_57:0:0 */, meta[relay.Constant][106] /* ty=Tensor[(256), float32] span=model_10/tf.math.add_57/Add;model_10/tf.nn.convolution_51/convolution;Const_57:0:0 */, padding=[0, 0, 0, 0], channels=256, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 20, 20, 256), int32] span=model_10/tf.math.add_57/Add;model_10/tf.nn.convolution_51/convolution;Const_57:0:0 */;
  %438 = nn.bias_add(%437, %v_param_84, axis=3) /* ty=Tensor[(1, 20, 20, 256), int32] span=model_10/tf.math.add_57/Add;model_10/tf.nn.convolution_51/convolution;Const_57:0:0 */;
  %439 = qnn.requantize(%438, meta[relay.Constant][107] /* ty=Tensor[(256), float32] span=model_10/tf.math.add_57/Add;model_10/tf.nn.convolution_51/convolution;Const_57:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_57/Add;model_10/tf.nn.convolution_51/convolution;Const_57:0:0 */, 0.0514817f /* ty=float32 span=model_10/tf.math.add_57/Add;model_10/tf.nn.convolution_51/convolution;Const_57:0:0 */, -22 /* ty=int32 span=model_10/tf.math.add_57/Add;model_10/tf.nn.convolution_51/convolution;Const_57:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 256), int8] span=model_10/tf.math.add_57/Add;model_10/tf.nn.convolution_51/convolution;Const_57:0:0 */;
  %440 = qnn.dequantize(%439, 0.0514817f /* ty=float32 span=model_10/tf.math.sigmoid_49/Sigmoid:0:0 */, -22 /* ty=int32 span=model_10/tf.math.sigmoid_49/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 20, 20, 256), float32] span=model_10/tf.math.sigmoid_49/Sigmoid:0:0 */;
  %441 = sigmoid(%440) /* ty=Tensor[(1, 20, 20, 256), float32] span=model_10/tf.math.sigmoid_49/Sigmoid:0:0 */;
  %442 = qnn.quantize(%441, 0.00390625f /* ty=float32 span=model_10/tf.math.sigmoid_49/Sigmoid:0:0 */, -128 /* ty=int32 span=model_10/tf.math.sigmoid_49/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 256), int8] span=model_10/tf.math.sigmoid_49/Sigmoid:0:0 */;
  %443 = qnn.mul(%439, %442, 0.0514817f /* ty=float32 span=model_10/tf.math.multiply_205/Mul:0:0 */, -22 /* ty=int32 span=model_10/tf.math.multiply_205/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_10/tf.math.multiply_205/Mul:0:0 */, -128 /* ty=int32 span=model_10/tf.math.multiply_205/Mul:0:0 */, 0.0417772f /* ty=float32 span=model_10/tf.math.multiply_205/Mul:0:0 */, -115 /* ty=int32 span=model_10/tf.math.multiply_205/Mul:0:0 */) /* ty=Tensor[(1, 20, 20, 256), int8] span=model_10/tf.math.multiply_205/Mul:0:0 */;
  %444 = strided_slice(%443, begin=[0, 0, 0, 0], end=[1, 20, 20, 128], strides=[1, 1, 1, 1], axes=None) /* ty=Tensor[(1, 20, 20, 128), int8] span=model_10/tf.strided_slice_16/StridedSlice:0:0 */;
  %445 = strided_slice(%443, begin=[0, 0, 0, 128], end=[1, 20, 20, 256], strides=[1, 1, 1, 1], axes=None) /* ty=Tensor[(1, 20, 20, 128), int8] span=model_10/tf.strided_slice_17/StridedSlice:0:0 */;
  %446 = @tvmgen_default_ethos_n_main_95(%445) /* ty=Tensor[(1, 20, 20, 128), int8] */;
  %447 = qnn.conv2d(%446, %v_param_85, -115 /* ty=int32 span=model_10/tf.math.add_60/Add;model_10/tf.nn.convolution_54/convolution;Const_53:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_60/Add;model_10/tf.nn.convolution_54/convolution;Const_53:0:0 */, 0.0417772f /* ty=float32 span=model_10/tf.math.add_60/Add;model_10/tf.nn.convolution_54/convolution;Const_53:0:0 */, meta[relay.Constant][108] /* ty=Tensor[(128), float32] span=model_10/tf.math.add_60/Add;model_10/tf.nn.convolution_54/convolution;Const_53:0:0 */, padding=[1, 1, 1, 1], channels=128, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 20, 20, 128), int32] span=model_10/tf.math.add_60/Add;model_10/tf.nn.convolution_54/convolution;Const_53:0:0 */;
  %448 = nn.bias_add(%447, %v_param_86, axis=3) /* ty=Tensor[(1, 20, 20, 128), int32] span=model_10/tf.math.add_60/Add;model_10/tf.nn.convolution_54/convolution;Const_53:0:0 */;
  %449 = qnn.requantize(%448, meta[relay.Constant][109] /* ty=Tensor[(128), float32] span=model_10/tf.math.add_60/Add;model_10/tf.nn.convolution_54/convolution;Const_53:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_60/Add;model_10/tf.nn.convolution_54/convolution;Const_53:0:0 */, 0.050362f /* ty=float32 span=model_10/tf.math.add_60/Add;model_10/tf.nn.convolution_54/convolution;Const_53:0:0 */, -5 /* ty=int32 span=model_10/tf.math.add_60/Add;model_10/tf.nn.convolution_54/convolution;Const_53:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 128), int8] span=model_10/tf.math.add_60/Add;model_10/tf.nn.convolution_54/convolution;Const_53:0:0 */;
  %450 = qnn.dequantize(%449, 0.050362f /* ty=float32 span=model_10/tf.math.sigmoid_50/Sigmoid:0:0 */, -5 /* ty=int32 span=model_10/tf.math.sigmoid_50/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 20, 20, 128), float32] span=model_10/tf.math.sigmoid_50/Sigmoid:0:0 */;
  %451 = sigmoid(%450) /* ty=Tensor[(1, 20, 20, 128), float32] span=model_10/tf.math.sigmoid_50/Sigmoid:0:0 */;
  %452 = qnn.quantize(%451, 0.00390625f /* ty=float32 span=model_10/tf.math.sigmoid_50/Sigmoid:0:0 */, -128 /* ty=int32 span=model_10/tf.math.sigmoid_50/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 128), int8] span=model_10/tf.math.sigmoid_50/Sigmoid:0:0 */;
  %453 = qnn.mul(%449, %452, 0.050362f /* ty=float32 span=model_10/tf.math.multiply_209/Mul:0:0 */, -5 /* ty=int32 span=model_10/tf.math.multiply_209/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_10/tf.math.multiply_209/Mul:0:0 */, -128 /* ty=int32 span=model_10/tf.math.multiply_209/Mul:0:0 */, 0.0271846f /* ty=float32 span=model_10/tf.math.multiply_209/Mul:0:0 */, -118 /* ty=int32 span=model_10/tf.math.multiply_209/Mul:0:0 */) /* ty=Tensor[(1, 20, 20, 128), int8] span=model_10/tf.math.multiply_209/Mul:0:0 */;
  %454 = qnn.conv2d(%453, %v_param_87, -118 /* ty=int32 span=model_10/tf.math.add_61/Add;model_10/tf.nn.convolution_55/convolution;Const_51:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_61/Add;model_10/tf.nn.convolution_55/convolution;Const_51:0:0 */, 0.0271846f /* ty=float32 span=model_10/tf.math.add_61/Add;model_10/tf.nn.convolution_55/convolution;Const_51:0:0 */, meta[relay.Constant][110] /* ty=Tensor[(128), float32] span=model_10/tf.math.add_61/Add;model_10/tf.nn.convolution_55/convolution;Const_51:0:0 */, padding=[1, 1, 1, 1], channels=128, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 20, 20, 128), int32] span=model_10/tf.math.add_61/Add;model_10/tf.nn.convolution_55/convolution;Const_51:0:0 */;
  %455 = nn.bias_add(%454, %v_param_88, axis=3) /* ty=Tensor[(1, 20, 20, 128), int32] span=model_10/tf.math.add_61/Add;model_10/tf.nn.convolution_55/convolution;Const_51:0:0 */;
  %456 = qnn.requantize(%455, meta[relay.Constant][111] /* ty=Tensor[(128), float32] span=model_10/tf.math.add_61/Add;model_10/tf.nn.convolution_55/convolution;Const_51:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_61/Add;model_10/tf.nn.convolution_55/convolution;Const_51:0:0 */, 0.0537462f /* ty=float32 span=model_10/tf.math.add_61/Add;model_10/tf.nn.convolution_55/convolution;Const_51:0:0 */, -4 /* ty=int32 span=model_10/tf.math.add_61/Add;model_10/tf.nn.convolution_55/convolution;Const_51:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 128), int8] span=model_10/tf.math.add_61/Add;model_10/tf.nn.convolution_55/convolution;Const_51:0:0 */;
  %457 = qnn.dequantize(%456, 0.0537462f /* ty=float32 span=model_10/tf.math.sigmoid_51/Sigmoid:0:0 */, -4 /* ty=int32 span=model_10/tf.math.sigmoid_51/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 20, 20, 128), float32] span=model_10/tf.math.sigmoid_51/Sigmoid:0:0 */;
  %458 = sigmoid(%457) /* ty=Tensor[(1, 20, 20, 128), float32] span=model_10/tf.math.sigmoid_51/Sigmoid:0:0 */;
  %459 = qnn.quantize(%458, 0.00390625f /* ty=float32 span=model_10/tf.math.sigmoid_51/Sigmoid:0:0 */, -128 /* ty=int32 span=model_10/tf.math.sigmoid_51/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 128), int8] span=model_10/tf.math.sigmoid_51/Sigmoid:0:0 */;
  %460 = qnn.mul(%456, %459, 0.0537462f /* ty=float32 span=model_10/tf.math.multiply_213/Mul:0:0 */, -4 /* ty=int32 span=model_10/tf.math.multiply_213/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_10/tf.math.multiply_213/Mul:0:0 */, -128 /* ty=int32 span=model_10/tf.math.multiply_213/Mul:0:0 */, 0.0417772f /* ty=float32 span=model_10/tf.math.multiply_213/Mul:0:0 */, -115 /* ty=int32 span=model_10/tf.math.multiply_213/Mul:0:0 */) /* ty=Tensor[(1, 20, 20, 128), int8] span=model_10/tf.math.multiply_213/Mul:0:0 */;
  %461 = @tvmgen_default_ethos_n_main_94(%444) /* ty=Tensor[(1, 20, 20, 128), int8] */;
  %462 = qnn.add(%446, %460, 0.0417772f /* ty=float32 span=model_10/tf.math.add_63/Add:0:0 */, -115 /* ty=int32 span=model_10/tf.math.add_63/Add:0:0 */, 0.0417772f /* ty=float32 span=model_10/tf.math.add_63/Add:0:0 */, -115 /* ty=int32 span=model_10/tf.math.add_63/Add:0:0 */, 0.0417772f /* ty=float32 span=model_10/tf.math.add_63/Add:0:0 */, -115 /* ty=int32 span=model_10/tf.math.add_63/Add:0:0 */) /* ty=Tensor[(1, 20, 20, 128), int8] span=model_10/tf.math.add_63/Add:0:0 */;
  %463 = (%461, %446, %462) /* ty=(Tensor[(1, 20, 20, 128), int8], Tensor[(1, 20, 20, 128), int8], Tensor[(1, 20, 20, 128), int8]) span=model_10/tf.concat_15/concat:0:0 */;
  %464 = @tvmgen_default_ethos_n_main_96(%463) /* ty=Tensor[(1, 20, 20, 384), int8] */;
  %465 = qnn.conv2d(%464, %v_param_89, -115 /* ty=int32 span=model_10/tf.math.add_64/Add;model_10/tf.nn.convolution_56/convolution;Const_47:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_64/Add;model_10/tf.nn.convolution_56/convolution;Const_47:0:0 */, 0.0417772f /* ty=float32 span=model_10/tf.math.add_64/Add;model_10/tf.nn.convolution_56/convolution;Const_47:0:0 */, meta[relay.Constant][112] /* ty=Tensor[(256), float32] span=model_10/tf.math.add_64/Add;model_10/tf.nn.convolution_56/convolution;Const_47:0:0 */, padding=[0, 0, 0, 0], channels=256, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 20, 20, 256), int32] span=model_10/tf.math.add_64/Add;model_10/tf.nn.convolution_56/convolution;Const_47:0:0 */;
  %466 = nn.bias_add(%465, %v_param_90, axis=3) /* ty=Tensor[(1, 20, 20, 256), int32] span=model_10/tf.math.add_64/Add;model_10/tf.nn.convolution_56/convolution;Const_47:0:0 */;
  %467 = qnn.requantize(%466, meta[relay.Constant][113] /* ty=Tensor[(256), float32] span=model_10/tf.math.add_64/Add;model_10/tf.nn.convolution_56/convolution;Const_47:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_64/Add;model_10/tf.nn.convolution_56/convolution;Const_47:0:0 */, 0.0525645f /* ty=float32 span=model_10/tf.math.add_64/Add;model_10/tf.nn.convolution_56/convolution;Const_47:0:0 */, 4 /* ty=int32 span=model_10/tf.math.add_64/Add;model_10/tf.nn.convolution_56/convolution;Const_47:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 256), int8] span=model_10/tf.math.add_64/Add;model_10/tf.nn.convolution_56/convolution;Const_47:0:0 */;
  %468 = qnn.dequantize(%467, 0.0525645f /* ty=float32 span=model_10/tf.math.sigmoid_52/Sigmoid:0:0 */, 4 /* ty=int32 span=model_10/tf.math.sigmoid_52/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 20, 20, 256), float32] span=model_10/tf.math.sigmoid_52/Sigmoid:0:0 */;
  %469 = sigmoid(%468) /* ty=Tensor[(1, 20, 20, 256), float32] span=model_10/tf.math.sigmoid_52/Sigmoid:0:0 */;
  %470 = qnn.quantize(%469, 0.00390625f /* ty=float32 span=model_10/tf.math.sigmoid_52/Sigmoid:0:0 */, -128 /* ty=int32 span=model_10/tf.math.sigmoid_52/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 256), int8] span=model_10/tf.math.sigmoid_52/Sigmoid:0:0 */;
  %471 = qnn.mul(%467, %470, 0.0525645f /* ty=float32 span=model_10/tf.math.multiply_219/Mul:0:0 */, 4 /* ty=int32 span=model_10/tf.math.multiply_219/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_10/tf.math.multiply_219/Mul:0:0 */, -128 /* ty=int32 span=model_10/tf.math.multiply_219/Mul:0:0 */, 0.0264035f /* ty=float32 span=model_10/tf.math.multiply_219/Mul:0:0 */, -117 /* ty=int32 span=model_10/tf.math.multiply_219/Mul:0:0 */) /* ty=Tensor[(1, 20, 20, 256), int8] span=model_10/tf.math.multiply_219/Mul:0:0 */;
  %472 = qnn.conv2d(%471, %v_param_91, -117 /* ty=int32 span=model_10/tf.math.add_65/Add;model_10/tf.nn.convolution_57/convolution;Const_39:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_65/Add;model_10/tf.nn.convolution_57/convolution;Const_39:0:0 */, 0.0264035f /* ty=float32 span=model_10/tf.math.add_65/Add;model_10/tf.nn.convolution_57/convolution;Const_39:0:0 */, meta[relay.Constant][114] /* ty=Tensor[(64), float32] span=model_10/tf.math.add_65/Add;model_10/tf.nn.convolution_57/convolution;Const_39:0:0 */, padding=[1, 1, 1, 1], channels=64, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 20, 20, 64), int32] span=model_10/tf.math.add_65/Add;model_10/tf.nn.convolution_57/convolution;Const_39:0:0 */;
  %473 = nn.bias_add(%472, %v_param_92, axis=3) /* ty=Tensor[(1, 20, 20, 64), int32] span=model_10/tf.math.add_65/Add;model_10/tf.nn.convolution_57/convolution;Const_39:0:0 */;
  %474 = qnn.requantize(%473, meta[relay.Constant][115] /* ty=Tensor[(64), float32] span=model_10/tf.math.add_65/Add;model_10/tf.nn.convolution_57/convolution;Const_39:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_65/Add;model_10/tf.nn.convolution_57/convolution;Const_39:0:0 */, 0.0572026f /* ty=float32 span=model_10/tf.math.add_65/Add;model_10/tf.nn.convolution_57/convolution;Const_39:0:0 */, -12 /* ty=int32 span=model_10/tf.math.add_65/Add;model_10/tf.nn.convolution_57/convolution;Const_39:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 64), int8] span=model_10/tf.math.add_65/Add;model_10/tf.nn.convolution_57/convolution;Const_39:0:0 */;
  %475 = qnn.dequantize(%474, 0.0572026f /* ty=float32 span=model_10/tf.math.sigmoid_53/Sigmoid:0:0 */, -12 /* ty=int32 span=model_10/tf.math.sigmoid_53/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 20, 20, 64), float32] span=model_10/tf.math.sigmoid_53/Sigmoid:0:0 */;
  %476 = sigmoid(%475) /* ty=Tensor[(1, 20, 20, 64), float32] span=model_10/tf.math.sigmoid_53/Sigmoid:0:0 */;
  %477 = qnn.quantize(%476, 0.00390625f /* ty=float32 span=model_10/tf.math.sigmoid_53/Sigmoid:0:0 */, -128 /* ty=int32 span=model_10/tf.math.sigmoid_53/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 64), int8] span=model_10/tf.math.sigmoid_53/Sigmoid:0:0 */;
  %478 = qnn.mul(%474, %477, 0.0572026f /* ty=float32 span=model_10/tf.math.multiply_223/Mul:0:0 */, -12 /* ty=int32 span=model_10/tf.math.multiply_223/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_10/tf.math.multiply_223/Mul:0:0 */, -128 /* ty=int32 span=model_10/tf.math.multiply_223/Mul:0:0 */, 0.0322572f /* ty=float32 span=model_10/tf.math.multiply_223/Mul:0:0 */, -119 /* ty=int32 span=model_10/tf.math.multiply_223/Mul:0:0 */) /* ty=Tensor[(1, 20, 20, 64), int8] span=model_10/tf.math.multiply_223/Mul:0:0 */;
  %479 = qnn.conv2d(%478, %v_param_93, -119 /* ty=int32 span=model_10/tf.math.add_67/Add;model_10/tf.nn.convolution_59/convolution;Const_27:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_67/Add;model_10/tf.nn.convolution_59/convolution;Const_27:0:0 */, 0.0322572f /* ty=float32 span=model_10/tf.math.add_67/Add;model_10/tf.nn.convolution_59/convolution;Const_27:0:0 */, meta[relay.Constant][116] /* ty=Tensor[(64), float32] span=model_10/tf.math.add_67/Add;model_10/tf.nn.convolution_59/convolution;Const_27:0:0 */, padding=[1, 1, 1, 1], channels=64, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 20, 20, 64), int32] span=model_10/tf.math.add_67/Add;model_10/tf.nn.convolution_59/convolution;Const_27:0:0 */;
  %480 = nn.bias_add(%479, %v_param_94, axis=3) /* ty=Tensor[(1, 20, 20, 64), int32] span=model_10/tf.math.add_67/Add;model_10/tf.nn.convolution_59/convolution;Const_27:0:0 */;
  %481 = qnn.requantize(%480, meta[relay.Constant][117] /* ty=Tensor[(64), float32] span=model_10/tf.math.add_67/Add;model_10/tf.nn.convolution_59/convolution;Const_27:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_67/Add;model_10/tf.nn.convolution_59/convolution;Const_27:0:0 */, 0.0593136f /* ty=float32 span=model_10/tf.math.add_67/Add;model_10/tf.nn.convolution_59/convolution;Const_27:0:0 */, -25 /* ty=int32 span=model_10/tf.math.add_67/Add;model_10/tf.nn.convolution_59/convolution;Const_27:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 64), int8] span=model_10/tf.math.add_67/Add;model_10/tf.nn.convolution_59/convolution;Const_27:0:0 */;
  %482 = qnn.dequantize(%481, 0.0593136f /* ty=float32 span=model_10/tf.math.sigmoid_55/Sigmoid:0:0 */, -25 /* ty=int32 span=model_10/tf.math.sigmoid_55/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 20, 20, 64), float32] span=model_10/tf.math.sigmoid_55/Sigmoid:0:0 */;
  %483 = sigmoid(%482) /* ty=Tensor[(1, 20, 20, 64), float32] span=model_10/tf.math.sigmoid_55/Sigmoid:0:0 */;
  %484 = qnn.quantize(%483, 0.00390625f /* ty=float32 span=model_10/tf.math.sigmoid_55/Sigmoid:0:0 */, -128 /* ty=int32 span=model_10/tf.math.sigmoid_55/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 64), int8] span=model_10/tf.math.sigmoid_55/Sigmoid:0:0 */;
  %485 = qnn.mul(%481, %484, 0.0593136f /* ty=float32 span=model_10/tf.math.multiply_231/Mul:0:0 */, -25 /* ty=int32 span=model_10/tf.math.multiply_231/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_10/tf.math.multiply_231/Mul:0:0 */, -128 /* ty=int32 span=model_10/tf.math.multiply_231/Mul:0:0 */, 0.036555f /* ty=float32 span=model_10/tf.math.multiply_231/Mul:0:0 */, -120 /* ty=int32 span=model_10/tf.math.multiply_231/Mul:0:0 */) /* ty=Tensor[(1, 20, 20, 64), int8] span=model_10/tf.math.multiply_231/Mul:0:0 */;
  %486 = qnn.conv2d(%485, %v_param_95, -120 /* ty=int32 span=model_10/tf.math.add_69/Add;model_10/tf.nn.convolution_61/convolution;Const_16:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_69/Add;model_10/tf.nn.convolution_61/convolution;Const_16:0:0 */, 0.036555f /* ty=float32 span=model_10/tf.math.add_69/Add;model_10/tf.nn.convolution_61/convolution;Const_16:0:0 */, meta[relay.Constant][118] /* ty=Tensor[(64), float32] span=model_10/tf.math.add_69/Add;model_10/tf.nn.convolution_61/convolution;Const_16:0:0 */, padding=[0, 0, 0, 0], channels=64, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 20, 20, 64), int32] span=model_10/tf.math.add_69/Add;model_10/tf.nn.convolution_61/convolution;Const_16:0:0 */;
  %487 = nn.bias_add(%486, %v_param_96, axis=3) /* ty=Tensor[(1, 20, 20, 64), int32] span=model_10/tf.math.add_69/Add;model_10/tf.nn.convolution_61/convolution;Const_16:0:0 */;
  %488 = qnn.conv2d(%471, %v_param_97, -117 /* ty=int32 span=model_10/tf.math.add_66/Add;model_10/tf.nn.convolution_58/convolution;Const_40:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_66/Add;model_10/tf.nn.convolution_58/convolution;Const_40:0:0 */, 0.0264035f /* ty=float32 span=model_10/tf.math.add_66/Add;model_10/tf.nn.convolution_58/convolution;Const_40:0:0 */, meta[relay.Constant][120] /* ty=Tensor[(64), float32] span=model_10/tf.math.add_66/Add;model_10/tf.nn.convolution_58/convolution;Const_40:0:0 */, padding=[1, 1, 1, 1], channels=64, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 20, 20, 64), int32] span=model_10/tf.math.add_66/Add;model_10/tf.nn.convolution_58/convolution;Const_40:0:0 */;
  %489 = nn.bias_add(%488, %v_param_98, axis=3) /* ty=Tensor[(1, 20, 20, 64), int32] span=model_10/tf.math.add_66/Add;model_10/tf.nn.convolution_58/convolution;Const_40:0:0 */;
  %490 = qnn.requantize(%489, meta[relay.Constant][121] /* ty=Tensor[(64), float32] span=model_10/tf.math.add_66/Add;model_10/tf.nn.convolution_58/convolution;Const_40:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_66/Add;model_10/tf.nn.convolution_58/convolution;Const_40:0:0 */, 0.0426997f /* ty=float32 span=model_10/tf.math.add_66/Add;model_10/tf.nn.convolution_58/convolution;Const_40:0:0 */, -12 /* ty=int32 span=model_10/tf.math.add_66/Add;model_10/tf.nn.convolution_58/convolution;Const_40:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 64), int8] span=model_10/tf.math.add_66/Add;model_10/tf.nn.convolution_58/convolution;Const_40:0:0 */;
  %491 = qnn.dequantize(%490, 0.0426997f /* ty=float32 span=model_10/tf.math.sigmoid_54/Sigmoid:0:0 */, -12 /* ty=int32 span=model_10/tf.math.sigmoid_54/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 20, 20, 64), float32] span=model_10/tf.math.sigmoid_54/Sigmoid:0:0 */;
  %492 = sigmoid(%491) /* ty=Tensor[(1, 20, 20, 64), float32] span=model_10/tf.math.sigmoid_54/Sigmoid:0:0 */;
  %493 = qnn.quantize(%492, 0.00390625f /* ty=float32 span=model_10/tf.math.sigmoid_54/Sigmoid:0:0 */, -128 /* ty=int32 span=model_10/tf.math.sigmoid_54/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 64), int8] span=model_10/tf.math.sigmoid_54/Sigmoid:0:0 */;
  %494 = qnn.mul(%490, %493, 0.0426997f /* ty=float32 span=model_10/tf.math.multiply_227/Mul:0:0 */, -12 /* ty=int32 span=model_10/tf.math.multiply_227/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_10/tf.math.multiply_227/Mul:0:0 */, -128 /* ty=int32 span=model_10/tf.math.multiply_227/Mul:0:0 */, 0.0242377f /* ty=float32 span=model_10/tf.math.multiply_227/Mul:0:0 */, -117 /* ty=int32 span=model_10/tf.math.multiply_227/Mul:0:0 */) /* ty=Tensor[(1, 20, 20, 64), int8] span=model_10/tf.math.multiply_227/Mul:0:0 */;
  %495 = qnn.conv2d(%494, %v_param_99, -117 /* ty=int32 span=model_10/tf.math.add_68/Add;model_10/tf.nn.convolution_60/convolution;Const_28:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_68/Add;model_10/tf.nn.convolution_60/convolution;Const_28:0:0 */, 0.0242377f /* ty=float32 span=model_10/tf.math.add_68/Add;model_10/tf.nn.convolution_60/convolution;Const_28:0:0 */, meta[relay.Constant][122] /* ty=Tensor[(64), float32] span=model_10/tf.math.add_68/Add;model_10/tf.nn.convolution_60/convolution;Const_28:0:0 */, padding=[1, 1, 1, 1], channels=64, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 20, 20, 64), int32] span=model_10/tf.math.add_68/Add;model_10/tf.nn.convolution_60/convolution;Const_28:0:0 */;
  %496 = nn.bias_add(%495, %v_param_100, axis=3) /* ty=Tensor[(1, 20, 20, 64), int32] span=model_10/tf.math.add_68/Add;model_10/tf.nn.convolution_60/convolution;Const_28:0:0 */;
  %497 = qnn.requantize(%496, meta[relay.Constant][123] /* ty=Tensor[(64), float32] span=model_10/tf.math.add_68/Add;model_10/tf.nn.convolution_60/convolution;Const_28:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_68/Add;model_10/tf.nn.convolution_60/convolution;Const_28:0:0 */, 0.0583551f /* ty=float32 span=model_10/tf.math.add_68/Add;model_10/tf.nn.convolution_60/convolution;Const_28:0:0 */, -28 /* ty=int32 span=model_10/tf.math.add_68/Add;model_10/tf.nn.convolution_60/convolution;Const_28:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 64), int8] span=model_10/tf.math.add_68/Add;model_10/tf.nn.convolution_60/convolution;Const_28:0:0 */;
  %498 = qnn.dequantize(%497, 0.0583551f /* ty=float32 span=model_10/tf.math.sigmoid_56/Sigmoid:0:0 */, -28 /* ty=int32 span=model_10/tf.math.sigmoid_56/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 20, 20, 64), float32] span=model_10/tf.math.sigmoid_56/Sigmoid:0:0 */;
  %499 = sigmoid(%498) /* ty=Tensor[(1, 20, 20, 64), float32] span=model_10/tf.math.sigmoid_56/Sigmoid:0:0 */;
  %500 = qnn.quantize(%499, 0.00390625f /* ty=float32 span=model_10/tf.math.sigmoid_56/Sigmoid:0:0 */, -128 /* ty=int32 span=model_10/tf.math.sigmoid_56/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 64), int8] span=model_10/tf.math.sigmoid_56/Sigmoid:0:0 */;
  %501 = qnn.mul(%497, %500, 0.0583551f /* ty=float32 span=model_10/tf.math.multiply_235/Mul:0:0 */, -28 /* ty=int32 span=model_10/tf.math.multiply_235/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_10/tf.math.multiply_235/Mul:0:0 */, -128 /* ty=int32 span=model_10/tf.math.multiply_235/Mul:0:0 */, 0.0366722f /* ty=float32 span=model_10/tf.math.multiply_235/Mul:0:0 */, -120 /* ty=int32 span=model_10/tf.math.multiply_235/Mul:0:0 */) /* ty=Tensor[(1, 20, 20, 64), int8] span=model_10/tf.math.multiply_235/Mul:0:0 */;
  %502 = qnn.conv2d(%501, %v_param_101, -120 /* ty=int32 span=model_10/tf.math.add_70/Add;model_10/tf.nn.convolution_62/convolution;Const_15:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_70/Add;model_10/tf.nn.convolution_62/convolution;Const_15:0:0 */, 0.0366722f /* ty=float32 span=model_10/tf.math.add_70/Add;model_10/tf.nn.convolution_62/convolution;Const_15:0:0 */, meta[relay.Constant][124] /* ty=Tensor[(15), float32] span=model_10/tf.math.add_70/Add;model_10/tf.nn.convolution_62/convolution;Const_15:0:0 */, padding=[0, 0, 0, 0], channels=15, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 20, 20, 15), int32] span=model_10/tf.math.add_70/Add;model_10/tf.nn.convolution_62/convolution;Const_15:0:0 */;
  %503 = nn.bias_add(%502, %v_param_102, axis=3) /* ty=Tensor[(1, 20, 20, 15), int32] span=model_10/tf.math.add_70/Add;model_10/tf.nn.convolution_62/convolution;Const_15:0:0 */;
  %504 = qnn.requantize(%487, meta[relay.Constant][119] /* ty=Tensor[(64), float32] span=model_10/tf.math.add_69/Add;model_10/tf.nn.convolution_61/convolution;Const_16:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_69/Add;model_10/tf.nn.convolution_61/convolution;Const_16:0:0 */, 0.117723f /* ty=float32 span=model_10/tf.math.add_69/Add;model_10/tf.nn.convolution_61/convolution;Const_16:0:0 */, 37 /* ty=int32 span=model_10/tf.math.add_69/Add;model_10/tf.nn.convolution_61/convolution;Const_16:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 64), int8] span=model_10/tf.math.add_69/Add;model_10/tf.nn.convolution_61/convolution;Const_16:0:0 */;
  %505 = qnn.requantize(%503, meta[relay.Constant][125] /* ty=Tensor[(15), float32] span=model_10/tf.math.add_70/Add;model_10/tf.nn.convolution_62/convolution;Const_15:0:0 */, 0 /* ty=int32 span=model_10/tf.math.add_70/Add;model_10/tf.nn.convolution_62/convolution;Const_15:0:0 */, 0.117723f /* ty=float32 span=model_10/tf.math.add_70/Add;model_10/tf.nn.convolution_62/convolution;Const_15:0:0 */, 37 /* ty=int32 span=model_10/tf.math.add_70/Add;model_10/tf.nn.convolution_62/convolution;Const_15:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 15), int8] span=model_10/tf.math.add_70/Add;model_10/tf.nn.convolution_62/convolution;Const_15:0:0 */;
  %506 = (%504, %505) /* ty=(Tensor[(1, 20, 20, 64), int8], Tensor[(1, 20, 20, 15), int8]) span=model_10/tf.concat_16/concat:0:0 */;
  %507 = @tvmgen_default_ethos_n_main_101(%506) /* ty=Tensor[(1, 20, 20, 79), int8] */;
  %508 = transpose(%507, axes=[0, 3, 1, 2]) /* ty=Tensor[(1, 79, 20, 20), int8] span=model_10/tf.compat.v1.transpose_73/transpose:0:0 */;
  %509 = @tvmgen_default_ethos_n_main_70(%345) /* ty=Tensor[(1, 79, 6400), int8] */;
  %510 = @tvmgen_default_ethos_n_main_88(%426) /* ty=Tensor[(1, 79, 1600), int8] */;
  %511 = @tvmgen_default_ethos_n_main_106(%508) /* ty=Tensor[(1, 79, 400), int8] */;
  %512 = (%509, %510, %511) /* ty=(Tensor[(1, 79, 6400), int8], Tensor[(1, 79, 1600), int8], Tensor[(1, 79, 400), int8]) span=model_10/tf.concat_17/concat:0:0 */;
  %513 = @tvmgen_default_ethos_n_main_107(%512) /* ty=Tensor[(1, 79, 8400), int8] */;
  %514 = strided_slice(%513, begin=[0, 0, 0], end=[1, 64, 8400], strides=[1, 1, 1], axes=None) /* ty=Tensor[(1, 64, 8400), int8] span=model_10/tf.strided_slice_18/StridedSlice:0:0 */;
  %515 = @tvmgen_default_ethos_n_main_112(%514) /* ty=Tensor[(1, 64, 8400), int8] */;
  %516 = reshape(%515, newshape=[1, 4, 16, 8400]) /* ty=Tensor[(1, 4, 16, 8400), int8] span=model_10/tf.reshape_11/Reshape:0:0 */;
  %517 = transpose(%516, axes=[0, 1, 3, 2]) /* ty=Tensor[(1, 4, 8400, 16), int8] span=model_10/tf.compat.v1.transpose_81/transpose;model_10/tf.compat.v1.transpose_80/transpose/perm;model_10/tf.compat.v1.transpose_80/transpose;:0:0 */;
  %518 = qnn.dequantize(%517, 0.117723f /* ty=float32 span=model_10/tf.nn.softmax/wa/model.23/dfl/Softmax:0:0 */, 37 /* ty=int32 span=model_10/tf.nn.softmax/wa/model.23/dfl/Softmax:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 4, 8400, 16), float32] span=model_10/tf.nn.softmax/wa/model.23/dfl/Softmax:0:0 */;
  %519 = nn.softmax(%518) /* ty=Tensor[(1, 4, 8400, 16), float32] span=model_10/tf.nn.softmax/wa/model.23/dfl/Softmax:0:0 */;
  %520 = qnn.quantize(%519, 0.00390625f /* ty=float32 span=model_10/tf.nn.softmax/wa/model.23/dfl/Softmax:0:0 */, -128 /* ty=int32 span=model_10/tf.nn.softmax/wa/model.23/dfl/Softmax:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 4, 8400, 16), int8] span=model_10/tf.nn.softmax/wa/model.23/dfl/Softmax:0:0 */;
  %521 = qnn.conv2d(%520, %v_param_127, -128 /* ty=int32 span=model_10/tf.nn.convolution_63/convolution:0:0 */, 0 /* ty=int32 span=model_10/tf.nn.convolution_63/convolution:0:0 */, 0.00390625f /* ty=float32 span=model_10/tf.nn.convolution_63/convolution:0:0 */, 0.11811f /* ty=float32 span=model_10/tf.nn.convolution_63/convolution:0:0 */, padding=[0, 0, 0, 0], channels=1, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 4, 8400, 1), int32] span=model_10/tf.nn.convolution_63/convolution:0:0 */;
  %522 = nn.bias_add(%521, %v_param_128, axis=3) /* ty=Tensor[(1, 4, 8400, 1), int32] span=model_10/tf.nn.convolution_63/convolution:0:0 */;
  %523 = qnn.requantize(%522, 0.000461368f /* ty=float32 span=model_10/tf.nn.convolution_63/convolution:0:0 */, 0 /* ty=int32 span=model_10/tf.nn.convolution_63/convolution:0:0 */, 0.0550843f /* ty=float32 span=model_10/tf.nn.convolution_63/convolution:0:0 */, -128 /* ty=int32 span=model_10/tf.nn.convolution_63/convolution:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 4, 8400, 1), int8] span=model_10/tf.nn.convolution_63/convolution:0:0 */;
  %524 = reshape(%523, newshape=[1, 1, 4, 8400]) /* ty=Tensor[(1, 1, 4, 8400), int8] span=model_10/tf.compat.v1.transpose_86/transpose;:0:0 */;
  %525 = qnn.mul(%524, %v_param_129, 0.0550843f /* ty=float32 span=model_10/tf.math.multiply_238/Mul;model_10/tf.reshape_14/Reshape;model_10/tf.math.multiply_238/Mul/y:0:0 */, -128 /* ty=int32 span=model_10/tf.math.multiply_238/Mul;model_10/tf.reshape_14/Reshape;model_10/tf.math.multiply_238/Mul/y:0:0 */, 0.000196078f /* ty=float32 span=model_10/tf.math.multiply_238/Mul;model_10/tf.reshape_14/Reshape;model_10/tf.math.multiply_238/Mul/y:0:0 */, -128 /* ty=int32 span=model_10/tf.math.multiply_238/Mul;model_10/tf.reshape_14/Reshape;model_10/tf.math.multiply_238/Mul/y:0:0 */, 0.00189702f /* ty=float32 span=model_10/tf.math.multiply_238/Mul;model_10/tf.reshape_14/Reshape;model_10/tf.math.multiply_238/Mul/y:0:0 */, -128 /* ty=int32 span=model_10/tf.math.multiply_238/Mul;model_10/tf.reshape_14/Reshape;model_10/tf.math.multiply_238/Mul/y:0:0 */) /* ty=Tensor[(1, 1, 4, 8400), int8] span=model_10/tf.math.multiply_238/Mul;model_10/tf.reshape_14/Reshape;model_10/tf.math.multiply_238/Mul/y:0:0 */;
  %526 = reshape(%525, newshape=[1, 4, 8400]) /* ty=Tensor[(1, 4, 8400), int8] span=model_10/tf.math.multiply_238/Mul;model_10/tf.reshape_14/Reshape;model_10/tf.math.multiply_238/Mul/y1:0:0 */;
  %527 = strided_slice(%526, begin=[0, 0, 0], end=[1, 2, 8400], strides=[1, 1, 1], axes=None) /* ty=Tensor[(1, 2, 8400), int8] span=model_10/tf.strided_slice_20/StridedSlice:0:0 */;
  %528 = @tvmgen_default_ethos_n_main_113(%527) /* ty=Tensor[(1, 2, 8400), int8] */;
  %529 = strided_slice(%526, begin=[0, 2, 0], end=[1, 4, 8400], strides=[1, 1, 1], axes=None) /* ty=Tensor[(1, 2, 8400), int8] span=model_10/tf.strided_slice_21/StridedSlice:0:0 */;
  %530 = @tvmgen_default_ethos_n_main_114(%529) /* ty=Tensor[(1, 2, 8400), int8] */;
  %531 = qnn.subtract(%v_param_130, %528, 0.00389706f /* ty=float32 span=model_10/tf.math.subtract/Sub:0:0 */, -128 /* ty=int32 span=model_10/tf.math.subtract/Sub:0:0 */, 0.00189702f /* ty=float32 span=model_10/tf.math.subtract/Sub:0:0 */, -128 /* ty=int32 span=model_10/tf.math.subtract/Sub:0:0 */, 0.00511247f /* ty=float32 span=model_10/tf.math.subtract/Sub:0:0 */, -62 /* ty=int32 span=model_10/tf.math.subtract/Sub:0:0 */) /* ty=Tensor[(1, 2, 8400), int8] span=model_10/tf.math.subtract/Sub:0:0 */;
  %532 = qnn.add(%530, %v_param_131, 0.00189702f /* ty=float32 span=model_10/tf.math.add_71/Add:0:0 */, -128 /* ty=int32 span=model_10/tf.math.add_71/Add:0:0 */, 0.00389706f /* ty=float32 span=model_10/tf.math.add_71/Add:0:0 */, -128 /* ty=int32 span=model_10/tf.math.add_71/Add:0:0 */, 0.00543406f /* ty=float32 span=model_10/tf.math.add_71/Add:0:0 */, -128 /* ty=int32 span=model_10/tf.math.add_71/Add:0:0 */) /* ty=Tensor[(1, 2, 8400), int8] span=model_10/tf.math.add_71/Add:0:0 */;
  %533 = qnn.add(%531, %532, 0.00511247f /* ty=float32 span=model_10/tf.math.add_72/Add:0:0 */, -62 /* ty=int32 span=model_10/tf.math.add_72/Add:0:0 */, 0.00543406f /* ty=float32 span=model_10/tf.math.add_72/Add:0:0 */, -128 /* ty=int32 span=model_10/tf.math.add_72/Add:0:0 */, 0.00783046f /* ty=float32 span=model_10/tf.math.add_72/Add:0:0 */, -128 /* ty=int32 span=model_10/tf.math.add_72/Add:0:0 */) /* ty=Tensor[(1, 2, 8400), int8] span=model_10/tf.math.add_72/Add:0:0 */;
  %534 = strided_slice(%513, begin=[0, 64, 0], end=[1, 79, 8400], strides=[1, 1, 1], axes=None) /* ty=Tensor[(1, 15, 8400), int8] span=model_10/tf.strided_slice_19/StridedSlice:0:0 */;
  %535 = @tvmgen_default_ethos_n_main_115(%534) /* ty=Tensor[(1, 15, 8400), int8] */;
  %536 = qnn.dequantize(%535, 0.117723f /* ty=float32 span=model_10/tf.math.sigmoid_57/Sigmoid:0:0 */, 37 /* ty=int32 span=model_10/tf.math.sigmoid_57/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 15, 8400), float32] span=model_10/tf.math.sigmoid_57/Sigmoid:0:0 */;
  %537 = sigmoid(%536) /* ty=Tensor[(1, 15, 8400), float32] span=model_10/tf.math.sigmoid_57/Sigmoid:0:0 */;
  %538 = qnn.quantize(%537, 0.00390625f /* ty=float32 span=model_10/tf.math.sigmoid_57/Sigmoid:0:0 */, -128 /* ty=int32 span=model_10/tf.math.sigmoid_57/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 15, 8400), int8] span=model_10/tf.math.sigmoid_57/Sigmoid:0:0 */;
  %539 = qnn.mul(%533, %v_param_132, 0.00783046f /* ty=float32 span=model_10/tf.math.divide/truediv;model_10/tf.math.divide/truediv/y:0:0 */, -128 /* ty=int32 span=model_10/tf.math.divide/truediv;model_10/tf.math.divide/truediv/y:0:0 */, 0.00196078f /* ty=float32 span=model_10/tf.math.divide/truediv;model_10/tf.math.divide/truediv/y:0:0 */, -128 /* ty=int32 span=model_10/tf.math.divide/truediv;model_10/tf.math.divide/truediv/y:0:0 */, 0.00391523f /* ty=float32 span=model_10/tf.math.divide/truediv;model_10/tf.math.divide/truediv/y:0:0 */, -128 /* ty=int32 span=model_10/tf.math.divide/truediv;model_10/tf.math.divide/truediv/y:0:0 */) /* ty=Tensor[(1, 2, 8400), int8] span=model_10/tf.math.divide/truediv;model_10/tf.math.divide/truediv/y:0:0 */;
  %540 = qnn.subtract(%532, %531, 0.00543406f /* ty=float32 span=model_10/tf.math.subtract_1/Sub:0:0 */, -128 /* ty=int32 span=model_10/tf.math.subtract_1/Sub:0:0 */, 0.00511247f /* ty=float32 span=model_10/tf.math.subtract_1/Sub:0:0 */, -62 /* ty=int32 span=model_10/tf.math.subtract_1/Sub:0:0 */, 0.00391523f /* ty=float32 span=model_10/tf.math.subtract_1/Sub:0:0 */, -128 /* ty=int32 span=model_10/tf.math.subtract_1/Sub:0:0 */) /* ty=Tensor[(1, 2, 8400), int8] span=model_10/tf.math.subtract_1/Sub:0:0 */;
  %541 = qnn.requantize(%538, 0.00390625f /* ty=float32 span=model_10/tf.math.sigmoid_57/Sigmoid1:0:0 */, -128 /* ty=int32 span=model_10/tf.math.sigmoid_57/Sigmoid1:0:0 */, 0.00391523f /* ty=float32 span=model_10/tf.math.sigmoid_57/Sigmoid1:0:0 */, -128 /* ty=int32 span=model_10/tf.math.sigmoid_57/Sigmoid1:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 15, 8400), int8] span=model_10/tf.math.sigmoid_57/Sigmoid1:0:0 */;
  %542 = (%539, %540, %541) /* ty=(Tensor[(1, 2, 8400), int8], Tensor[(1, 2, 8400), int8], Tensor[(1, 15, 8400), int8]) span=PartitionedCall:0:0:0 */;
  @tvmgen_default_ethos_n_main_116(%542) /* ty=Tensor[(1, 19, 8400), int8] */
}

def @tvmgen_default_ethos_n_main_0(%ethos-n_0_i0: Tensor[(1, 160, 160, 32), int8] /* ty=Tensor[(1, 160, 160, 32), int8] */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_0") -> Tensor[(1, 160, 160, 32), int8] {
  reshape(%ethos-n_0_i0, newshape=[1, 160, 160, 32]) /* ty=Tensor[(1, 160, 160, 32), int8] span=model_10/tf.strided_slice/StridedSlice:0:0 */
}

def @tvmgen_default_ethos_n_main_1(%ethos-n_1_i0: Tensor[(1, 160, 160, 32), int8] /* ty=Tensor[(1, 160, 160, 32), int8] */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_1") -> Tensor[(1, 160, 160, 32), int8] {
  reshape(%ethos-n_1_i0, newshape=[1, 160, 160, 32]) /* ty=Tensor[(1, 160, 160, 32), int8] span=model_10/tf.strided_slice_1/StridedSlice:0:0 */
}

def @tvmgen_default_ethos_n_main_101(%ethos-n_101_i0: (Tensor[(1, 20, 20, 64), int8], Tensor[(1, 20, 20, 15), int8]) /* ty=(Tensor[(1, 20, 20, 64), int8], Tensor[(1, 20, 20, 15), int8]) */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_101") -> Tensor[(1, 20, 20, 79), int8] {
  %543 = (0.117723f /* ty=float32 span=model_10/tf.concat_16/concat:0:0 */, 0.117723f /* ty=float32 span=model_10/tf.concat_16/concat:0:0 */) /* ty=(float32, float32) span=model_10/tf.concat_16/concat:0:0 */;
  %544 = (37 /* ty=int32 span=model_10/tf.concat_16/concat:0:0 */, 37 /* ty=int32 span=model_10/tf.concat_16/concat:0:0 */) /* ty=(int32, int32) span=model_10/tf.concat_16/concat:0:0 */;
  qnn.concatenate(%ethos-n_101_i0, %543, %544, 0.117723f /* ty=float32 span=model_10/tf.concat_16/concat:0:0 */, 37 /* ty=int32 span=model_10/tf.concat_16/concat:0:0 */, axis=3) /* ty=Tensor[(1, 20, 20, 79), int8] span=model_10/tf.concat_16/concat:0:0 */
}

def @tvmgen_default_ethos_n_main_106(%ethos-n_106_i0: Tensor[(1, 79, 20, 20), int8] /* ty=Tensor[(1, 79, 20, 20), int8] */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_106") -> Tensor[(1, 79, 400), int8] {
  reshape(%ethos-n_106_i0, newshape=[1, 79, 400]) /* ty=Tensor[(1, 79, 400), int8] span=model_10/tf.reshape_8/Reshape:0:0 */
}

def @tvmgen_default_ethos_n_main_107(%ethos-n_107_i0: (Tensor[(1, 79, 6400), int8], Tensor[(1, 79, 1600), int8], Tensor[(1, 79, 400), int8]) /* ty=(Tensor[(1, 79, 6400), int8], Tensor[(1, 79, 1600), int8], Tensor[(1, 79, 400), int8]) */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_107") -> Tensor[(1, 79, 8400), int8] {
  %545 = (0.117723f /* ty=float32 span=model_10/tf.concat_17/concat:0:0 */, 0.117723f /* ty=float32 span=model_10/tf.concat_17/concat:0:0 */, 0.117723f /* ty=float32 span=model_10/tf.concat_17/concat:0:0 */) /* ty=(float32, float32, float32) span=model_10/tf.concat_17/concat:0:0 */;
  %546 = (37 /* ty=int32 span=model_10/tf.concat_17/concat:0:0 */, 37 /* ty=int32 span=model_10/tf.concat_17/concat:0:0 */, 37 /* ty=int32 span=model_10/tf.concat_17/concat:0:0 */) /* ty=(int32, int32, int32) span=model_10/tf.concat_17/concat:0:0 */;
  qnn.concatenate(%ethos-n_107_i0, %545, %546, 0.117723f /* ty=float32 span=model_10/tf.concat_17/concat:0:0 */, 37 /* ty=int32 span=model_10/tf.concat_17/concat:0:0 */, axis=2) /* ty=Tensor[(1, 79, 8400), int8] span=model_10/tf.concat_17/concat:0:0 */
}

def @tvmgen_default_ethos_n_main_112(%ethos-n_112_i0: Tensor[(1, 64, 8400), int8] /* ty=Tensor[(1, 64, 8400), int8] */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_112") -> Tensor[(1, 64, 8400), int8] {
  reshape(%ethos-n_112_i0, newshape=[1, 64, 8400]) /* ty=Tensor[(1, 64, 8400), int8] span=model_10/tf.strided_slice_18/StridedSlice:0:0 */
}

def @tvmgen_default_ethos_n_main_113(%ethos-n_113_i0: Tensor[(1, 2, 8400), int8] /* ty=Tensor[(1, 2, 8400), int8] */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_113") -> Tensor[(1, 2, 8400), int8] {
  reshape(%ethos-n_113_i0, newshape=[1, 2, 8400]) /* ty=Tensor[(1, 2, 8400), int8] span=model_10/tf.strided_slice_20/StridedSlice:0:0 */
}

def @tvmgen_default_ethos_n_main_114(%ethos-n_114_i0: Tensor[(1, 2, 8400), int8] /* ty=Tensor[(1, 2, 8400), int8] */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_114") -> Tensor[(1, 2, 8400), int8] {
  reshape(%ethos-n_114_i0, newshape=[1, 2, 8400]) /* ty=Tensor[(1, 2, 8400), int8] span=model_10/tf.strided_slice_21/StridedSlice:0:0 */
}

def @tvmgen_default_ethos_n_main_115(%ethos-n_115_i0: Tensor[(1, 15, 8400), int8] /* ty=Tensor[(1, 15, 8400), int8] */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_115") -> Tensor[(1, 15, 8400), int8] {
  reshape(%ethos-n_115_i0, newshape=[1, 15, 8400]) /* ty=Tensor[(1, 15, 8400), int8] span=model_10/tf.strided_slice_19/StridedSlice:0:0 */
}

def @tvmgen_default_ethos_n_main_116(%ethos-n_116_i0: (Tensor[(1, 2, 8400), int8], Tensor[(1, 2, 8400), int8], Tensor[(1, 15, 8400), int8]) /* ty=(Tensor[(1, 2, 8400), int8], Tensor[(1, 2, 8400), int8], Tensor[(1, 15, 8400), int8]) */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_116") -> Tensor[(1, 19, 8400), int8] {
  %547 = (0.00391523f /* ty=float32 span=PartitionedCall:0:0:0 */, 0.00391523f /* ty=float32 span=PartitionedCall:0:0:0 */, 0.00391523f /* ty=float32 span=PartitionedCall:0:0:0 */) /* ty=(float32, float32, float32) span=PartitionedCall:0:0:0 */;
  %548 = (-128 /* ty=int32 span=PartitionedCall:0:0:0 */, -128 /* ty=int32 span=PartitionedCall:0:0:0 */, -128 /* ty=int32 span=PartitionedCall:0:0:0 */) /* ty=(int32, int32, int32) span=PartitionedCall:0:0:0 */;
  qnn.concatenate(%ethos-n_116_i0, %547, %548, 0.00391523f /* ty=float32 span=PartitionedCall:0:0:0 */, -128 /* ty=int32 span=PartitionedCall:0:0:0 */, axis=1) /* ty=Tensor[(1, 19, 8400), int8] span=PartitionedCall:0:0:0 */
}

def @tvmgen_default_ethos_n_main_14(%ethos-n_14_i0: Tensor[(1, 40, 40, 64), int8] /* ty=Tensor[(1, 40, 40, 64), int8] */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_14") -> Tensor[(1, 40, 40, 64), int8] {
  reshape(%ethos-n_14_i0, newshape=[1, 40, 40, 64]) /* ty=Tensor[(1, 40, 40, 64), int8] span=model_10/tf.strided_slice_4/StridedSlice:0:0 */
}

def @tvmgen_default_ethos_n_main_15(%ethos-n_15_i0: Tensor[(1, 40, 40, 64), int8] /* ty=Tensor[(1, 40, 40, 64), int8] */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_15") -> Tensor[(1, 40, 40, 64), int8] {
  reshape(%ethos-n_15_i0, newshape=[1, 40, 40, 64]) /* ty=Tensor[(1, 40, 40, 64), int8] span=model_10/tf.strided_slice_5/StridedSlice:0:0 */
}

def @tvmgen_default_ethos_n_main_16(%ethos-n_16_i0: (Tensor[(1, 40, 40, 64), int8], Tensor[(1, 40, 40, 64), int8], Tensor[(1, 40, 40, 64), int8]) /* ty=(Tensor[(1, 40, 40, 64), int8], Tensor[(1, 40, 40, 64), int8], Tensor[(1, 40, 40, 64), int8]) */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_16") -> Tensor[(1, 40, 40, 192), int8] {
  %549 = (0.0323925f /* ty=float32 span=model_10/tf.concat_2/concat:0:0 */, 0.0323925f /* ty=float32 span=model_10/tf.concat_2/concat:0:0 */, 0.0323925f /* ty=float32 span=model_10/tf.concat_2/concat:0:0 */) /* ty=(float32, float32, float32) span=model_10/tf.concat_2/concat:0:0 */;
  %550 = (-111 /* ty=int32 span=model_10/tf.concat_2/concat:0:0 */, -111 /* ty=int32 span=model_10/tf.concat_2/concat:0:0 */, -111 /* ty=int32 span=model_10/tf.concat_2/concat:0:0 */) /* ty=(int32, int32, int32) span=model_10/tf.concat_2/concat:0:0 */;
  qnn.concatenate(%ethos-n_16_i0, %549, %550, 0.0323925f /* ty=float32 span=model_10/tf.concat_2/concat:0:0 */, -111 /* ty=int32 span=model_10/tf.concat_2/concat:0:0 */, axis=3) /* ty=Tensor[(1, 40, 40, 192), int8] span=model_10/tf.concat_2/concat:0:0 */
}

def @tvmgen_default_ethos_n_main_2(%ethos-n_2_i0: (Tensor[(1, 160, 160, 32), int8], Tensor[(1, 160, 160, 32), int8], Tensor[(1, 160, 160, 32), int8]) /* ty=(Tensor[(1, 160, 160, 32), int8], Tensor[(1, 160, 160, 32), int8], Tensor[(1, 160, 160, 32), int8]) */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_2") -> Tensor[(1, 160, 160, 96), int8] {
  %551 = (0.0666328f /* ty=float32 span=model_10/tf.concat/concat:0:0 */, 0.0666328f /* ty=float32 span=model_10/tf.concat/concat:0:0 */, 0.0666328f /* ty=float32 span=model_10/tf.concat/concat:0:0 */) /* ty=(float32, float32, float32) span=model_10/tf.concat/concat:0:0 */;
  %552 = (-124 /* ty=int32 span=model_10/tf.concat/concat:0:0 */, -124 /* ty=int32 span=model_10/tf.concat/concat:0:0 */, -124 /* ty=int32 span=model_10/tf.concat/concat:0:0 */) /* ty=(int32, int32, int32) span=model_10/tf.concat/concat:0:0 */;
  qnn.concatenate(%ethos-n_2_i0, %551, %552, 0.0666328f /* ty=float32 span=model_10/tf.concat/concat:0:0 */, -124 /* ty=int32 span=model_10/tf.concat/concat:0:0 */, axis=3) /* ty=Tensor[(1, 160, 160, 96), int8] span=model_10/tf.concat/concat:0:0 */
}

def @tvmgen_default_ethos_n_main_21(%ethos-n_21_i0: Tensor[(1, 20, 20, 128), int8] /* ty=Tensor[(1, 20, 20, 128), int8] */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_21") -> Tensor[(1, 20, 20, 128), int8] {
  reshape(%ethos-n_21_i0, newshape=[1, 20, 20, 128]) /* ty=Tensor[(1, 20, 20, 128), int8] span=model_10/tf.strided_slice_6/StridedSlice:0:0 */
}

def @tvmgen_default_ethos_n_main_22(%ethos-n_22_i0: Tensor[(1, 20, 20, 128), int8] /* ty=Tensor[(1, 20, 20, 128), int8] */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_22") -> Tensor[(1, 20, 20, 128), int8] {
  reshape(%ethos-n_22_i0, newshape=[1, 20, 20, 128]) /* ty=Tensor[(1, 20, 20, 128), int8] span=model_10/tf.strided_slice_7/StridedSlice:0:0 */
}

def @tvmgen_default_ethos_n_main_23(%ethos-n_23_i0: (Tensor[(1, 20, 20, 128), int8], Tensor[(1, 20, 20, 128), int8], Tensor[(1, 20, 20, 128), int8]) /* ty=(Tensor[(1, 20, 20, 128), int8], Tensor[(1, 20, 20, 128), int8], Tensor[(1, 20, 20, 128), int8]) */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_23") -> Tensor[(1, 20, 20, 384), int8] {
  %553 = (0.0386514f /* ty=float32 span=model_10/tf.concat_3/concat:0:0 */, 0.0386514f /* ty=float32 span=model_10/tf.concat_3/concat:0:0 */, 0.0386514f /* ty=float32 span=model_10/tf.concat_3/concat:0:0 */) /* ty=(float32, float32, float32) span=model_10/tf.concat_3/concat:0:0 */;
  %554 = (-114 /* ty=int32 span=model_10/tf.concat_3/concat:0:0 */, -114 /* ty=int32 span=model_10/tf.concat_3/concat:0:0 */, -114 /* ty=int32 span=model_10/tf.concat_3/concat:0:0 */) /* ty=(int32, int32, int32) span=model_10/tf.concat_3/concat:0:0 */;
  qnn.concatenate(%ethos-n_23_i0, %553, %554, 0.0386514f /* ty=float32 span=model_10/tf.concat_3/concat:0:0 */, -114 /* ty=int32 span=model_10/tf.concat_3/concat:0:0 */, axis=3) /* ty=Tensor[(1, 20, 20, 384), int8] span=model_10/tf.concat_3/concat:0:0 */
}

def @tvmgen_default_ethos_n_main_28(%ethos-n_28_i0: Tensor[(1, 20, 20, 128), int8] /* ty=Tensor[(1, 20, 20, 128), int8] */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_28") -> (Tensor[(1, 20, 20, 128), int8], Tensor[(1, 20, 20, 128), int8], Tensor[(1, 20, 20, 128), int8]) {
  %555 = nn.max_pool2d(%ethos-n_28_i0, pool_size=[5, 5], padding=[2, 2, 2, 2], layout="NHWC") /* ty=Tensor[(1, 20, 20, 128), int8] span=model_10/tf.compat.v1.nn.pool/max_pool:0:0 */;
  %556 = nn.max_pool2d(%555, pool_size=[5, 5], padding=[2, 2, 2, 2], layout="NHWC") /* ty=Tensor[(1, 20, 20, 128), int8] span=model_10/tf.compat.v1.nn.pool_1/max_pool:0:0 */;
  %557 = nn.max_pool2d(%556, pool_size=[5, 5], padding=[2, 2, 2, 2], layout="NHWC") /* ty=Tensor[(1, 20, 20, 128), int8] span=model_10/tf.compat.v1.nn.pool_2/max_pool:0:0 */;
  (%555, %556, %557) /* ty=(Tensor[(1, 20, 20, 128), int8], Tensor[(1, 20, 20, 128), int8], Tensor[(1, 20, 20, 128), int8]) */
}

def @tvmgen_default_ethos_n_main_29(%ethos-n_29_i0: (Tensor[(1, 20, 20, 128), int8], Tensor[(1, 20, 20, 128), int8], Tensor[(1, 20, 20, 128), int8], Tensor[(1, 20, 20, 128), int8]) /* ty=(Tensor[(1, 20, 20, 128), int8], Tensor[(1, 20, 20, 128), int8], Tensor[(1, 20, 20, 128), int8], Tensor[(1, 20, 20, 128), int8]) */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_29") -> Tensor[(1, 20, 20, 512), int8] {
  %558 = (0.0289307f /* ty=float32 span=model_10/tf.concat_4/concat:0:0 */, 0.0289307f /* ty=float32 span=model_10/tf.concat_4/concat:0:0 */, 0.0289307f /* ty=float32 span=model_10/tf.concat_4/concat:0:0 */, 0.0289307f /* ty=float32 span=model_10/tf.concat_4/concat:0:0 */) /* ty=(float32, float32, float32, float32) span=model_10/tf.concat_4/concat:0:0 */;
  %559 = (-118 /* ty=int32 span=model_10/tf.concat_4/concat:0:0 */, -118 /* ty=int32 span=model_10/tf.concat_4/concat:0:0 */, -118 /* ty=int32 span=model_10/tf.concat_4/concat:0:0 */, -118 /* ty=int32 span=model_10/tf.concat_4/concat:0:0 */) /* ty=(int32, int32, int32, int32) span=model_10/tf.concat_4/concat:0:0 */;
  qnn.concatenate(%ethos-n_29_i0, %558, %559, 0.0289307f /* ty=float32 span=model_10/tf.concat_4/concat:0:0 */, -118 /* ty=int32 span=model_10/tf.concat_4/concat:0:0 */, axis=3) /* ty=Tensor[(1, 20, 20, 512), int8] span=model_10/tf.concat_4/concat:0:0 */
}

def @tvmgen_default_ethos_n_main_34(%ethos-n_34_i0: Tensor[(1, 20, 20, 128), int8] /* ty=Tensor[(1, 20, 20, 128), int8] */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_34") -> Tensor[(1, 20, 20, 128), int8] {
  reshape(%ethos-n_34_i0, newshape=[1, 20, 20, 128]) /* ty=Tensor[(1, 20, 20, 128), int8] span=model_10/tf.strided_slice_8/StridedSlice:0:0 */
}

def @tvmgen_default_ethos_n_main_35(%ethos-n_35_i0: Tensor[(1, 20, 20, 128), int8] /* ty=Tensor[(1, 20, 20, 128), int8] */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_35") -> Tensor[(1, 20, 20, 128), int8] {
  reshape(%ethos-n_35_i0, newshape=[1, 20, 20, 128]) /* ty=Tensor[(1, 20, 20, 128), int8] span=model_10/tf.strided_slice_9/StridedSlice:0:0 */
}

def @tvmgen_default_ethos_n_main_36(%ethos-n_36_i0: (Tensor[(1, 20, 20, 128), int8], Tensor[(1, 20, 20, 128), int8], Tensor[(1, 20, 20, 128), int8]) /* ty=(Tensor[(1, 20, 20, 128), int8], Tensor[(1, 20, 20, 128), int8], Tensor[(1, 20, 20, 128), int8]) */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_36") -> Tensor[(1, 20, 20, 384), int8] {
  %560 = (0.024731f /* ty=float32 span=model_10/tf.concat_5/concat:0:0 */, 0.024731f /* ty=float32 span=model_10/tf.concat_5/concat:0:0 */, 0.024731f /* ty=float32 span=model_10/tf.concat_5/concat:0:0 */) /* ty=(float32, float32, float32) span=model_10/tf.concat_5/concat:0:0 */;
  %561 = (-105 /* ty=int32 span=model_10/tf.concat_5/concat:0:0 */, -105 /* ty=int32 span=model_10/tf.concat_5/concat:0:0 */, -105 /* ty=int32 span=model_10/tf.concat_5/concat:0:0 */) /* ty=(int32, int32, int32) span=model_10/tf.concat_5/concat:0:0 */;
  qnn.concatenate(%ethos-n_36_i0, %560, %561, 0.024731f /* ty=float32 span=model_10/tf.concat_5/concat:0:0 */, -105 /* ty=int32 span=model_10/tf.concat_5/concat:0:0 */, axis=3) /* ty=Tensor[(1, 20, 20, 384), int8] span=model_10/tf.concat_5/concat:0:0 */
}

def @tvmgen_default_ethos_n_main_41(%ethos-n_41_i0: (Tensor[(1, 40, 40, 256), int8], Tensor[(1, 40, 40, 128), int8]) /* ty=(Tensor[(1, 40, 40, 256), int8], Tensor[(1, 40, 40, 128), int8]) */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_41") -> Tensor[(1, 40, 40, 384), int8] {
  %562 = (0.0277646f /* ty=float32 span=model_10/tf.concat_6/concat:0:0 */, 0.0277646f /* ty=float32 span=model_10/tf.concat_6/concat:0:0 */) /* ty=(float32, float32) span=model_10/tf.concat_6/concat:0:0 */;
  %563 = (-118 /* ty=int32 span=model_10/tf.concat_6/concat:0:0 */, -118 /* ty=int32 span=model_10/tf.concat_6/concat:0:0 */) /* ty=(int32, int32) span=model_10/tf.concat_6/concat:0:0 */;
  qnn.concatenate(%ethos-n_41_i0, %562, %563, 0.0277646f /* ty=float32 span=model_10/tf.concat_6/concat:0:0 */, -118 /* ty=int32 span=model_10/tf.concat_6/concat:0:0 */, axis=3) /* ty=Tensor[(1, 40, 40, 384), int8] span=model_10/tf.concat_6/concat:0:0 */
}

def @tvmgen_default_ethos_n_main_46(%ethos-n_46_i0: Tensor[(1, 40, 40, 64), int8] /* ty=Tensor[(1, 40, 40, 64), int8] */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_46") -> Tensor[(1, 40, 40, 64), int8] {
  reshape(%ethos-n_46_i0, newshape=[1, 40, 40, 64]) /* ty=Tensor[(1, 40, 40, 64), int8] span=model_10/tf.strided_slice_10/StridedSlice:0:0 */
}

def @tvmgen_default_ethos_n_main_47(%ethos-n_47_i0: Tensor[(1, 40, 40, 64), int8] /* ty=Tensor[(1, 40, 40, 64), int8] */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_47") -> Tensor[(1, 40, 40, 64), int8] {
  reshape(%ethos-n_47_i0, newshape=[1, 40, 40, 64]) /* ty=Tensor[(1, 40, 40, 64), int8] span=model_10/tf.strided_slice_11/StridedSlice:0:0 */
}

def @tvmgen_default_ethos_n_main_48(%ethos-n_48_i0: (Tensor[(1, 40, 40, 64), int8], Tensor[(1, 40, 40, 64), int8], Tensor[(1, 40, 40, 64), int8]) /* ty=(Tensor[(1, 40, 40, 64), int8], Tensor[(1, 40, 40, 64), int8], Tensor[(1, 40, 40, 64), int8]) */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_48") -> Tensor[(1, 40, 40, 192), int8] {
  %564 = (0.030216f /* ty=float32 span=model_10/tf.concat_7/concat:0:0 */, 0.030216f /* ty=float32 span=model_10/tf.concat_7/concat:0:0 */, 0.030216f /* ty=float32 span=model_10/tf.concat_7/concat:0:0 */) /* ty=(float32, float32, float32) span=model_10/tf.concat_7/concat:0:0 */;
  %565 = (-119 /* ty=int32 span=model_10/tf.concat_7/concat:0:0 */, -119 /* ty=int32 span=model_10/tf.concat_7/concat:0:0 */, -119 /* ty=int32 span=model_10/tf.concat_7/concat:0:0 */) /* ty=(int32, int32, int32) span=model_10/tf.concat_7/concat:0:0 */;
  qnn.concatenate(%ethos-n_48_i0, %564, %565, 0.030216f /* ty=float32 span=model_10/tf.concat_7/concat:0:0 */, -119 /* ty=int32 span=model_10/tf.concat_7/concat:0:0 */, axis=3) /* ty=Tensor[(1, 40, 40, 192), int8] span=model_10/tf.concat_7/concat:0:0 */
}

def @tvmgen_default_ethos_n_main_53(%ethos-n_53_i0: (Tensor[(1, 80, 80, 128), int8], Tensor[(1, 80, 80, 128), int8]) /* ty=(Tensor[(1, 80, 80, 128), int8], Tensor[(1, 80, 80, 128), int8]) */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_53") -> Tensor[(1, 80, 80, 256), int8] {
  %566 = (0.0341957f /* ty=float32 span=model_10/tf.concat_8/concat:0:0 */, 0.0341957f /* ty=float32 span=model_10/tf.concat_8/concat:0:0 */) /* ty=(float32, float32) span=model_10/tf.concat_8/concat:0:0 */;
  %567 = (-120 /* ty=int32 span=model_10/tf.concat_8/concat:0:0 */, -120 /* ty=int32 span=model_10/tf.concat_8/concat:0:0 */) /* ty=(int32, int32) span=model_10/tf.concat_8/concat:0:0 */;
  qnn.concatenate(%ethos-n_53_i0, %566, %567, 0.0341957f /* ty=float32 span=model_10/tf.concat_8/concat:0:0 */, -120 /* ty=int32 span=model_10/tf.concat_8/concat:0:0 */, axis=3) /* ty=Tensor[(1, 80, 80, 256), int8] span=model_10/tf.concat_8/concat:0:0 */
}

def @tvmgen_default_ethos_n_main_58(%ethos-n_58_i0: Tensor[(1, 80, 80, 32), int8] /* ty=Tensor[(1, 80, 80, 32), int8] */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_58") -> Tensor[(1, 80, 80, 32), int8] {
  reshape(%ethos-n_58_i0, newshape=[1, 80, 80, 32]) /* ty=Tensor[(1, 80, 80, 32), int8] span=model_10/tf.strided_slice_12/StridedSlice:0:0 */
}

def @tvmgen_default_ethos_n_main_59(%ethos-n_59_i0: Tensor[(1, 80, 80, 32), int8] /* ty=Tensor[(1, 80, 80, 32), int8] */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_59") -> Tensor[(1, 80, 80, 32), int8] {
  reshape(%ethos-n_59_i0, newshape=[1, 80, 80, 32]) /* ty=Tensor[(1, 80, 80, 32), int8] span=model_10/tf.strided_slice_13/StridedSlice:0:0 */
}

def @tvmgen_default_ethos_n_main_60(%ethos-n_60_i0: (Tensor[(1, 80, 80, 32), int8], Tensor[(1, 80, 80, 32), int8], Tensor[(1, 80, 80, 32), int8]) /* ty=(Tensor[(1, 80, 80, 32), int8], Tensor[(1, 80, 80, 32), int8], Tensor[(1, 80, 80, 32), int8]) */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_60") -> Tensor[(1, 80, 80, 96), int8] {
  %568 = (0.0362055f /* ty=float32 span=model_10/tf.concat_9/concat:0:0 */, 0.0362055f /* ty=float32 span=model_10/tf.concat_9/concat:0:0 */, 0.0362055f /* ty=float32 span=model_10/tf.concat_9/concat:0:0 */) /* ty=(float32, float32, float32) span=model_10/tf.concat_9/concat:0:0 */;
  %569 = (-120 /* ty=int32 span=model_10/tf.concat_9/concat:0:0 */, -120 /* ty=int32 span=model_10/tf.concat_9/concat:0:0 */, -120 /* ty=int32 span=model_10/tf.concat_9/concat:0:0 */) /* ty=(int32, int32, int32) span=model_10/tf.concat_9/concat:0:0 */;
  qnn.concatenate(%ethos-n_60_i0, %568, %569, 0.0362055f /* ty=float32 span=model_10/tf.concat_9/concat:0:0 */, -120 /* ty=int32 span=model_10/tf.concat_9/concat:0:0 */, axis=3) /* ty=Tensor[(1, 80, 80, 96), int8] span=model_10/tf.concat_9/concat:0:0 */
}

def @tvmgen_default_ethos_n_main_65(%ethos-n_65_i0: (Tensor[(1, 80, 80, 64), int8], Tensor[(1, 80, 80, 15), int8]) /* ty=(Tensor[(1, 80, 80, 64), int8], Tensor[(1, 80, 80, 15), int8]) */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_65") -> Tensor[(1, 80, 80, 79), int8] {
  %570 = (0.117723f /* ty=float32 span=model_10/tf.concat_11/concat:0:0 */, 0.117723f /* ty=float32 span=model_10/tf.concat_11/concat:0:0 */) /* ty=(float32, float32) span=model_10/tf.concat_11/concat:0:0 */;
  %571 = (37 /* ty=int32 span=model_10/tf.concat_11/concat:0:0 */, 37 /* ty=int32 span=model_10/tf.concat_11/concat:0:0 */) /* ty=(int32, int32) span=model_10/tf.concat_11/concat:0:0 */;
  qnn.concatenate(%ethos-n_65_i0, %570, %571, 0.117723f /* ty=float32 span=model_10/tf.concat_11/concat:0:0 */, 37 /* ty=int32 span=model_10/tf.concat_11/concat:0:0 */, axis=3) /* ty=Tensor[(1, 80, 80, 79), int8] span=model_10/tf.concat_11/concat:0:0 */
}

def @tvmgen_default_ethos_n_main_7(%ethos-n_7_i0: Tensor[(1, 80, 80, 64), int8] /* ty=Tensor[(1, 80, 80, 64), int8] */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_7") -> Tensor[(1, 80, 80, 64), int8] {
  reshape(%ethos-n_7_i0, newshape=[1, 80, 80, 64]) /* ty=Tensor[(1, 80, 80, 64), int8] span=model_10/tf.strided_slice_2/StridedSlice:0:0 */
}

def @tvmgen_default_ethos_n_main_70(%ethos-n_70_i0: Tensor[(1, 79, 80, 80), int8] /* ty=Tensor[(1, 79, 80, 80), int8] */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_70") -> Tensor[(1, 79, 6400), int8] {
  reshape(%ethos-n_70_i0, newshape=[1, 79, 6400]) /* ty=Tensor[(1, 79, 6400), int8] span=model_10/tf.reshape_2/Reshape:0:0 */
}

def @tvmgen_default_ethos_n_main_71(%ethos-n_71_i0: (Tensor[(1, 40, 40, 64), int8], Tensor[(1, 40, 40, 128), int8]) /* ty=(Tensor[(1, 40, 40, 64), int8], Tensor[(1, 40, 40, 128), int8]) */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_71") -> Tensor[(1, 40, 40, 192), int8] {
  %572 = (0.030537f /* ty=float32 span=model_10/tf.concat_10/concat:0:0 */, 0.030537f /* ty=float32 span=model_10/tf.concat_10/concat:0:0 */) /* ty=(float32, float32) span=model_10/tf.concat_10/concat:0:0 */;
  %573 = (-119 /* ty=int32 span=model_10/tf.concat_10/concat:0:0 */, -119 /* ty=int32 span=model_10/tf.concat_10/concat:0:0 */) /* ty=(int32, int32) span=model_10/tf.concat_10/concat:0:0 */;
  qnn.concatenate(%ethos-n_71_i0, %572, %573, 0.030537f /* ty=float32 span=model_10/tf.concat_10/concat:0:0 */, -119 /* ty=int32 span=model_10/tf.concat_10/concat:0:0 */, axis=3) /* ty=Tensor[(1, 40, 40, 192), int8] span=model_10/tf.concat_10/concat:0:0 */
}

def @tvmgen_default_ethos_n_main_76(%ethos-n_76_i0: Tensor[(1, 40, 40, 64), int8] /* ty=Tensor[(1, 40, 40, 64), int8] */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_76") -> Tensor[(1, 40, 40, 64), int8] {
  reshape(%ethos-n_76_i0, newshape=[1, 40, 40, 64]) /* ty=Tensor[(1, 40, 40, 64), int8] span=model_10/tf.strided_slice_14/StridedSlice:0:0 */
}

def @tvmgen_default_ethos_n_main_77(%ethos-n_77_i0: Tensor[(1, 40, 40, 64), int8] /* ty=Tensor[(1, 40, 40, 64), int8] */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_77") -> Tensor[(1, 40, 40, 64), int8] {
  reshape(%ethos-n_77_i0, newshape=[1, 40, 40, 64]) /* ty=Tensor[(1, 40, 40, 64), int8] span=model_10/tf.strided_slice_15/StridedSlice:0:0 */
}

def @tvmgen_default_ethos_n_main_78(%ethos-n_78_i0: (Tensor[(1, 40, 40, 64), int8], Tensor[(1, 40, 40, 64), int8], Tensor[(1, 40, 40, 64), int8]) /* ty=(Tensor[(1, 40, 40, 64), int8], Tensor[(1, 40, 40, 64), int8], Tensor[(1, 40, 40, 64), int8]) */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_78") -> Tensor[(1, 40, 40, 192), int8] {
  %574 = (0.0286268f /* ty=float32 span=model_10/tf.concat_12/concat:0:0 */, 0.0286268f /* ty=float32 span=model_10/tf.concat_12/concat:0:0 */, 0.0286268f /* ty=float32 span=model_10/tf.concat_12/concat:0:0 */) /* ty=(float32, float32, float32) span=model_10/tf.concat_12/concat:0:0 */;
  %575 = (-118 /* ty=int32 span=model_10/tf.concat_12/concat:0:0 */, -118 /* ty=int32 span=model_10/tf.concat_12/concat:0:0 */, -118 /* ty=int32 span=model_10/tf.concat_12/concat:0:0 */) /* ty=(int32, int32, int32) span=model_10/tf.concat_12/concat:0:0 */;
  qnn.concatenate(%ethos-n_78_i0, %574, %575, 0.0286268f /* ty=float32 span=model_10/tf.concat_12/concat:0:0 */, -118 /* ty=int32 span=model_10/tf.concat_12/concat:0:0 */, axis=3) /* ty=Tensor[(1, 40, 40, 192), int8] span=model_10/tf.concat_12/concat:0:0 */
}

def @tvmgen_default_ethos_n_main_8(%ethos-n_8_i0: Tensor[(1, 80, 80, 64), int8] /* ty=Tensor[(1, 80, 80, 64), int8] */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_8") -> Tensor[(1, 80, 80, 64), int8] {
  reshape(%ethos-n_8_i0, newshape=[1, 80, 80, 64]) /* ty=Tensor[(1, 80, 80, 64), int8] span=model_10/tf.strided_slice_3/StridedSlice:0:0 */
}

def @tvmgen_default_ethos_n_main_83(%ethos-n_83_i0: (Tensor[(1, 40, 40, 64), int8], Tensor[(1, 40, 40, 15), int8]) /* ty=(Tensor[(1, 40, 40, 64), int8], Tensor[(1, 40, 40, 15), int8]) */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_83") -> Tensor[(1, 40, 40, 79), int8] {
  %576 = (0.117723f /* ty=float32 span=model_10/tf.concat_14/concat:0:0 */, 0.117723f /* ty=float32 span=model_10/tf.concat_14/concat:0:0 */) /* ty=(float32, float32) span=model_10/tf.concat_14/concat:0:0 */;
  %577 = (37 /* ty=int32 span=model_10/tf.concat_14/concat:0:0 */, 37 /* ty=int32 span=model_10/tf.concat_14/concat:0:0 */) /* ty=(int32, int32) span=model_10/tf.concat_14/concat:0:0 */;
  qnn.concatenate(%ethos-n_83_i0, %576, %577, 0.117723f /* ty=float32 span=model_10/tf.concat_14/concat:0:0 */, 37 /* ty=int32 span=model_10/tf.concat_14/concat:0:0 */, axis=3) /* ty=Tensor[(1, 40, 40, 79), int8] span=model_10/tf.concat_14/concat:0:0 */
}

def @tvmgen_default_ethos_n_main_88(%ethos-n_88_i0: Tensor[(1, 79, 40, 40), int8] /* ty=Tensor[(1, 79, 40, 40), int8] */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_88") -> Tensor[(1, 79, 1600), int8] {
  reshape(%ethos-n_88_i0, newshape=[1, 79, 1600]) /* ty=Tensor[(1, 79, 1600), int8] span=model_10/tf.reshape_5/Reshape:0:0 */
}

def @tvmgen_default_ethos_n_main_89(%ethos-n_89_i0: (Tensor[(1, 20, 20, 128), int8], Tensor[(1, 20, 20, 256), int8]) /* ty=(Tensor[(1, 20, 20, 128), int8], Tensor[(1, 20, 20, 256), int8]) */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_89") -> Tensor[(1, 20, 20, 384), int8] {
  %578 = (0.0312304f /* ty=float32 span=model_10/tf.concat_13/concat:0:0 */, 0.0312304f /* ty=float32 span=model_10/tf.concat_13/concat:0:0 */) /* ty=(float32, float32) span=model_10/tf.concat_13/concat:0:0 */;
  %579 = (-119 /* ty=int32 span=model_10/tf.concat_13/concat:0:0 */, -119 /* ty=int32 span=model_10/tf.concat_13/concat:0:0 */) /* ty=(int32, int32) span=model_10/tf.concat_13/concat:0:0 */;
  qnn.concatenate(%ethos-n_89_i0, %578, %579, 0.0312304f /* ty=float32 span=model_10/tf.concat_13/concat:0:0 */, -119 /* ty=int32 span=model_10/tf.concat_13/concat:0:0 */, axis=3) /* ty=Tensor[(1, 20, 20, 384), int8] span=model_10/tf.concat_13/concat:0:0 */
}

def @tvmgen_default_ethos_n_main_9(%ethos-n_9_i0: (Tensor[(1, 80, 80, 64), int8], Tensor[(1, 80, 80, 64), int8], Tensor[(1, 80, 80, 64), int8]) /* ty=(Tensor[(1, 80, 80, 64), int8], Tensor[(1, 80, 80, 64), int8], Tensor[(1, 80, 80, 64), int8]) */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_9") -> Tensor[(1, 80, 80, 192), int8] {
  %580 = (0.0360564f /* ty=float32 span=model_10/tf.concat_1/concat:0:0 */, 0.0360564f /* ty=float32 span=model_10/tf.concat_1/concat:0:0 */, 0.0360564f /* ty=float32 span=model_10/tf.concat_1/concat:0:0 */) /* ty=(float32, float32, float32) span=model_10/tf.concat_1/concat:0:0 */;
  %581 = (-120 /* ty=int32 span=model_10/tf.concat_1/concat:0:0 */, -120 /* ty=int32 span=model_10/tf.concat_1/concat:0:0 */, -120 /* ty=int32 span=model_10/tf.concat_1/concat:0:0 */) /* ty=(int32, int32, int32) span=model_10/tf.concat_1/concat:0:0 */;
  qnn.concatenate(%ethos-n_9_i0, %580, %581, 0.0360564f /* ty=float32 span=model_10/tf.concat_1/concat:0:0 */, -120 /* ty=int32 span=model_10/tf.concat_1/concat:0:0 */, axis=3) /* ty=Tensor[(1, 80, 80, 192), int8] span=model_10/tf.concat_1/concat:0:0 */
}

def @tvmgen_default_ethos_n_main_94(%ethos-n_94_i0: Tensor[(1, 20, 20, 128), int8] /* ty=Tensor[(1, 20, 20, 128), int8] */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_94") -> Tensor[(1, 20, 20, 128), int8] {
  reshape(%ethos-n_94_i0, newshape=[1, 20, 20, 128]) /* ty=Tensor[(1, 20, 20, 128), int8] span=model_10/tf.strided_slice_16/StridedSlice:0:0 */
}

def @tvmgen_default_ethos_n_main_95(%ethos-n_95_i0: Tensor[(1, 20, 20, 128), int8] /* ty=Tensor[(1, 20, 20, 128), int8] */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_95") -> Tensor[(1, 20, 20, 128), int8] {
  reshape(%ethos-n_95_i0, newshape=[1, 20, 20, 128]) /* ty=Tensor[(1, 20, 20, 128), int8] span=model_10/tf.strided_slice_17/StridedSlice:0:0 */
}

def @tvmgen_default_ethos_n_main_96(%ethos-n_96_i0: (Tensor[(1, 20, 20, 128), int8], Tensor[(1, 20, 20, 128), int8], Tensor[(1, 20, 20, 128), int8]) /* ty=(Tensor[(1, 20, 20, 128), int8], Tensor[(1, 20, 20, 128), int8], Tensor[(1, 20, 20, 128), int8]) */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_96") -> Tensor[(1, 20, 20, 384), int8] {
  %582 = (0.0417772f /* ty=float32 span=model_10/tf.concat_15/concat:0:0 */, 0.0417772f /* ty=float32 span=model_10/tf.concat_15/concat:0:0 */, 0.0417772f /* ty=float32 span=model_10/tf.concat_15/concat:0:0 */) /* ty=(float32, float32, float32) span=model_10/tf.concat_15/concat:0:0 */;
  %583 = (-115 /* ty=int32 span=model_10/tf.concat_15/concat:0:0 */, -115 /* ty=int32 span=model_10/tf.concat_15/concat:0:0 */, -115 /* ty=int32 span=model_10/tf.concat_15/concat:0:0 */) /* ty=(int32, int32, int32) span=model_10/tf.concat_15/concat:0:0 */;
  qnn.concatenate(%ethos-n_96_i0, %582, %583, 0.0417772f /* ty=float32 span=model_10/tf.concat_15/concat:0:0 */, -115 /* ty=int32 span=model_10/tf.concat_15/concat:0:0 */, axis=3) /* ty=Tensor[(1, 20, 20, 384), int8] span=model_10/tf.concat_15/concat:0:0 */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */