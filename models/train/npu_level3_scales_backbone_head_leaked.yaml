# NPU 최적화 Level 3: Backbone + Head + C2PSA 최적화 + ReLU 활성화
# 적용: 3번 (Backbone), 4번 (Head C3k2), 5번 (C2PSA → CSP), SiLU → ReLU
# Target: Arm Ethos-N NPU
# Updated: 2025-09-30 (활성화 함수 최적화)

# Parameters
nc: 80 # number of classes (원본 유지)
scales: # 원본 스케일 유지
  # [depth, width, max_channels]
  n: [0.50, 0.25, 1024] # summary: 181 layers, 2624080 parameters, 2624064 gradients, 6.6 GFLOPs
  s: [0.50, 0.50, 1024] # summary: 181 layers, 9458752 parameters, 9458736 gradients, 21.7 GFLOPs
  m: [0.50, 1.00, 512] # summary: 231 layers, 20114688 parameters, 20114672 gradients, 68.5 GFLOPs
  l: [1.00, 1.00, 512] # summary: 357 layers, 25372160 parameters, 25372144 gradients, 87.6 GFLOPs
  x: [1.00, 1.50, 512] # summary: 357 layers, 56966176 parameters, 56966160 gradients, 196.0 GFLOPs

activation: nn.LeakyReLU(0.1) # @aleshem's solution from GitHub #7296 (SiLU → LeakyReLU)
# NPU 최적화 backbone - C3k2 → C2f, repeat 감소
backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv, [64, 3, 2]] # 0-P1/2
  - [-1, 1, Conv, [128, 3, 2]] # 1-P2/4
  - [-1, 1, C2f, [256, False]] # C3k2 → C2f, repeat 2→1
  - [-1, 1, Conv, [256, 3, 2]] # 3-P3/8
  - [-1, 1, C2f, [512, False]] # C3k2 → C2f, repeat 2→1
  - [-1, 1, Conv, [512, 3, 2]] # 5-P4/16
  - [-1, 1, C2f, [512, True]] # C3k2 → C2f, repeat 2→1
  - [-1, 1, Conv, [1024, 3, 2]] # 7-P5/32
  - [-1, 1, C2f, [1024, True]] # C3k2 → C2f, repeat 2→1
  - [-1, 1, SPPF, [1024, 5]] # 9 (유지)
  - [-1, 1, C2f, [1024, True]] # 10 - C2PSA → C2f (어텐션 제거)

# NPU 최적화 head - C3k2 → C2f, repeat 감소
head:
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]
  - [[-1, 6], 1, Concat, [1]] # cat backbone P4
  - [-1, 1, C2f, [512, False]] # 13 - C3k2 → C2f, repeat 2→1

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]
  - [[-1, 4], 1, Concat, [1]] # cat backbone P3
  - [-1, 1, C2f, [256, False]] # 16 (P3/8-small) - C3k2 → C2f

  - [-1, 1, Conv, [256, 3, 2]]
  - [[-1, 13], 1, Concat, [1]] # cat head P4
  - [-1, 1, C2f, [512, False]] # 19 (P4/16-medium) - C3k2 → C2f

  - [-1, 1, Conv, [512, 3, 2]]
  - [[-1, 10], 1, Concat, [1]] # cat head P5
  - [-1, 1, C2f, [1024, True]] # 22 (P5/32-large) - C3k2 → C2f

  - [[16, 19, 22], 1, Detect, [nc]] # Detect(P3, P4, P5)