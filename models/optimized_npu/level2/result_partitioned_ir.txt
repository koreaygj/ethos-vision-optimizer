================================================================================
 Partitioned Relay IR (with Ethos-N annotations)
================================================================================

#[version = "0.0.5"]
def @main(%v_param_137: Tensor[(1, 2, 8400), int8] /* ty=Tensor[(1, 2, 8400), int8] span=tfl.pseudo_qconst1:0:0 */, %serving_default_images:0: Tensor[(1, 640, 640, 3), int8] /* ty=Tensor[(1, 640, 640, 3), int8] span=serving_default_images:0:0:0 */, %v_param_1: Tensor[(3, 3, 3, 16), int8] /* ty=Tensor[(3, 3, 3, 16), int8] span=tfl.pseudo_qconst137:0:0 */, %v_param_2: Tensor[(16), int32] /* ty=Tensor[(16), int32] span=tfl.pseudo_qconst136:0:0 */, %v_param_3: Tensor[(3, 3, 16, 32), int8] /* ty=Tensor[(3, 3, 16, 32), int8] span=tfl.pseudo_qconst135:0:0 */, %v_param_4: Tensor[(32), int32] /* ty=Tensor[(32), int32] span=tfl.pseudo_qconst134:0:0 */, %v_param_5: Tensor[(1, 1, 32, 64), int8] /* ty=Tensor[(1, 1, 32, 64), int8] span=tfl.pseudo_qconst133:0:0 */, %v_param_6: Tensor[(64), int32] /* ty=Tensor[(64), int32] span=tfl.pseudo_qconst132:0:0 */, %v_param_7: Tensor[(3, 3, 32, 32), int8] /* ty=Tensor[(3, 3, 32, 32), int8] span=tfl.pseudo_qconst131:0:0 */, %v_param_8: Tensor[(32), int32] /* ty=Tensor[(32), int32] span=tfl.pseudo_qconst130:0:0 */, %v_param_9: Tensor[(3, 3, 32, 32), int8] /* ty=Tensor[(3, 3, 32, 32), int8] span=tfl.pseudo_qconst129:0:0 */, %v_param_10: Tensor[(32), int32] /* ty=Tensor[(32), int32] span=tfl.pseudo_qconst128:0:0 */, %v_param_11: Tensor[(1, 1, 96, 64), int8] /* ty=Tensor[(1, 1, 96, 64), int8] span=tfl.pseudo_qconst127:0:0 */, %v_param_12: Tensor[(64), int32] /* ty=Tensor[(64), int32] span=tfl.pseudo_qconst126:0:0 */, %v_param_13: Tensor[(3, 3, 64, 64), int8] /* ty=Tensor[(3, 3, 64, 64), int8] span=tfl.pseudo_qconst125:0:0 */, %v_param_14: Tensor[(64), int32] /* ty=Tensor[(64), int32] span=tfl.pseudo_qconst124:0:0 */, %v_param_15: Tensor[(1, 1, 64, 128), int8] /* ty=Tensor[(1, 1, 64, 128), int8] span=tfl.pseudo_qconst123:0:0 */, %v_param_16: Tensor[(128), int32] /* ty=Tensor[(128), int32] span=tfl.pseudo_qconst122:0:0 */, %v_param_17: Tensor[(3, 3, 64, 64), int8] /* ty=Tensor[(3, 3, 64, 64), int8] span=tfl.pseudo_qconst121:0:0 */, %v_param_18: Tensor[(64), int32] /* ty=Tensor[(64), int32] span=tfl.pseudo_qconst120:0:0 */, %v_param_19: Tensor[(3, 3, 64, 64), int8] /* ty=Tensor[(3, 3, 64, 64), int8] span=tfl.pseudo_qconst119:0:0 */, %v_param_20: Tensor[(64), int32] /* ty=Tensor[(64), int32] span=tfl.pseudo_qconst118:0:0 */, %v_param_21: Tensor[(1, 1, 192, 128), int8] /* ty=Tensor[(1, 1, 192, 128), int8] span=tfl.pseudo_qconst117:0:0 */, %v_param_22: Tensor[(128), int32] /* ty=Tensor[(128), int32] span=tfl.pseudo_qconst116:0:0 */, %v_param_23: Tensor[(3, 3, 128, 128), int8] /* ty=Tensor[(3, 3, 128, 128), int8] span=tfl.pseudo_qconst115:0:0 */, %v_param_24: Tensor[(128), int32] /* ty=Tensor[(128), int32] span=tfl.pseudo_qconst114:0:0 */, %v_param_25: Tensor[(1, 1, 128, 128), int8] /* ty=Tensor[(1, 1, 128, 128), int8] span=tfl.pseudo_qconst113:0:0 */, %v_param_26: Tensor[(128), int32] /* ty=Tensor[(128), int32] span=tfl.pseudo_qconst112:0:0 */, %v_param_27: Tensor[(3, 3, 64, 64), int8] /* ty=Tensor[(3, 3, 64, 64), int8] span=tfl.pseudo_qconst111:0:0 */, %v_param_28: Tensor[(64), int32] /* ty=Tensor[(64), int32] span=tfl.pseudo_qconst110:0:0 */, %v_param_29: Tensor[(3, 3, 64, 64), int8] /* ty=Tensor[(3, 3, 64, 64), int8] span=tfl.pseudo_qconst109:0:0 */, %v_param_30: Tensor[(64), int32] /* ty=Tensor[(64), int32] span=tfl.pseudo_qconst108:0:0 */, %v_param_31: Tensor[(1, 1, 192, 128), int8] /* ty=Tensor[(1, 1, 192, 128), int8] span=tfl.pseudo_qconst107:0:0 */, %v_param_32: Tensor[(128), int32] /* ty=Tensor[(128), int32] span=tfl.pseudo_qconst106:0:0 */, %v_param_33: Tensor[(3, 3, 128, 256), int8] /* ty=Tensor[(3, 3, 128, 256), int8] span=tfl.pseudo_qconst105:0:0 */, %v_param_34: Tensor[(256), int32] /* ty=Tensor[(256), int32] span=tfl.pseudo_qconst104:0:0 */, %v_param_35: Tensor[(1, 1, 256, 256), int8] /* ty=Tensor[(1, 1, 256, 256), int8] span=tfl.pseudo_qconst103:0:0 */, %v_param_36: Tensor[(256), int32] /* ty=Tensor[(256), int32] span=tfl.pseudo_qconst102:0:0 */, %v_param_37: Tensor[(3, 3, 128, 128), int8] /* ty=Tensor[(3, 3, 128, 128), int8] span=tfl.pseudo_qconst101:0:0 */, %v_param_38: Tensor[(128), int32] /* ty=Tensor[(128), int32] span=tfl.pseudo_qconst100:0:0 */, %v_param_39: Tensor[(3, 3, 128, 128), int8] /* ty=Tensor[(3, 3, 128, 128), int8] span=tfl.pseudo_qconst99:0:0 */, %v_param_40: Tensor[(128), int32] /* ty=Tensor[(128), int32] span=tfl.pseudo_qconst98:0:0 */, %v_param_41: Tensor[(1, 1, 384, 256), int8] /* ty=Tensor[(1, 1, 384, 256), int8] span=tfl.pseudo_qconst97:0:0 */, %v_param_42: Tensor[(256), int32] /* ty=Tensor[(256), int32] span=tfl.pseudo_qconst96:0:0 */, %v_param_43: Tensor[(1, 1, 256, 128), int8] /* ty=Tensor[(1, 1, 256, 128), int8] span=tfl.pseudo_qconst95:0:0 */, %v_param_44: Tensor[(128), int32] /* ty=Tensor[(128), int32] span=tfl.pseudo_qconst94:0:0 */, %v_param_45: Tensor[(1, 1, 512, 256), int8] /* ty=Tensor[(1, 1, 512, 256), int8] span=tfl.pseudo_qconst93:0:0 */, %v_param_46: Tensor[(256), int32] /* ty=Tensor[(256), int32] span=tfl.pseudo_qconst92:0:0 */, %v_param_47: Tensor[(1, 1, 256, 256), int8] /* ty=Tensor[(1, 1, 256, 256), int8] span=tfl.pseudo_qconst91:0:0 */, %v_param_48: Tensor[(256), int32] /* ty=Tensor[(256), int32] span=tfl.pseudo_qconst90:0:0 */, %v_param_49: Tensor[(1, 1, 128, 256), int8] /* ty=Tensor[(1, 1, 128, 256), int8] span=tfl.pseudo_qconst89:0:0 */, %v_param_50: Tensor[(256), int32] /* ty=Tensor[(256), int32] span=tfl.pseudo_qconst88:0:0 */, %v_param_51: int8 /* ty=int8 span=tfl.pseudo_qconst87:0:0 */, %v_param_52: Tensor[(3, 3, 1, 128), int8] /* ty=Tensor[(3, 3, 1, 128), int8] span=tfl.pseudo_qconst86:0:0 */, %v_param_53: Tensor[(128), int32] /* ty=Tensor[(128), int32] span=tfl.pseudo_qconst85:0:0 */, %v_param_54: Tensor[(1, 1, 128, 128), int8] /* ty=Tensor[(1, 1, 128, 128), int8] span=tfl.pseudo_qconst84:0:0 */, %v_param_55: Tensor[(128), int32] /* ty=Tensor[(128), int32] span=tfl.pseudo_qconst83:0:0 */, %v_param_56: Tensor[(1, 1, 128, 256), int8] /* ty=Tensor[(1, 1, 128, 256), int8] span=tfl.pseudo_qconst82:0:0 */, %v_param_57: Tensor[(256), int32] /* ty=Tensor[(256), int32] span=tfl.pseudo_qconst81:0:0 */, %v_param_58: Tensor[(1, 1, 256, 128), int8] /* ty=Tensor[(1, 1, 256, 128), int8] span=tfl.pseudo_qconst80:0:0 */, %v_param_59: Tensor[(128), int32] /* ty=Tensor[(128), int32] span=tfl.pseudo_qconst79:0:0 */, %v_param_60: Tensor[(1, 1, 256, 256), int8] /* ty=Tensor[(1, 1, 256, 256), int8] span=tfl.pseudo_qconst78:0:0 */, %v_param_61: Tensor[(256), int32] /* ty=Tensor[(256), int32] span=tfl.pseudo_qconst77:0:0 */, %v_param_62: Tensor[(1, 1, 384, 128), int8] /* ty=Tensor[(1, 1, 384, 128), int8] span=tfl.pseudo_qconst76:0:0 */, %v_param_63: Tensor[(128), int32] /* ty=Tensor[(128), int32] span=tfl.pseudo_qconst75:0:0 */, %v_param_64: Tensor[(3, 3, 64, 64), int8] /* ty=Tensor[(3, 3, 64, 64), int8] span=tfl.pseudo_qconst74:0:0 */, %v_param_65: Tensor[(64), int32] /* ty=Tensor[(64), int32] span=tfl.pseudo_qconst73:0:0 */, %v_param_66: Tensor[(3, 3, 64, 64), int8] /* ty=Tensor[(3, 3, 64, 64), int8] span=tfl.pseudo_qconst72:0:0 */, %v_param_67: Tensor[(64), int32] /* ty=Tensor[(64), int32] span=tfl.pseudo_qconst71:0:0 */, %v_param_68: Tensor[(1, 1, 192, 128), int8] /* ty=Tensor[(1, 1, 192, 128), int8] span=tfl.pseudo_qconst70:0:0 */, %v_param_69: Tensor[(128), int32] /* ty=Tensor[(128), int32] span=tfl.pseudo_qconst69:0:0 */, %v_param_70: Tensor[(1, 1, 256, 64), int8] /* ty=Tensor[(1, 1, 256, 64), int8] span=tfl.pseudo_qconst68:0:0 */, %v_param_71: Tensor[(64), int32] /* ty=Tensor[(64), int32] span=tfl.pseudo_qconst67:0:0 */, %v_param_72: Tensor[(3, 3, 32, 32), int8] /* ty=Tensor[(3, 3, 32, 32), int8] span=tfl.pseudo_qconst66:0:0 */, %v_param_73: Tensor[(32), int32] /* ty=Tensor[(32), int32] span=tfl.pseudo_qconst65:0:0 */, %v_param_74: Tensor[(3, 3, 32, 32), int8] /* ty=Tensor[(3, 3, 32, 32), int8] span=tfl.pseudo_qconst64:0:0 */, %v_param_75: Tensor[(32), int32] /* ty=Tensor[(32), int32] span=tfl.pseudo_qconst63:0:0 */, %v_param_76: Tensor[(1, 1, 96, 64), int8] /* ty=Tensor[(1, 1, 96, 64), int8] span=tfl.pseudo_qconst62:0:0 */, %v_param_77: Tensor[(64), int32] /* ty=Tensor[(64), int32] span=tfl.pseudo_qconst61:0:0 */, %v_param_122: Tensor[(3, 3, 64, 64), int8] /* ty=Tensor[(3, 3, 64, 64), int8] span=tfl.pseudo_qconst16:0:0 */, %v_param_123: Tensor[(64), int32] /* ty=Tensor[(64), int32] span=tfl.pseudo_qconst15:0:0 */, %v_param_124: Tensor[(3, 3, 64, 64), int8] /* ty=Tensor[(3, 3, 64, 64), int8] span=tfl.pseudo_qconst14:0:0 */, %v_param_125: Tensor[(64), int32] /* ty=Tensor[(64), int32] span=tfl.pseudo_qconst13:0:0 */, %v_param_126: Tensor[(1, 1, 64, 64), int8] /* ty=Tensor[(1, 1, 64, 64), int8] span=tfl.pseudo_qconst12:0:0 */, %v_param_127: Tensor[(64), int32] /* ty=Tensor[(64), int32] span=tfl.pseudo_qconst11:0:0 */, %v_param_128: Tensor[(3, 3, 64, 64), int8] /* ty=Tensor[(3, 3, 64, 64), int8] span=tfl.pseudo_qconst10:0:0 */, %v_param_129: Tensor[(64), int32] /* ty=Tensor[(64), int32] span=tfl.pseudo_qconst9:0:0 */, %v_param_130: Tensor[(3, 3, 64, 64), int8] /* ty=Tensor[(3, 3, 64, 64), int8] span=tfl.pseudo_qconst8:0:0 */, %v_param_131: Tensor[(64), int32] /* ty=Tensor[(64), int32] span=tfl.pseudo_qconst7:0:0 */, %v_param_132: Tensor[(1, 1, 64, 15), int8] /* ty=Tensor[(1, 1, 64, 15), int8] span=tfl.pseudo_qconst6:0:0 */, %v_param_133: Tensor[(15), int32] /* ty=Tensor[(15), int32] span=tfl.pseudo_qconst5:0:0 */, %v_param_78: Tensor[(3, 3, 64, 64), int8] /* ty=Tensor[(3, 3, 64, 64), int8] span=tfl.pseudo_qconst60:0:0 */, %v_param_79: Tensor[(64), int32] /* ty=Tensor[(64), int32] span=tfl.pseudo_qconst59:0:0 */, %v_param_80: Tensor[(1, 1, 192, 128), int8] /* ty=Tensor[(1, 1, 192, 128), int8] span=tfl.pseudo_qconst58:0:0 */, %v_param_81: Tensor[(128), int32] /* ty=Tensor[(128), int32] span=tfl.pseudo_qconst57:0:0 */, %v_param_82: Tensor[(3, 3, 64, 64), int8] /* ty=Tensor[(3, 3, 64, 64), int8] span=tfl.pseudo_qconst56:0:0 */, %v_param_83: Tensor[(64), int32] /* ty=Tensor[(64), int32] span=tfl.pseudo_qconst55:0:0 */, %v_param_84: Tensor[(3, 3, 64, 64), int8] /* ty=Tensor[(3, 3, 64, 64), int8] span=tfl.pseudo_qconst54:0:0 */, %v_param_85: Tensor[(64), int32] /* ty=Tensor[(64), int32] span=tfl.pseudo_qconst53:0:0 */, %v_param_86: Tensor[(1, 1, 192, 128), int8] /* ty=Tensor[(1, 1, 192, 128), int8] span=tfl.pseudo_qconst52:0:0 */, %v_param_87: Tensor[(128), int32] /* ty=Tensor[(128), int32] span=tfl.pseudo_qconst51:0:0 */, %v_param_110: Tensor[(3, 3, 128, 64), int8] /* ty=Tensor[(3, 3, 128, 64), int8] span=tfl.pseudo_qconst28:0:0 */, %v_param_111: Tensor[(64), int32] /* ty=Tensor[(64), int32] span=tfl.pseudo_qconst27:0:0 */, %v_param_112: Tensor[(3, 3, 64, 64), int8] /* ty=Tensor[(3, 3, 64, 64), int8] span=tfl.pseudo_qconst26:0:0 */, %v_param_113: Tensor[(64), int32] /* ty=Tensor[(64), int32] span=tfl.pseudo_qconst25:0:0 */, %v_param_114: Tensor[(1, 1, 64, 64), int8] /* ty=Tensor[(1, 1, 64, 64), int8] span=tfl.pseudo_qconst24:0:0 */, %v_param_115: Tensor[(64), int32] /* ty=Tensor[(64), int32] span=tfl.pseudo_qconst23:0:0 */, %v_param_116: Tensor[(3, 3, 128, 64), int8] /* ty=Tensor[(3, 3, 128, 64), int8] span=tfl.pseudo_qconst22:0:0 */, %v_param_117: Tensor[(64), int32] /* ty=Tensor[(64), int32] span=tfl.pseudo_qconst21:0:0 */, %v_param_118: Tensor[(3, 3, 64, 64), int8] /* ty=Tensor[(3, 3, 64, 64), int8] span=tfl.pseudo_qconst20:0:0 */, %v_param_119: Tensor[(64), int32] /* ty=Tensor[(64), int32] span=tfl.pseudo_qconst19:0:0 */, %v_param_120: Tensor[(1, 1, 64, 15), int8] /* ty=Tensor[(1, 1, 64, 15), int8] span=tfl.pseudo_qconst18:0:0 */, %v_param_121: Tensor[(15), int32] /* ty=Tensor[(15), int32] span=tfl.pseudo_qconst17:0:0 */, %v_param_88: Tensor[(3, 3, 128, 128), int8] /* ty=Tensor[(3, 3, 128, 128), int8] span=tfl.pseudo_qconst50:0:0 */, %v_param_89: Tensor[(128), int32] /* ty=Tensor[(128), int32] span=tfl.pseudo_qconst49:0:0 */, %v_param_90: Tensor[(1, 1, 384, 256), int8] /* ty=Tensor[(1, 1, 384, 256), int8] span=tfl.pseudo_qconst48:0:0 */, %v_param_91: Tensor[(256), int32] /* ty=Tensor[(256), int32] span=tfl.pseudo_qconst47:0:0 */, %v_param_92: Tensor[(3, 3, 128, 128), int8] /* ty=Tensor[(3, 3, 128, 128), int8] span=tfl.pseudo_qconst46:0:0 */, %v_param_93: Tensor[(128), int32] /* ty=Tensor[(128), int32] span=tfl.pseudo_qconst45:0:0 */, %v_param_94: Tensor[(3, 3, 128, 128), int8] /* ty=Tensor[(3, 3, 128, 128), int8] span=tfl.pseudo_qconst44:0:0 */, %v_param_95: Tensor[(128), int32] /* ty=Tensor[(128), int32] span=tfl.pseudo_qconst43:0:0 */, %v_param_96: Tensor[(1, 1, 384, 256), int8] /* ty=Tensor[(1, 1, 384, 256), int8] span=tfl.pseudo_qconst42:0:0 */, %v_param_97: Tensor[(256), int32] /* ty=Tensor[(256), int32] span=tfl.pseudo_qconst41:0:0 */, %v_param_98: Tensor[(3, 3, 256, 64), int8] /* ty=Tensor[(3, 3, 256, 64), int8] span=tfl.pseudo_qconst40:0:0 */, %v_param_99: Tensor[(64), int32] /* ty=Tensor[(64), int32] span=tfl.pseudo_qconst39:0:0 */, %v_param_100: Tensor[(3, 3, 64, 64), int8] /* ty=Tensor[(3, 3, 64, 64), int8] span=tfl.pseudo_qconst38:0:0 */, %v_param_101: Tensor[(64), int32] /* ty=Tensor[(64), int32] span=tfl.pseudo_qconst37:0:0 */, %v_param_102: Tensor[(1, 1, 64, 64), int8] /* ty=Tensor[(1, 1, 64, 64), int8] span=tfl.pseudo_qconst36:0:0 */, %v_param_103: Tensor[(64), int32] /* ty=Tensor[(64), int32] span=tfl.pseudo_qconst35:0:0 */, %v_param_104: Tensor[(3, 3, 256, 64), int8] /* ty=Tensor[(3, 3, 256, 64), int8] span=tfl.pseudo_qconst34:0:0 */, %v_param_105: Tensor[(64), int32] /* ty=Tensor[(64), int32] span=tfl.pseudo_qconst33:0:0 */, %v_param_106: Tensor[(3, 3, 64, 64), int8] /* ty=Tensor[(3, 3, 64, 64), int8] span=tfl.pseudo_qconst32:0:0 */, %v_param_107: Tensor[(64), int32] /* ty=Tensor[(64), int32] span=tfl.pseudo_qconst31:0:0 */, %v_param_108: Tensor[(1, 1, 64, 15), int8] /* ty=Tensor[(1, 1, 64, 15), int8] span=tfl.pseudo_qconst30:0:0 */, %v_param_109: Tensor[(15), int32] /* ty=Tensor[(15), int32] span=tfl.pseudo_qconst29:0:0 */, %v_param_134: Tensor[(1, 1, 16, 1), int8] /* ty=Tensor[(1, 1, 16, 1), int8] span=tfl.pseudo_qconst4:0:0 */, %v_param_135: Tensor[(1), int32] /* ty=Tensor[(1), int32] span=tfl.pseudo_qconst3:0:0 */, %v_param_136: Tensor[(1, 4, 8400), int8] /* ty=Tensor[(1, 4, 8400), int8] span=tfl.pseudo_qconst2:0:0 */, %v_param_138: Tensor[(1, 2, 8400), int8] /* ty=Tensor[(1, 2, 8400), int8] span=tfl.pseudo_qconst1:0:0 */, %v_param_139: int8 /* ty=int8 span=tfl.pseudo_qconst:0:0 */, output_tensor_names=["StatefulPartitionedCall_0"]) -> Tensor[(1, 19, 8400), int8] {
  %0 = nn.pad(%serving_default_images:0, -128f /* ty=float32 span=model_90/tf.compat.v1.pad/Pad:0:0 */, pad_width=[[0, 0], [1, 1], [1, 1], [0, 0]]) /* ty=Tensor[(1, 642, 642, 3), int8] span=model_90/tf.compat.v1.pad/Pad:0:0 */;
  %1 = qnn.conv2d(%0, %v_param_1, -128 /* ty=int32 span=model_90/tf.math.add/Add;model_90/tf.nn.convolution/convolution;Const_178:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add/Add;model_90/tf.nn.convolution/convolution;Const_178:0:0 */, 0.00392157f /* ty=float32 span=model_90/tf.math.add/Add;model_90/tf.nn.convolution/convolution;Const_178:0:0 */, meta[relay.Constant][0] /* ty=Tensor[(16), float32] span=model_90/tf.math.add/Add;model_90/tf.nn.convolution/convolution;Const_178:0:0 */, strides=[2, 2], padding=[0, 0, 0, 0], channels=16, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 320, 320, 16), int32] span=model_90/tf.math.add/Add;model_90/tf.nn.convolution/convolution;Const_178:0:0 */;
  %2 = nn.bias_add(%1, %v_param_2, axis=3) /* ty=Tensor[(1, 320, 320, 16), int32] span=model_90/tf.math.add/Add;model_90/tf.nn.convolution/convolution;Const_178:0:0 */;
  %3 = qnn.requantize(%2, meta[relay.Constant][1] /* ty=Tensor[(16), float32] span=model_90/tf.math.add/Add;model_90/tf.nn.convolution/convolution;Const_178:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add/Add;model_90/tf.nn.convolution/convolution;Const_178:0:0 */, 0.637916f /* ty=float32 span=model_90/tf.math.add/Add;model_90/tf.nn.convolution/convolution;Const_178:0:0 */, -4 /* ty=int32 span=model_90/tf.math.add/Add;model_90/tf.nn.convolution/convolution;Const_178:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 320, 320, 16), int8] span=model_90/tf.math.add/Add;model_90/tf.nn.convolution/convolution;Const_178:0:0 */;
  %4 = qnn.dequantize(%3, 0.637916f /* ty=float32 span=model_90/tf.math.sigmoid/Sigmoid:0:0 */, -4 /* ty=int32 span=model_90/tf.math.sigmoid/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 320, 320, 16), float32] span=model_90/tf.math.sigmoid/Sigmoid:0:0 */;
  %5 = sigmoid(%4) /* ty=Tensor[(1, 320, 320, 16), float32] span=model_90/tf.math.sigmoid/Sigmoid:0:0 */;
  %6 = qnn.quantize(%5, 0.00390625f /* ty=float32 span=model_90/tf.math.sigmoid/Sigmoid:0:0 */, -128 /* ty=int32 span=model_90/tf.math.sigmoid/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 320, 320, 16), int8] span=model_90/tf.math.sigmoid/Sigmoid:0:0 */;
  %7 = qnn.mul(%3, %6, 0.637916f /* ty=float32 span=model_90/tf.math.multiply_3/Mul:0:0 */, -4 /* ty=int32 span=model_90/tf.math.multiply_3/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_90/tf.math.multiply_3/Mul:0:0 */, -128 /* ty=int32 span=model_90/tf.math.multiply_3/Mul:0:0 */, 0.329715f /* ty=float32 span=model_90/tf.math.multiply_3/Mul:0:0 */, -127 /* ty=int32 span=model_90/tf.math.multiply_3/Mul:0:0 */) /* ty=Tensor[(1, 320, 320, 16), int8] span=model_90/tf.math.multiply_3/Mul:0:0 */;
  %8 = nn.pad(%7, -127f /* ty=float32 span=model_90/tf.compat.v1.pad_1/Pad:0:0 */, pad_width=[[0, 0], [1, 1], [1, 1], [0, 0]]) /* ty=Tensor[(1, 322, 322, 16), int8] span=model_90/tf.compat.v1.pad_1/Pad:0:0 */;
  %9 = qnn.conv2d(%8, %v_param_3, -127 /* ty=int32 span=model_90/tf.math.add_1/Add;model_90/tf.nn.convolution_1/convolution;Const_175:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_1/Add;model_90/tf.nn.convolution_1/convolution;Const_175:0:0 */, 0.329715f /* ty=float32 span=model_90/tf.math.add_1/Add;model_90/tf.nn.convolution_1/convolution;Const_175:0:0 */, meta[relay.Constant][2] /* ty=Tensor[(32), float32] span=model_90/tf.math.add_1/Add;model_90/tf.nn.convolution_1/convolution;Const_175:0:0 */, strides=[2, 2], padding=[0, 0, 0, 0], channels=32, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 160, 160, 32), int32] span=model_90/tf.math.add_1/Add;model_90/tf.nn.convolution_1/convolution;Const_175:0:0 */;
  %10 = nn.bias_add(%9, %v_param_4, axis=3) /* ty=Tensor[(1, 160, 160, 32), int32] span=model_90/tf.math.add_1/Add;model_90/tf.nn.convolution_1/convolution;Const_175:0:0 */;
  %11 = qnn.requantize(%10, meta[relay.Constant][3] /* ty=Tensor[(32), float32] span=model_90/tf.math.add_1/Add;model_90/tf.nn.convolution_1/convolution;Const_175:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_1/Add;model_90/tf.nn.convolution_1/convolution;Const_175:0:0 */, 1.11752f /* ty=float32 span=model_90/tf.math.add_1/Add;model_90/tf.nn.convolution_1/convolution;Const_175:0:0 */, 11 /* ty=int32 span=model_90/tf.math.add_1/Add;model_90/tf.nn.convolution_1/convolution;Const_175:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 160, 160, 32), int8] span=model_90/tf.math.add_1/Add;model_90/tf.nn.convolution_1/convolution;Const_175:0:0 */;
  %12 = qnn.dequantize(%11, 1.11752f /* ty=float32 span=model_90/tf.math.sigmoid_1/Sigmoid:0:0 */, 11 /* ty=int32 span=model_90/tf.math.sigmoid_1/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 160, 160, 32), float32] span=model_90/tf.math.sigmoid_1/Sigmoid:0:0 */;
  %13 = sigmoid(%12) /* ty=Tensor[(1, 160, 160, 32), float32] span=model_90/tf.math.sigmoid_1/Sigmoid:0:0 */;
  %14 = qnn.quantize(%13, 0.00390625f /* ty=float32 span=model_90/tf.math.sigmoid_1/Sigmoid:0:0 */, -128 /* ty=int32 span=model_90/tf.math.sigmoid_1/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 160, 160, 32), int8] span=model_90/tf.math.sigmoid_1/Sigmoid:0:0 */;
  %15 = qnn.mul(%11, %14, 1.11752f /* ty=float32 span=model_90/tf.math.multiply_7/Mul:0:0 */, 11 /* ty=int32 span=model_90/tf.math.multiply_7/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_90/tf.math.multiply_7/Mul:0:0 */, -128 /* ty=int32 span=model_90/tf.math.multiply_7/Mul:0:0 */, 0.509577f /* ty=float32 span=model_90/tf.math.multiply_7/Mul:0:0 */, -127 /* ty=int32 span=model_90/tf.math.multiply_7/Mul:0:0 */) /* ty=Tensor[(1, 160, 160, 32), int8] span=model_90/tf.math.multiply_7/Mul:0:0 */;
  %16 = qnn.conv2d(%15, %v_param_5, -127 /* ty=int32 span=model_90/tf.math.add_2/Add;model_90/tf.nn.convolution_2/convolution;Const_173:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_2/Add;model_90/tf.nn.convolution_2/convolution;Const_173:0:0 */, 0.509577f /* ty=float32 span=model_90/tf.math.add_2/Add;model_90/tf.nn.convolution_2/convolution;Const_173:0:0 */, meta[relay.Constant][4] /* ty=Tensor[(64), float32] span=model_90/tf.math.add_2/Add;model_90/tf.nn.convolution_2/convolution;Const_173:0:0 */, padding=[0, 0, 0, 0], channels=64, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 160, 160, 64), int32] span=model_90/tf.math.add_2/Add;model_90/tf.nn.convolution_2/convolution;Const_173:0:0 */;
  %17 = nn.bias_add(%16, %v_param_6, axis=3) /* ty=Tensor[(1, 160, 160, 64), int32] span=model_90/tf.math.add_2/Add;model_90/tf.nn.convolution_2/convolution;Const_173:0:0 */;
  %18 = qnn.requantize(%17, meta[relay.Constant][5] /* ty=Tensor[(64), float32] span=model_90/tf.math.add_2/Add;model_90/tf.nn.convolution_2/convolution;Const_173:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_2/Add;model_90/tf.nn.convolution_2/convolution;Const_173:0:0 */, 0.178683f /* ty=float32 span=model_90/tf.math.add_2/Add;model_90/tf.nn.convolution_2/convolution;Const_173:0:0 */, -3 /* ty=int32 span=model_90/tf.math.add_2/Add;model_90/tf.nn.convolution_2/convolution;Const_173:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 160, 160, 64), int8] span=model_90/tf.math.add_2/Add;model_90/tf.nn.convolution_2/convolution;Const_173:0:0 */;
  %19 = qnn.dequantize(%18, 0.178683f /* ty=float32 span=model_90/tf.math.sigmoid_2/Sigmoid:0:0 */, -3 /* ty=int32 span=model_90/tf.math.sigmoid_2/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 160, 160, 64), float32] span=model_90/tf.math.sigmoid_2/Sigmoid:0:0 */;
  %20 = sigmoid(%19) /* ty=Tensor[(1, 160, 160, 64), float32] span=model_90/tf.math.sigmoid_2/Sigmoid:0:0 */;
  %21 = qnn.quantize(%20, 0.00390625f /* ty=float32 span=model_90/tf.math.sigmoid_2/Sigmoid:0:0 */, -128 /* ty=int32 span=model_90/tf.math.sigmoid_2/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 160, 160, 64), int8] span=model_90/tf.math.sigmoid_2/Sigmoid:0:0 */;
  %22 = qnn.mul(%18, %21, 0.178683f /* ty=float32 span=model_90/tf.math.multiply_11/Mul:0:0 */, -3 /* ty=int32 span=model_90/tf.math.multiply_11/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_90/tf.math.multiply_11/Mul:0:0 */, -128 /* ty=int32 span=model_90/tf.math.multiply_11/Mul:0:0 */, 0.0920584f /* ty=float32 span=model_90/tf.math.multiply_11/Mul:0:0 */, -125 /* ty=int32 span=model_90/tf.math.multiply_11/Mul:0:0 */) /* ty=Tensor[(1, 160, 160, 64), int8] span=model_90/tf.math.multiply_11/Mul:0:0 */;
  %23 = strided_slice(%22, begin=[0, 0, 0, 0], end=[1, 160, 160, 32], strides=[1, 1, 1, 1], axes=None) /* ty=Tensor[(1, 160, 160, 32), int8] span=model_90/tf.strided_slice/StridedSlice:0:0 */;
  %24 = strided_slice(%22, begin=[0, 0, 0, 32], end=[1, 160, 160, 64], strides=[1, 1, 1, 1], axes=None) /* ty=Tensor[(1, 160, 160, 32), int8] span=model_90/tf.strided_slice_1/StridedSlice:0:0 */;
  %25 = @tvmgen_default_ethos_n_main_1(%24) /* ty=Tensor[(1, 160, 160, 32), int8] */;
  %26 = qnn.conv2d(%25, %v_param_7, -125 /* ty=int32 span=model_90/tf.math.add_3/Add;model_90/tf.nn.convolution_3/convolution;Const_169:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_3/Add;model_90/tf.nn.convolution_3/convolution;Const_169:0:0 */, 0.0920584f /* ty=float32 span=model_90/tf.math.add_3/Add;model_90/tf.nn.convolution_3/convolution;Const_169:0:0 */, meta[relay.Constant][6] /* ty=Tensor[(32), float32] span=model_90/tf.math.add_3/Add;model_90/tf.nn.convolution_3/convolution;Const_169:0:0 */, padding=[1, 1, 1, 1], channels=32, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 160, 160, 32), int32] span=model_90/tf.math.add_3/Add;model_90/tf.nn.convolution_3/convolution;Const_169:0:0 */;
  %27 = nn.bias_add(%26, %v_param_8, axis=3) /* ty=Tensor[(1, 160, 160, 32), int32] span=model_90/tf.math.add_3/Add;model_90/tf.nn.convolution_3/convolution;Const_169:0:0 */;
  %28 = qnn.requantize(%27, meta[relay.Constant][7] /* ty=Tensor[(32), float32] span=model_90/tf.math.add_3/Add;model_90/tf.nn.convolution_3/convolution;Const_169:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_3/Add;model_90/tf.nn.convolution_3/convolution;Const_169:0:0 */, 0.143203f /* ty=float32 span=model_90/tf.math.add_3/Add;model_90/tf.nn.convolution_3/convolution;Const_169:0:0 */, 20 /* ty=int32 span=model_90/tf.math.add_3/Add;model_90/tf.nn.convolution_3/convolution;Const_169:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 160, 160, 32), int8] span=model_90/tf.math.add_3/Add;model_90/tf.nn.convolution_3/convolution;Const_169:0:0 */;
  %29 = qnn.dequantize(%28, 0.143203f /* ty=float32 span=model_90/tf.math.sigmoid_3/Sigmoid:0:0 */, 20 /* ty=int32 span=model_90/tf.math.sigmoid_3/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 160, 160, 32), float32] span=model_90/tf.math.sigmoid_3/Sigmoid:0:0 */;
  %30 = sigmoid(%29) /* ty=Tensor[(1, 160, 160, 32), float32] span=model_90/tf.math.sigmoid_3/Sigmoid:0:0 */;
  %31 = qnn.quantize(%30, 0.00390625f /* ty=float32 span=model_90/tf.math.sigmoid_3/Sigmoid:0:0 */, -128 /* ty=int32 span=model_90/tf.math.sigmoid_3/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 160, 160, 32), int8] span=model_90/tf.math.sigmoid_3/Sigmoid:0:0 */;
  %32 = qnn.mul(%28, %31, 0.143203f /* ty=float32 span=model_90/tf.math.multiply_15/Mul:0:0 */, 20 /* ty=int32 span=model_90/tf.math.multiply_15/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_90/tf.math.multiply_15/Mul:0:0 */, -128 /* ty=int32 span=model_90/tf.math.multiply_15/Mul:0:0 */, 0.0610811f /* ty=float32 span=model_90/tf.math.multiply_15/Mul:0:0 */, -123 /* ty=int32 span=model_90/tf.math.multiply_15/Mul:0:0 */) /* ty=Tensor[(1, 160, 160, 32), int8] span=model_90/tf.math.multiply_15/Mul:0:0 */;
  %33 = qnn.conv2d(%32, %v_param_9, -123 /* ty=int32 span=model_90/tf.math.add_4/Add;model_90/tf.nn.convolution_4/convolution;Const_167:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_4/Add;model_90/tf.nn.convolution_4/convolution;Const_167:0:0 */, 0.0610811f /* ty=float32 span=model_90/tf.math.add_4/Add;model_90/tf.nn.convolution_4/convolution;Const_167:0:0 */, meta[relay.Constant][8] /* ty=Tensor[(32), float32] span=model_90/tf.math.add_4/Add;model_90/tf.nn.convolution_4/convolution;Const_167:0:0 */, padding=[1, 1, 1, 1], channels=32, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 160, 160, 32), int32] span=model_90/tf.math.add_4/Add;model_90/tf.nn.convolution_4/convolution;Const_167:0:0 */;
  %34 = nn.bias_add(%33, %v_param_10, axis=3) /* ty=Tensor[(1, 160, 160, 32), int32] span=model_90/tf.math.add_4/Add;model_90/tf.nn.convolution_4/convolution;Const_167:0:0 */;
  %35 = qnn.requantize(%34, meta[relay.Constant][9] /* ty=Tensor[(32), float32] span=model_90/tf.math.add_4/Add;model_90/tf.nn.convolution_4/convolution;Const_167:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_4/Add;model_90/tf.nn.convolution_4/convolution;Const_167:0:0 */, 0.124722f /* ty=float32 span=model_90/tf.math.add_4/Add;model_90/tf.nn.convolution_4/convolution;Const_167:0:0 */, 2 /* ty=int32 span=model_90/tf.math.add_4/Add;model_90/tf.nn.convolution_4/convolution;Const_167:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 160, 160, 32), int8] span=model_90/tf.math.add_4/Add;model_90/tf.nn.convolution_4/convolution;Const_167:0:0 */;
  %36 = qnn.dequantize(%35, 0.124722f /* ty=float32 span=model_90/tf.math.sigmoid_4/Sigmoid:0:0 */, 2 /* ty=int32 span=model_90/tf.math.sigmoid_4/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 160, 160, 32), float32] span=model_90/tf.math.sigmoid_4/Sigmoid:0:0 */;
  %37 = sigmoid(%36) /* ty=Tensor[(1, 160, 160, 32), float32] span=model_90/tf.math.sigmoid_4/Sigmoid:0:0 */;
  %38 = qnn.quantize(%37, 0.00390625f /* ty=float32 span=model_90/tf.math.sigmoid_4/Sigmoid:0:0 */, -128 /* ty=int32 span=model_90/tf.math.sigmoid_4/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 160, 160, 32), int8] span=model_90/tf.math.sigmoid_4/Sigmoid:0:0 */;
  %39 = @tvmgen_default_ethos_n_main_0(%23) /* ty=Tensor[(1, 160, 160, 32), int8] */;
  %40 = qnn.mul(%35, %38, 0.124722f /* ty=float32 span=model_90/tf.math.multiply_19/Mul:0:0 */, 2 /* ty=int32 span=model_90/tf.math.multiply_19/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_90/tf.math.multiply_19/Mul:0:0 */, -128 /* ty=int32 span=model_90/tf.math.multiply_19/Mul:0:0 */, 0.0920584f /* ty=float32 span=model_90/tf.math.multiply_19/Mul:0:0 */, -125 /* ty=int32 span=model_90/tf.math.multiply_19/Mul:0:0 */) /* ty=Tensor[(1, 160, 160, 32), int8] span=model_90/tf.math.multiply_19/Mul:0:0 */;
  %41 = (%39, %25, %40) /* ty=(Tensor[(1, 160, 160, 32), int8], Tensor[(1, 160, 160, 32), int8], Tensor[(1, 160, 160, 32), int8]) span=model_90/tf.concat/concat:0:0 */;
  %42 = @tvmgen_default_ethos_n_main_2(%41) /* ty=Tensor[(1, 160, 160, 96), int8] */;
  %43 = qnn.conv2d(%42, %v_param_11, -125 /* ty=int32 span=model_90/tf.math.add_5/Add;model_90/tf.nn.convolution_5/convolution;Const_163:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_5/Add;model_90/tf.nn.convolution_5/convolution;Const_163:0:0 */, 0.0920584f /* ty=float32 span=model_90/tf.math.add_5/Add;model_90/tf.nn.convolution_5/convolution;Const_163:0:0 */, meta[relay.Constant][10] /* ty=Tensor[(64), float32] span=model_90/tf.math.add_5/Add;model_90/tf.nn.convolution_5/convolution;Const_163:0:0 */, padding=[0, 0, 0, 0], channels=64, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 160, 160, 64), int32] span=model_90/tf.math.add_5/Add;model_90/tf.nn.convolution_5/convolution;Const_163:0:0 */;
  %44 = nn.bias_add(%43, %v_param_12, axis=3) /* ty=Tensor[(1, 160, 160, 64), int32] span=model_90/tf.math.add_5/Add;model_90/tf.nn.convolution_5/convolution;Const_163:0:0 */;
  %45 = qnn.requantize(%44, meta[relay.Constant][11] /* ty=Tensor[(64), float32] span=model_90/tf.math.add_5/Add;model_90/tf.nn.convolution_5/convolution;Const_163:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_5/Add;model_90/tf.nn.convolution_5/convolution;Const_163:0:0 */, 0.428803f /* ty=float32 span=model_90/tf.math.add_5/Add;model_90/tf.nn.convolution_5/convolution;Const_163:0:0 */, 16 /* ty=int32 span=model_90/tf.math.add_5/Add;model_90/tf.nn.convolution_5/convolution;Const_163:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 160, 160, 64), int8] span=model_90/tf.math.add_5/Add;model_90/tf.nn.convolution_5/convolution;Const_163:0:0 */;
  %46 = qnn.dequantize(%45, 0.428803f /* ty=float32 span=model_90/tf.math.sigmoid_5/Sigmoid:0:0 */, 16 /* ty=int32 span=model_90/tf.math.sigmoid_5/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 160, 160, 64), float32] span=model_90/tf.math.sigmoid_5/Sigmoid:0:0 */;
  %47 = sigmoid(%46) /* ty=Tensor[(1, 160, 160, 64), float32] span=model_90/tf.math.sigmoid_5/Sigmoid:0:0 */;
  %48 = qnn.quantize(%47, 0.00390625f /* ty=float32 span=model_90/tf.math.sigmoid_5/Sigmoid:0:0 */, -128 /* ty=int32 span=model_90/tf.math.sigmoid_5/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 160, 160, 64), int8] span=model_90/tf.math.sigmoid_5/Sigmoid:0:0 */;
  %49 = qnn.mul(%45, %48, 0.428803f /* ty=float32 span=model_90/tf.math.multiply_23/Mul:0:0 */, 16 /* ty=int32 span=model_90/tf.math.multiply_23/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_90/tf.math.multiply_23/Mul:0:0 */, -128 /* ty=int32 span=model_90/tf.math.multiply_23/Mul:0:0 */, 0.187213f /* ty=float32 span=model_90/tf.math.multiply_23/Mul:0:0 */, -127 /* ty=int32 span=model_90/tf.math.multiply_23/Mul:0:0 */) /* ty=Tensor[(1, 160, 160, 64), int8] span=model_90/tf.math.multiply_23/Mul:0:0 */;
  %50 = nn.pad(%49, -127f /* ty=float32 span=model_90/tf.compat.v1.pad_2/Pad:0:0 */, pad_width=[[0, 0], [1, 1], [1, 1], [0, 0]]) /* ty=Tensor[(1, 162, 162, 64), int8] span=model_90/tf.compat.v1.pad_2/Pad:0:0 */;
  %51 = qnn.conv2d(%50, %v_param_13, -127 /* ty=int32 span=model_90/tf.math.add_6/Add;model_90/tf.nn.convolution_6/convolution;Const_160:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_6/Add;model_90/tf.nn.convolution_6/convolution;Const_160:0:0 */, 0.187213f /* ty=float32 span=model_90/tf.math.add_6/Add;model_90/tf.nn.convolution_6/convolution;Const_160:0:0 */, meta[relay.Constant][12] /* ty=Tensor[(64), float32] span=model_90/tf.math.add_6/Add;model_90/tf.nn.convolution_6/convolution;Const_160:0:0 */, strides=[2, 2], padding=[0, 0, 0, 0], channels=64, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 80, 80, 64), int32] span=model_90/tf.math.add_6/Add;model_90/tf.nn.convolution_6/convolution;Const_160:0:0 */;
  %52 = nn.bias_add(%51, %v_param_14, axis=3) /* ty=Tensor[(1, 80, 80, 64), int32] span=model_90/tf.math.add_6/Add;model_90/tf.nn.convolution_6/convolution;Const_160:0:0 */;
  %53 = qnn.requantize(%52, meta[relay.Constant][13] /* ty=Tensor[(64), float32] span=model_90/tf.math.add_6/Add;model_90/tf.nn.convolution_6/convolution;Const_160:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_6/Add;model_90/tf.nn.convolution_6/convolution;Const_160:0:0 */, 0.123609f /* ty=float32 span=model_90/tf.math.add_6/Add;model_90/tf.nn.convolution_6/convolution;Const_160:0:0 */, 34 /* ty=int32 span=model_90/tf.math.add_6/Add;model_90/tf.nn.convolution_6/convolution;Const_160:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 80, 80, 64), int8] span=model_90/tf.math.add_6/Add;model_90/tf.nn.convolution_6/convolution;Const_160:0:0 */;
  %54 = qnn.dequantize(%53, 0.123609f /* ty=float32 span=model_90/tf.math.sigmoid_6/Sigmoid:0:0 */, 34 /* ty=int32 span=model_90/tf.math.sigmoid_6/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 80, 80, 64), float32] span=model_90/tf.math.sigmoid_6/Sigmoid:0:0 */;
  %55 = sigmoid(%54) /* ty=Tensor[(1, 80, 80, 64), float32] span=model_90/tf.math.sigmoid_6/Sigmoid:0:0 */;
  %56 = qnn.quantize(%55, 0.00390625f /* ty=float32 span=model_90/tf.math.sigmoid_6/Sigmoid:0:0 */, -128 /* ty=int32 span=model_90/tf.math.sigmoid_6/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 80, 80, 64), int8] span=model_90/tf.math.sigmoid_6/Sigmoid:0:0 */;
  %57 = qnn.mul(%53, %56, 0.123609f /* ty=float32 span=model_90/tf.math.multiply_27/Mul:0:0 */, 34 /* ty=int32 span=model_90/tf.math.multiply_27/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_90/tf.math.multiply_27/Mul:0:0 */, -128 /* ty=int32 span=model_90/tf.math.multiply_27/Mul:0:0 */, 0.0459687f /* ty=float32 span=model_90/tf.math.multiply_27/Mul:0:0 */, -122 /* ty=int32 span=model_90/tf.math.multiply_27/Mul:0:0 */) /* ty=Tensor[(1, 80, 80, 64), int8] span=model_90/tf.math.multiply_27/Mul:0:0 */;
  %58 = qnn.conv2d(%57, %v_param_15, -122 /* ty=int32 span=model_90/tf.math.add_7/Add;model_90/tf.nn.convolution_7/convolution;Const_158:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_7/Add;model_90/tf.nn.convolution_7/convolution;Const_158:0:0 */, 0.0459687f /* ty=float32 span=model_90/tf.math.add_7/Add;model_90/tf.nn.convolution_7/convolution;Const_158:0:0 */, meta[relay.Constant][14] /* ty=Tensor[(128), float32] span=model_90/tf.math.add_7/Add;model_90/tf.nn.convolution_7/convolution;Const_158:0:0 */, padding=[0, 0, 0, 0], channels=128, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 80, 80, 128), int32] span=model_90/tf.math.add_7/Add;model_90/tf.nn.convolution_7/convolution;Const_158:0:0 */;
  %59 = nn.bias_add(%58, %v_param_16, axis=3) /* ty=Tensor[(1, 80, 80, 128), int32] span=model_90/tf.math.add_7/Add;model_90/tf.nn.convolution_7/convolution;Const_158:0:0 */;
  %60 = qnn.requantize(%59, meta[relay.Constant][15] /* ty=Tensor[(128), float32] span=model_90/tf.math.add_7/Add;model_90/tf.nn.convolution_7/convolution;Const_158:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_7/Add;model_90/tf.nn.convolution_7/convolution;Const_158:0:0 */, 0.0889365f /* ty=float32 span=model_90/tf.math.add_7/Add;model_90/tf.nn.convolution_7/convolution;Const_158:0:0 */, 6 /* ty=int32 span=model_90/tf.math.add_7/Add;model_90/tf.nn.convolution_7/convolution;Const_158:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 80, 80, 128), int8] span=model_90/tf.math.add_7/Add;model_90/tf.nn.convolution_7/convolution;Const_158:0:0 */;
  %61 = qnn.dequantize(%60, 0.0889365f /* ty=float32 span=model_90/tf.math.sigmoid_7/Sigmoid:0:0 */, 6 /* ty=int32 span=model_90/tf.math.sigmoid_7/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 80, 80, 128), float32] span=model_90/tf.math.sigmoid_7/Sigmoid:0:0 */;
  %62 = sigmoid(%61) /* ty=Tensor[(1, 80, 80, 128), float32] span=model_90/tf.math.sigmoid_7/Sigmoid:0:0 */;
  %63 = qnn.quantize(%62, 0.00390625f /* ty=float32 span=model_90/tf.math.sigmoid_7/Sigmoid:0:0 */, -128 /* ty=int32 span=model_90/tf.math.sigmoid_7/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 80, 80, 128), int8] span=model_90/tf.math.sigmoid_7/Sigmoid:0:0 */;
  %64 = qnn.mul(%60, %63, 0.0889365f /* ty=float32 span=model_90/tf.math.multiply_31/Mul:0:0 */, 6 /* ty=int32 span=model_90/tf.math.multiply_31/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_90/tf.math.multiply_31/Mul:0:0 */, -128 /* ty=int32 span=model_90/tf.math.multiply_31/Mul:0:0 */, 0.043374f /* ty=float32 span=model_90/tf.math.multiply_31/Mul:0:0 */, -122 /* ty=int32 span=model_90/tf.math.multiply_31/Mul:0:0 */) /* ty=Tensor[(1, 80, 80, 128), int8] span=model_90/tf.math.multiply_31/Mul:0:0 */;
  %65 = strided_slice(%64, begin=[0, 0, 0, 0], end=[1, 80, 80, 64], strides=[1, 1, 1, 1], axes=None) /* ty=Tensor[(1, 80, 80, 64), int8] span=model_90/tf.strided_slice_2/StridedSlice:0:0 */;
  %66 = strided_slice(%64, begin=[0, 0, 0, 64], end=[1, 80, 80, 128], strides=[1, 1, 1, 1], axes=None) /* ty=Tensor[(1, 80, 80, 64), int8] span=model_90/tf.strided_slice_3/StridedSlice:0:0 */;
  %67 = @tvmgen_default_ethos_n_main_8(%66) /* ty=Tensor[(1, 80, 80, 64), int8] */;
  %68 = qnn.conv2d(%67, %v_param_17, -122 /* ty=int32 span=model_90/tf.math.add_8/Add;model_90/tf.nn.convolution_8/convolution;Const_154:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_8/Add;model_90/tf.nn.convolution_8/convolution;Const_154:0:0 */, 0.043374f /* ty=float32 span=model_90/tf.math.add_8/Add;model_90/tf.nn.convolution_8/convolution;Const_154:0:0 */, meta[relay.Constant][16] /* ty=Tensor[(64), float32] span=model_90/tf.math.add_8/Add;model_90/tf.nn.convolution_8/convolution;Const_154:0:0 */, padding=[1, 1, 1, 1], channels=64, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 80, 80, 64), int32] span=model_90/tf.math.add_8/Add;model_90/tf.nn.convolution_8/convolution;Const_154:0:0 */;
  %69 = nn.bias_add(%68, %v_param_18, axis=3) /* ty=Tensor[(1, 80, 80, 64), int32] span=model_90/tf.math.add_8/Add;model_90/tf.nn.convolution_8/convolution;Const_154:0:0 */;
  %70 = qnn.requantize(%69, meta[relay.Constant][17] /* ty=Tensor[(64), float32] span=model_90/tf.math.add_8/Add;model_90/tf.nn.convolution_8/convolution;Const_154:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_8/Add;model_90/tf.nn.convolution_8/convolution;Const_154:0:0 */, 0.0739072f /* ty=float32 span=model_90/tf.math.add_8/Add;model_90/tf.nn.convolution_8/convolution;Const_154:0:0 */, 18 /* ty=int32 span=model_90/tf.math.add_8/Add;model_90/tf.nn.convolution_8/convolution;Const_154:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 80, 80, 64), int8] span=model_90/tf.math.add_8/Add;model_90/tf.nn.convolution_8/convolution;Const_154:0:0 */;
  %71 = qnn.dequantize(%70, 0.0739072f /* ty=float32 span=model_90/tf.math.sigmoid_8/Sigmoid:0:0 */, 18 /* ty=int32 span=model_90/tf.math.sigmoid_8/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 80, 80, 64), float32] span=model_90/tf.math.sigmoid_8/Sigmoid:0:0 */;
  %72 = sigmoid(%71) /* ty=Tensor[(1, 80, 80, 64), float32] span=model_90/tf.math.sigmoid_8/Sigmoid:0:0 */;
  %73 = qnn.quantize(%72, 0.00390625f /* ty=float32 span=model_90/tf.math.sigmoid_8/Sigmoid:0:0 */, -128 /* ty=int32 span=model_90/tf.math.sigmoid_8/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 80, 80, 64), int8] span=model_90/tf.math.sigmoid_8/Sigmoid:0:0 */;
  %74 = qnn.mul(%70, %73, 0.0739072f /* ty=float32 span=model_90/tf.math.multiply_35/Mul:0:0 */, 18 /* ty=int32 span=model_90/tf.math.multiply_35/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_90/tf.math.multiply_35/Mul:0:0 */, -128 /* ty=int32 span=model_90/tf.math.multiply_35/Mul:0:0 */, 0.0326546f /* ty=float32 span=model_90/tf.math.multiply_35/Mul:0:0 */, -119 /* ty=int32 span=model_90/tf.math.multiply_35/Mul:0:0 */) /* ty=Tensor[(1, 80, 80, 64), int8] span=model_90/tf.math.multiply_35/Mul:0:0 */;
  %75 = qnn.conv2d(%74, %v_param_19, -119 /* ty=int32 span=model_90/tf.math.add_9/Add;model_90/tf.nn.convolution_9/convolution;Const_152:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_9/Add;model_90/tf.nn.convolution_9/convolution;Const_152:0:0 */, 0.0326546f /* ty=float32 span=model_90/tf.math.add_9/Add;model_90/tf.nn.convolution_9/convolution;Const_152:0:0 */, meta[relay.Constant][18] /* ty=Tensor[(64), float32] span=model_90/tf.math.add_9/Add;model_90/tf.nn.convolution_9/convolution;Const_152:0:0 */, padding=[1, 1, 1, 1], channels=64, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 80, 80, 64), int32] span=model_90/tf.math.add_9/Add;model_90/tf.nn.convolution_9/convolution;Const_152:0:0 */;
  %76 = nn.bias_add(%75, %v_param_20, axis=3) /* ty=Tensor[(1, 80, 80, 64), int32] span=model_90/tf.math.add_9/Add;model_90/tf.nn.convolution_9/convolution;Const_152:0:0 */;
  %77 = qnn.requantize(%76, meta[relay.Constant][19] /* ty=Tensor[(64), float32] span=model_90/tf.math.add_9/Add;model_90/tf.nn.convolution_9/convolution;Const_152:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_9/Add;model_90/tf.nn.convolution_9/convolution;Const_152:0:0 */, 0.0763959f /* ty=float32 span=model_90/tf.math.add_9/Add;model_90/tf.nn.convolution_9/convolution;Const_152:0:0 */, 2 /* ty=int32 span=model_90/tf.math.add_9/Add;model_90/tf.nn.convolution_9/convolution;Const_152:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 80, 80, 64), int8] span=model_90/tf.math.add_9/Add;model_90/tf.nn.convolution_9/convolution;Const_152:0:0 */;
  %78 = qnn.dequantize(%77, 0.0763959f /* ty=float32 span=model_90/tf.math.sigmoid_9/Sigmoid:0:0 */, 2 /* ty=int32 span=model_90/tf.math.sigmoid_9/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 80, 80, 64), float32] span=model_90/tf.math.sigmoid_9/Sigmoid:0:0 */;
  %79 = sigmoid(%78) /* ty=Tensor[(1, 80, 80, 64), float32] span=model_90/tf.math.sigmoid_9/Sigmoid:0:0 */;
  %80 = qnn.quantize(%79, 0.00390625f /* ty=float32 span=model_90/tf.math.sigmoid_9/Sigmoid:0:0 */, -128 /* ty=int32 span=model_90/tf.math.sigmoid_9/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 80, 80, 64), int8] span=model_90/tf.math.sigmoid_9/Sigmoid:0:0 */;
  %81 = @tvmgen_default_ethos_n_main_7(%65) /* ty=Tensor[(1, 80, 80, 64), int8] */;
  %82 = qnn.mul(%77, %80, 0.0763959f /* ty=float32 span=model_90/tf.math.multiply_39/Mul:0:0 */, 2 /* ty=int32 span=model_90/tf.math.multiply_39/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_90/tf.math.multiply_39/Mul:0:0 */, -128 /* ty=int32 span=model_90/tf.math.multiply_39/Mul:0:0 */, 0.043374f /* ty=float32 span=model_90/tf.math.multiply_39/Mul:0:0 */, -122 /* ty=int32 span=model_90/tf.math.multiply_39/Mul:0:0 */) /* ty=Tensor[(1, 80, 80, 64), int8] span=model_90/tf.math.multiply_39/Mul:0:0 */;
  %83 = (%81, %67, %82) /* ty=(Tensor[(1, 80, 80, 64), int8], Tensor[(1, 80, 80, 64), int8], Tensor[(1, 80, 80, 64), int8]) span=model_90/tf.concat_1/concat:0:0 */;
  %84 = @tvmgen_default_ethos_n_main_9(%83) /* ty=Tensor[(1, 80, 80, 192), int8] */;
  %85 = qnn.conv2d(%84, %v_param_21, -122 /* ty=int32 span=model_90/tf.math.add_10/Add;model_90/tf.nn.convolution_10/convolution;Const_148:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_10/Add;model_90/tf.nn.convolution_10/convolution;Const_148:0:0 */, 0.043374f /* ty=float32 span=model_90/tf.math.add_10/Add;model_90/tf.nn.convolution_10/convolution;Const_148:0:0 */, meta[relay.Constant][20] /* ty=Tensor[(128), float32] span=model_90/tf.math.add_10/Add;model_90/tf.nn.convolution_10/convolution;Const_148:0:0 */, padding=[0, 0, 0, 0], channels=128, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 80, 80, 128), int32] span=model_90/tf.math.add_10/Add;model_90/tf.nn.convolution_10/convolution;Const_148:0:0 */;
  %86 = nn.bias_add(%85, %v_param_22, axis=3) /* ty=Tensor[(1, 80, 80, 128), int32] span=model_90/tf.math.add_10/Add;model_90/tf.nn.convolution_10/convolution;Const_148:0:0 */;
  %87 = qnn.requantize(%86, meta[relay.Constant][21] /* ty=Tensor[(128), float32] span=model_90/tf.math.add_10/Add;model_90/tf.nn.convolution_10/convolution;Const_148:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_10/Add;model_90/tf.nn.convolution_10/convolution;Const_148:0:0 */, 0.0901296f /* ty=float32 span=model_90/tf.math.add_10/Add;model_90/tf.nn.convolution_10/convolution;Const_148:0:0 */, 45 /* ty=int32 span=model_90/tf.math.add_10/Add;model_90/tf.nn.convolution_10/convolution;Const_148:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 80, 80, 128), int8] span=model_90/tf.math.add_10/Add;model_90/tf.nn.convolution_10/convolution;Const_148:0:0 */;
  %88 = qnn.dequantize(%87, 0.0901296f /* ty=float32 span=model_90/tf.math.sigmoid_10/Sigmoid:0:0 */, 45 /* ty=int32 span=model_90/tf.math.sigmoid_10/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 80, 80, 128), float32] span=model_90/tf.math.sigmoid_10/Sigmoid:0:0 */;
  %89 = sigmoid(%88) /* ty=Tensor[(1, 80, 80, 128), float32] span=model_90/tf.math.sigmoid_10/Sigmoid:0:0 */;
  %90 = qnn.quantize(%89, 0.00390625f /* ty=float32 span=model_90/tf.math.sigmoid_10/Sigmoid:0:0 */, -128 /* ty=int32 span=model_90/tf.math.sigmoid_10/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 80, 80, 128), int8] span=model_90/tf.math.sigmoid_10/Sigmoid:0:0 */;
  %91 = qnn.mul(%87, %90, 0.0901296f /* ty=float32 span=model_90/tf.math.multiply_43/Mul:0:0 */, 45 /* ty=int32 span=model_90/tf.math.multiply_43/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_90/tf.math.multiply_43/Mul:0:0 */, -128 /* ty=int32 span=model_90/tf.math.multiply_43/Mul:0:0 */, 0.0299939f /* ty=float32 span=model_90/tf.math.multiply_43/Mul:0:0 */, -119 /* ty=int32 span=model_90/tf.math.multiply_43/Mul:0:0 */) /* ty=Tensor[(1, 80, 80, 128), int8] span=model_90/tf.math.multiply_43/Mul:0:0 */;
  %92 = nn.pad(%91, -119f /* ty=float32 span=model_90/tf.compat.v1.pad_3/Pad:0:0 */, pad_width=[[0, 0], [1, 1], [1, 1], [0, 0]]) /* ty=Tensor[(1, 82, 82, 128), int8] span=model_90/tf.compat.v1.pad_3/Pad:0:0 */;
  %93 = qnn.conv2d(%92, %v_param_23, -119 /* ty=int32 span=model_90/tf.math.add_11/Add;model_90/tf.nn.convolution_11/convolution;Const_145:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_11/Add;model_90/tf.nn.convolution_11/convolution;Const_145:0:0 */, 0.0299939f /* ty=float32 span=model_90/tf.math.add_11/Add;model_90/tf.nn.convolution_11/convolution;Const_145:0:0 */, meta[relay.Constant][22] /* ty=Tensor[(128), float32] span=model_90/tf.math.add_11/Add;model_90/tf.nn.convolution_11/convolution;Const_145:0:0 */, strides=[2, 2], padding=[0, 0, 0, 0], channels=128, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 40, 40, 128), int32] span=model_90/tf.math.add_11/Add;model_90/tf.nn.convolution_11/convolution;Const_145:0:0 */;
  %94 = nn.bias_add(%93, %v_param_24, axis=3) /* ty=Tensor[(1, 40, 40, 128), int32] span=model_90/tf.math.add_11/Add;model_90/tf.nn.convolution_11/convolution;Const_145:0:0 */;
  %95 = qnn.requantize(%94, meta[relay.Constant][23] /* ty=Tensor[(128), float32] span=model_90/tf.math.add_11/Add;model_90/tf.nn.convolution_11/convolution;Const_145:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_11/Add;model_90/tf.nn.convolution_11/convolution;Const_145:0:0 */, 0.0587924f /* ty=float32 span=model_90/tf.math.add_11/Add;model_90/tf.nn.convolution_11/convolution;Const_145:0:0 */, 26 /* ty=int32 span=model_90/tf.math.add_11/Add;model_90/tf.nn.convolution_11/convolution;Const_145:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 128), int8] span=model_90/tf.math.add_11/Add;model_90/tf.nn.convolution_11/convolution;Const_145:0:0 */;
  %96 = qnn.dequantize(%95, 0.0587924f /* ty=float32 span=model_90/tf.math.sigmoid_11/Sigmoid:0:0 */, 26 /* ty=int32 span=model_90/tf.math.sigmoid_11/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 40, 40, 128), float32] span=model_90/tf.math.sigmoid_11/Sigmoid:0:0 */;
  %97 = sigmoid(%96) /* ty=Tensor[(1, 40, 40, 128), float32] span=model_90/tf.math.sigmoid_11/Sigmoid:0:0 */;
  %98 = qnn.quantize(%97, 0.00390625f /* ty=float32 span=model_90/tf.math.sigmoid_11/Sigmoid:0:0 */, -128 /* ty=int32 span=model_90/tf.math.sigmoid_11/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 128), int8] span=model_90/tf.math.sigmoid_11/Sigmoid:0:0 */;
  %99 = qnn.mul(%95, %98, 0.0587924f /* ty=float32 span=model_90/tf.math.multiply_47/Mul:0:0 */, 26 /* ty=int32 span=model_90/tf.math.multiply_47/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_90/tf.math.multiply_47/Mul:0:0 */, -128 /* ty=int32 span=model_90/tf.math.multiply_47/Mul:0:0 */, 0.0243775f /* ty=float32 span=model_90/tf.math.multiply_47/Mul:0:0 */, -117 /* ty=int32 span=model_90/tf.math.multiply_47/Mul:0:0 */) /* ty=Tensor[(1, 40, 40, 128), int8] span=model_90/tf.math.multiply_47/Mul:0:0 */;
  %100 = qnn.conv2d(%99, %v_param_25, -117 /* ty=int32 span=model_90/tf.math.add_12/Add;model_90/tf.nn.convolution_12/convolution;Const_143:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_12/Add;model_90/tf.nn.convolution_12/convolution;Const_143:0:0 */, 0.0243775f /* ty=float32 span=model_90/tf.math.add_12/Add;model_90/tf.nn.convolution_12/convolution;Const_143:0:0 */, meta[relay.Constant][24] /* ty=Tensor[(128), float32] span=model_90/tf.math.add_12/Add;model_90/tf.nn.convolution_12/convolution;Const_143:0:0 */, padding=[0, 0, 0, 0], channels=128, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 40, 40, 128), int32] span=model_90/tf.math.add_12/Add;model_90/tf.nn.convolution_12/convolution;Const_143:0:0 */;
  %101 = nn.bias_add(%100, %v_param_26, axis=3) /* ty=Tensor[(1, 40, 40, 128), int32] span=model_90/tf.math.add_12/Add;model_90/tf.nn.convolution_12/convolution;Const_143:0:0 */;
  %102 = qnn.requantize(%101, meta[relay.Constant][25] /* ty=Tensor[(128), float32] span=model_90/tf.math.add_12/Add;model_90/tf.nn.convolution_12/convolution;Const_143:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_12/Add;model_90/tf.nn.convolution_12/convolution;Const_143:0:0 */, 0.116438f /* ty=float32 span=model_90/tf.math.add_12/Add;model_90/tf.nn.convolution_12/convolution;Const_143:0:0 */, 44 /* ty=int32 span=model_90/tf.math.add_12/Add;model_90/tf.nn.convolution_12/convolution;Const_143:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 128), int8] span=model_90/tf.math.add_12/Add;model_90/tf.nn.convolution_12/convolution;Const_143:0:0 */;
  %103 = qnn.dequantize(%102, 0.116438f /* ty=float32 span=model_90/tf.math.sigmoid_12/Sigmoid:0:0 */, 44 /* ty=int32 span=model_90/tf.math.sigmoid_12/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 40, 40, 128), float32] span=model_90/tf.math.sigmoid_12/Sigmoid:0:0 */;
  %104 = sigmoid(%103) /* ty=Tensor[(1, 40, 40, 128), float32] span=model_90/tf.math.sigmoid_12/Sigmoid:0:0 */;
  %105 = qnn.quantize(%104, 0.00390625f /* ty=float32 span=model_90/tf.math.sigmoid_12/Sigmoid:0:0 */, -128 /* ty=int32 span=model_90/tf.math.sigmoid_12/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 128), int8] span=model_90/tf.math.sigmoid_12/Sigmoid:0:0 */;
  %106 = qnn.mul(%102, %105, 0.116438f /* ty=float32 span=model_90/tf.math.multiply_51/Mul:0:0 */, 44 /* ty=int32 span=model_90/tf.math.multiply_51/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_90/tf.math.multiply_51/Mul:0:0 */, -128 /* ty=int32 span=model_90/tf.math.multiply_51/Mul:0:0 */, 0.040282f /* ty=float32 span=model_90/tf.math.multiply_51/Mul:0:0 */, -114 /* ty=int32 span=model_90/tf.math.multiply_51/Mul:0:0 */) /* ty=Tensor[(1, 40, 40, 128), int8] span=model_90/tf.math.multiply_51/Mul:0:0 */;
  %107 = strided_slice(%106, begin=[0, 0, 0, 0], end=[1, 40, 40, 64], strides=[1, 1, 1, 1], axes=None) /* ty=Tensor[(1, 40, 40, 64), int8] span=model_90/tf.strided_slice_4/StridedSlice:0:0 */;
  %108 = strided_slice(%106, begin=[0, 0, 0, 64], end=[1, 40, 40, 128], strides=[1, 1, 1, 1], axes=None) /* ty=Tensor[(1, 40, 40, 64), int8] span=model_90/tf.strided_slice_5/StridedSlice:0:0 */;
  %109 = @tvmgen_default_ethos_n_main_15(%108) /* ty=Tensor[(1, 40, 40, 64), int8] */;
  %110 = qnn.conv2d(%109, %v_param_27, -114 /* ty=int32 span=model_90/tf.math.add_13/Add;model_90/tf.nn.convolution_13/convolution;Const_139:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_13/Add;model_90/tf.nn.convolution_13/convolution;Const_139:0:0 */, 0.040282f /* ty=float32 span=model_90/tf.math.add_13/Add;model_90/tf.nn.convolution_13/convolution;Const_139:0:0 */, meta[relay.Constant][26] /* ty=Tensor[(64), float32] span=model_90/tf.math.add_13/Add;model_90/tf.nn.convolution_13/convolution;Const_139:0:0 */, padding=[1, 1, 1, 1], channels=64, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 40, 40, 64), int32] span=model_90/tf.math.add_13/Add;model_90/tf.nn.convolution_13/convolution;Const_139:0:0 */;
  %111 = nn.bias_add(%110, %v_param_28, axis=3) /* ty=Tensor[(1, 40, 40, 64), int32] span=model_90/tf.math.add_13/Add;model_90/tf.nn.convolution_13/convolution;Const_139:0:0 */;
  %112 = qnn.requantize(%111, meta[relay.Constant][27] /* ty=Tensor[(64), float32] span=model_90/tf.math.add_13/Add;model_90/tf.nn.convolution_13/convolution;Const_139:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_13/Add;model_90/tf.nn.convolution_13/convolution;Const_139:0:0 */, 0.0431658f /* ty=float32 span=model_90/tf.math.add_13/Add;model_90/tf.nn.convolution_13/convolution;Const_139:0:0 */, -2 /* ty=int32 span=model_90/tf.math.add_13/Add;model_90/tf.nn.convolution_13/convolution;Const_139:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 64), int8] span=model_90/tf.math.add_13/Add;model_90/tf.nn.convolution_13/convolution;Const_139:0:0 */;
  %113 = qnn.dequantize(%112, 0.0431658f /* ty=float32 span=model_90/tf.math.sigmoid_13/Sigmoid:0:0 */, -2 /* ty=int32 span=model_90/tf.math.sigmoid_13/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 40, 40, 64), float32] span=model_90/tf.math.sigmoid_13/Sigmoid:0:0 */;
  %114 = sigmoid(%113) /* ty=Tensor[(1, 40, 40, 64), float32] span=model_90/tf.math.sigmoid_13/Sigmoid:0:0 */;
  %115 = qnn.quantize(%114, 0.00390625f /* ty=float32 span=model_90/tf.math.sigmoid_13/Sigmoid:0:0 */, -128 /* ty=int32 span=model_90/tf.math.sigmoid_13/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 64), int8] span=model_90/tf.math.sigmoid_13/Sigmoid:0:0 */;
  %116 = qnn.mul(%112, %115, 0.0431658f /* ty=float32 span=model_90/tf.math.multiply_55/Mul:0:0 */, -2 /* ty=int32 span=model_90/tf.math.multiply_55/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_90/tf.math.multiply_55/Mul:0:0 */, -128 /* ty=int32 span=model_90/tf.math.multiply_55/Mul:0:0 */, 0.0228733f /* ty=float32 span=model_90/tf.math.multiply_55/Mul:0:0 */, -116 /* ty=int32 span=model_90/tf.math.multiply_55/Mul:0:0 */) /* ty=Tensor[(1, 40, 40, 64), int8] span=model_90/tf.math.multiply_55/Mul:0:0 */;
  %117 = qnn.conv2d(%116, %v_param_29, -116 /* ty=int32 span=model_90/tf.math.add_14/Add;model_90/tf.nn.convolution_14/convolution;Const_137:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_14/Add;model_90/tf.nn.convolution_14/convolution;Const_137:0:0 */, 0.0228733f /* ty=float32 span=model_90/tf.math.add_14/Add;model_90/tf.nn.convolution_14/convolution;Const_137:0:0 */, meta[relay.Constant][28] /* ty=Tensor[(64), float32] span=model_90/tf.math.add_14/Add;model_90/tf.nn.convolution_14/convolution;Const_137:0:0 */, padding=[1, 1, 1, 1], channels=64, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 40, 40, 64), int32] span=model_90/tf.math.add_14/Add;model_90/tf.nn.convolution_14/convolution;Const_137:0:0 */;
  %118 = nn.bias_add(%117, %v_param_30, axis=3) /* ty=Tensor[(1, 40, 40, 64), int32] span=model_90/tf.math.add_14/Add;model_90/tf.nn.convolution_14/convolution;Const_137:0:0 */;
  %119 = qnn.requantize(%118, meta[relay.Constant][29] /* ty=Tensor[(64), float32] span=model_90/tf.math.add_14/Add;model_90/tf.nn.convolution_14/convolution;Const_137:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_14/Add;model_90/tf.nn.convolution_14/convolution;Const_137:0:0 */, 0.0501052f /* ty=float32 span=model_90/tf.math.add_14/Add;model_90/tf.nn.convolution_14/convolution;Const_137:0:0 */, 19 /* ty=int32 span=model_90/tf.math.add_14/Add;model_90/tf.nn.convolution_14/convolution;Const_137:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 64), int8] span=model_90/tf.math.add_14/Add;model_90/tf.nn.convolution_14/convolution;Const_137:0:0 */;
  %120 = qnn.dequantize(%119, 0.0501052f /* ty=float32 span=model_90/tf.math.sigmoid_14/Sigmoid:0:0 */, 19 /* ty=int32 span=model_90/tf.math.sigmoid_14/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 40, 40, 64), float32] span=model_90/tf.math.sigmoid_14/Sigmoid:0:0 */;
  %121 = sigmoid(%120) /* ty=Tensor[(1, 40, 40, 64), float32] span=model_90/tf.math.sigmoid_14/Sigmoid:0:0 */;
  %122 = qnn.quantize(%121, 0.00390625f /* ty=float32 span=model_90/tf.math.sigmoid_14/Sigmoid:0:0 */, -128 /* ty=int32 span=model_90/tf.math.sigmoid_14/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 64), int8] span=model_90/tf.math.sigmoid_14/Sigmoid:0:0 */;
  %123 = qnn.mul(%119, %122, 0.0501052f /* ty=float32 span=model_90/tf.math.multiply_59/Mul:0:0 */, 19 /* ty=int32 span=model_90/tf.math.multiply_59/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_90/tf.math.multiply_59/Mul:0:0 */, -128 /* ty=int32 span=model_90/tf.math.multiply_59/Mul:0:0 */, 0.0276006f /* ty=float32 span=model_90/tf.math.multiply_59/Mul:0:0 */, -108 /* ty=int32 span=model_90/tf.math.multiply_59/Mul:0:0 */) /* ty=Tensor[(1, 40, 40, 64), int8] span=model_90/tf.math.multiply_59/Mul:0:0 */;
  %124 = @tvmgen_default_ethos_n_main_14(%107) /* ty=Tensor[(1, 40, 40, 64), int8] */;
  %125 = qnn.add(%109, %123, 0.040282f /* ty=float32 span=model_90/tf.math.add_16/Add:0:0 */, -114 /* ty=int32 span=model_90/tf.math.add_16/Add:0:0 */, 0.0276006f /* ty=float32 span=model_90/tf.math.add_16/Add:0:0 */, -108 /* ty=int32 span=model_90/tf.math.add_16/Add:0:0 */, 0.040282f /* ty=float32 span=model_90/tf.math.add_16/Add:0:0 */, -114 /* ty=int32 span=model_90/tf.math.add_16/Add:0:0 */) /* ty=Tensor[(1, 40, 40, 64), int8] span=model_90/tf.math.add_16/Add:0:0 */;
  %126 = (%124, %109, %125) /* ty=(Tensor[(1, 40, 40, 64), int8], Tensor[(1, 40, 40, 64), int8], Tensor[(1, 40, 40, 64), int8]) span=model_90/tf.concat_2/concat:0:0 */;
  %127 = @tvmgen_default_ethos_n_main_16(%126) /* ty=Tensor[(1, 40, 40, 192), int8] */;
  %128 = qnn.conv2d(%127, %v_param_31, -114 /* ty=int32 span=model_90/tf.math.add_17/Add;model_90/tf.nn.convolution_15/convolution;Const_133:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_17/Add;model_90/tf.nn.convolution_15/convolution;Const_133:0:0 */, 0.040282f /* ty=float32 span=model_90/tf.math.add_17/Add;model_90/tf.nn.convolution_15/convolution;Const_133:0:0 */, meta[relay.Constant][30] /* ty=Tensor[(128), float32] span=model_90/tf.math.add_17/Add;model_90/tf.nn.convolution_15/convolution;Const_133:0:0 */, padding=[0, 0, 0, 0], channels=128, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 40, 40, 128), int32] span=model_90/tf.math.add_17/Add;model_90/tf.nn.convolution_15/convolution;Const_133:0:0 */;
  %129 = nn.bias_add(%128, %v_param_32, axis=3) /* ty=Tensor[(1, 40, 40, 128), int32] span=model_90/tf.math.add_17/Add;model_90/tf.nn.convolution_15/convolution;Const_133:0:0 */;
  %130 = qnn.requantize(%129, meta[relay.Constant][31] /* ty=Tensor[(128), float32] span=model_90/tf.math.add_17/Add;model_90/tf.nn.convolution_15/convolution;Const_133:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_17/Add;model_90/tf.nn.convolution_15/convolution;Const_133:0:0 */, 0.0478594f /* ty=float32 span=model_90/tf.math.add_17/Add;model_90/tf.nn.convolution_15/convolution;Const_133:0:0 */, 29 /* ty=int32 span=model_90/tf.math.add_17/Add;model_90/tf.nn.convolution_15/convolution;Const_133:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 128), int8] span=model_90/tf.math.add_17/Add;model_90/tf.nn.convolution_15/convolution;Const_133:0:0 */;
  %131 = qnn.dequantize(%130, 0.0478594f /* ty=float32 span=model_90/tf.math.sigmoid_15/Sigmoid:0:0 */, 29 /* ty=int32 span=model_90/tf.math.sigmoid_15/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 40, 40, 128), float32] span=model_90/tf.math.sigmoid_15/Sigmoid:0:0 */;
  %132 = sigmoid(%131) /* ty=Tensor[(1, 40, 40, 128), float32] span=model_90/tf.math.sigmoid_15/Sigmoid:0:0 */;
  %133 = qnn.quantize(%132, 0.00390625f /* ty=float32 span=model_90/tf.math.sigmoid_15/Sigmoid:0:0 */, -128 /* ty=int32 span=model_90/tf.math.sigmoid_15/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 128), int8] span=model_90/tf.math.sigmoid_15/Sigmoid:0:0 */;
  %134 = qnn.mul(%130, %133, 0.0478594f /* ty=float32 span=model_90/tf.math.multiply_65/Mul:0:0 */, 29 /* ty=int32 span=model_90/tf.math.multiply_65/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_90/tf.math.multiply_65/Mul:0:0 */, -128 /* ty=int32 span=model_90/tf.math.multiply_65/Mul:0:0 */, 0.019251f /* ty=float32 span=model_90/tf.math.multiply_65/Mul:0:0 */, -114 /* ty=int32 span=model_90/tf.math.multiply_65/Mul:0:0 */) /* ty=Tensor[(1, 40, 40, 128), int8] span=model_90/tf.math.multiply_65/Mul:0:0 */;
  %135 = nn.pad(%134, -114f /* ty=float32 span=model_90/tf.compat.v1.pad_4/Pad:0:0 */, pad_width=[[0, 0], [1, 1], [1, 1], [0, 0]]) /* ty=Tensor[(1, 42, 42, 128), int8] span=model_90/tf.compat.v1.pad_4/Pad:0:0 */;
  %136 = qnn.conv2d(%135, %v_param_33, -114 /* ty=int32 span=model_90/tf.math.add_18/Add;model_90/tf.nn.convolution_16/convolution;Const_130:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_18/Add;model_90/tf.nn.convolution_16/convolution;Const_130:0:0 */, 0.019251f /* ty=float32 span=model_90/tf.math.add_18/Add;model_90/tf.nn.convolution_16/convolution;Const_130:0:0 */, meta[relay.Constant][32] /* ty=Tensor[(256), float32] span=model_90/tf.math.add_18/Add;model_90/tf.nn.convolution_16/convolution;Const_130:0:0 */, strides=[2, 2], padding=[0, 0, 0, 0], channels=256, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 20, 20, 256), int32] span=model_90/tf.math.add_18/Add;model_90/tf.nn.convolution_16/convolution;Const_130:0:0 */;
  %137 = nn.bias_add(%136, %v_param_34, axis=3) /* ty=Tensor[(1, 20, 20, 256), int32] span=model_90/tf.math.add_18/Add;model_90/tf.nn.convolution_16/convolution;Const_130:0:0 */;
  %138 = qnn.requantize(%137, meta[relay.Constant][33] /* ty=Tensor[(256), float32] span=model_90/tf.math.add_18/Add;model_90/tf.nn.convolution_16/convolution;Const_130:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_18/Add;model_90/tf.nn.convolution_16/convolution;Const_130:0:0 */, 0.0765426f /* ty=float32 span=model_90/tf.math.add_18/Add;model_90/tf.nn.convolution_16/convolution;Const_130:0:0 */, 61 /* ty=int32 span=model_90/tf.math.add_18/Add;model_90/tf.nn.convolution_16/convolution;Const_130:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 256), int8] span=model_90/tf.math.add_18/Add;model_90/tf.nn.convolution_16/convolution;Const_130:0:0 */;
  %139 = qnn.dequantize(%138, 0.0765426f /* ty=float32 span=model_90/tf.math.sigmoid_16/Sigmoid:0:0 */, 61 /* ty=int32 span=model_90/tf.math.sigmoid_16/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 20, 20, 256), float32] span=model_90/tf.math.sigmoid_16/Sigmoid:0:0 */;
  %140 = sigmoid(%139) /* ty=Tensor[(1, 20, 20, 256), float32] span=model_90/tf.math.sigmoid_16/Sigmoid:0:0 */;
  %141 = qnn.quantize(%140, 0.00390625f /* ty=float32 span=model_90/tf.math.sigmoid_16/Sigmoid:0:0 */, -128 /* ty=int32 span=model_90/tf.math.sigmoid_16/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 256), int8] span=model_90/tf.math.sigmoid_16/Sigmoid:0:0 */;
  %142 = qnn.mul(%138, %141, 0.0765426f /* ty=float32 span=model_90/tf.math.multiply_69/Mul:0:0 */, 61 /* ty=int32 span=model_90/tf.math.multiply_69/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_90/tf.math.multiply_69/Mul:0:0 */, -128 /* ty=int32 span=model_90/tf.math.multiply_69/Mul:0:0 */, 0.0208385f /* ty=float32 span=model_90/tf.math.multiply_69/Mul:0:0 */, -115 /* ty=int32 span=model_90/tf.math.multiply_69/Mul:0:0 */) /* ty=Tensor[(1, 20, 20, 256), int8] span=model_90/tf.math.multiply_69/Mul:0:0 */;
  %143 = qnn.conv2d(%142, %v_param_35, -115 /* ty=int32 span=model_90/tf.math.add_19/Add;model_90/tf.nn.convolution_17/convolution;Const_128:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_19/Add;model_90/tf.nn.convolution_17/convolution;Const_128:0:0 */, 0.0208385f /* ty=float32 span=model_90/tf.math.add_19/Add;model_90/tf.nn.convolution_17/convolution;Const_128:0:0 */, meta[relay.Constant][34] /* ty=Tensor[(256), float32] span=model_90/tf.math.add_19/Add;model_90/tf.nn.convolution_17/convolution;Const_128:0:0 */, padding=[0, 0, 0, 0], channels=256, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 20, 20, 256), int32] span=model_90/tf.math.add_19/Add;model_90/tf.nn.convolution_17/convolution;Const_128:0:0 */;
  %144 = nn.bias_add(%143, %v_param_36, axis=3) /* ty=Tensor[(1, 20, 20, 256), int32] span=model_90/tf.math.add_19/Add;model_90/tf.nn.convolution_17/convolution;Const_128:0:0 */;
  %145 = qnn.requantize(%144, meta[relay.Constant][35] /* ty=Tensor[(256), float32] span=model_90/tf.math.add_19/Add;model_90/tf.nn.convolution_17/convolution;Const_128:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_19/Add;model_90/tf.nn.convolution_17/convolution;Const_128:0:0 */, 0.0638647f /* ty=float32 span=model_90/tf.math.add_19/Add;model_90/tf.nn.convolution_17/convolution;Const_128:0:0 */, 20 /* ty=int32 span=model_90/tf.math.add_19/Add;model_90/tf.nn.convolution_17/convolution;Const_128:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 256), int8] span=model_90/tf.math.add_19/Add;model_90/tf.nn.convolution_17/convolution;Const_128:0:0 */;
  %146 = qnn.dequantize(%145, 0.0638647f /* ty=float32 span=model_90/tf.math.sigmoid_17/Sigmoid:0:0 */, 20 /* ty=int32 span=model_90/tf.math.sigmoid_17/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 20, 20, 256), float32] span=model_90/tf.math.sigmoid_17/Sigmoid:0:0 */;
  %147 = sigmoid(%146) /* ty=Tensor[(1, 20, 20, 256), float32] span=model_90/tf.math.sigmoid_17/Sigmoid:0:0 */;
  %148 = qnn.quantize(%147, 0.00390625f /* ty=float32 span=model_90/tf.math.sigmoid_17/Sigmoid:0:0 */, -128 /* ty=int32 span=model_90/tf.math.sigmoid_17/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 256), int8] span=model_90/tf.math.sigmoid_17/Sigmoid:0:0 */;
  %149 = qnn.mul(%145, %148, 0.0638647f /* ty=float32 span=model_90/tf.math.multiply_73/Mul:0:0 */, 20 /* ty=int32 span=model_90/tf.math.multiply_73/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_90/tf.math.multiply_73/Mul:0:0 */, -128 /* ty=int32 span=model_90/tf.math.multiply_73/Mul:0:0 */, 0.0288433f /* ty=float32 span=model_90/tf.math.multiply_73/Mul:0:0 */, -109 /* ty=int32 span=model_90/tf.math.multiply_73/Mul:0:0 */) /* ty=Tensor[(1, 20, 20, 256), int8] span=model_90/tf.math.multiply_73/Mul:0:0 */;
  %150 = strided_slice(%149, begin=[0, 0, 0, 0], end=[1, 20, 20, 128], strides=[1, 1, 1, 1], axes=None) /* ty=Tensor[(1, 20, 20, 128), int8] span=model_90/tf.strided_slice_6/StridedSlice:0:0 */;
  %151 = strided_slice(%149, begin=[0, 0, 0, 128], end=[1, 20, 20, 256], strides=[1, 1, 1, 1], axes=None) /* ty=Tensor[(1, 20, 20, 128), int8] span=model_90/tf.strided_slice_7/StridedSlice:0:0 */;
  %152 = @tvmgen_default_ethos_n_main_22(%151) /* ty=Tensor[(1, 20, 20, 128), int8] */;
  %153 = qnn.conv2d(%152, %v_param_37, -109 /* ty=int32 span=model_90/tf.math.add_20/Add;model_90/tf.nn.convolution_18/convolution;Const_124:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_20/Add;model_90/tf.nn.convolution_18/convolution;Const_124:0:0 */, 0.0288433f /* ty=float32 span=model_90/tf.math.add_20/Add;model_90/tf.nn.convolution_18/convolution;Const_124:0:0 */, meta[relay.Constant][36] /* ty=Tensor[(128), float32] span=model_90/tf.math.add_20/Add;model_90/tf.nn.convolution_18/convolution;Const_124:0:0 */, padding=[1, 1, 1, 1], channels=128, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 20, 20, 128), int32] span=model_90/tf.math.add_20/Add;model_90/tf.nn.convolution_18/convolution;Const_124:0:0 */;
  %154 = nn.bias_add(%153, %v_param_38, axis=3) /* ty=Tensor[(1, 20, 20, 128), int32] span=model_90/tf.math.add_20/Add;model_90/tf.nn.convolution_18/convolution;Const_124:0:0 */;
  %155 = qnn.requantize(%154, meta[relay.Constant][37] /* ty=Tensor[(128), float32] span=model_90/tf.math.add_20/Add;model_90/tf.nn.convolution_18/convolution;Const_124:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_20/Add;model_90/tf.nn.convolution_18/convolution;Const_124:0:0 */, 0.0539202f /* ty=float32 span=model_90/tf.math.add_20/Add;model_90/tf.nn.convolution_18/convolution;Const_124:0:0 */, 1 /* ty=int32 span=model_90/tf.math.add_20/Add;model_90/tf.nn.convolution_18/convolution;Const_124:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 128), int8] span=model_90/tf.math.add_20/Add;model_90/tf.nn.convolution_18/convolution;Const_124:0:0 */;
  %156 = qnn.dequantize(%155, 0.0539202f /* ty=float32 span=model_90/tf.math.sigmoid_18/Sigmoid:0:0 */, 1 /* ty=int32 span=model_90/tf.math.sigmoid_18/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 20, 20, 128), float32] span=model_90/tf.math.sigmoid_18/Sigmoid:0:0 */;
  %157 = sigmoid(%156) /* ty=Tensor[(1, 20, 20, 128), float32] span=model_90/tf.math.sigmoid_18/Sigmoid:0:0 */;
  %158 = qnn.quantize(%157, 0.00390625f /* ty=float32 span=model_90/tf.math.sigmoid_18/Sigmoid:0:0 */, -128 /* ty=int32 span=model_90/tf.math.sigmoid_18/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 128), int8] span=model_90/tf.math.sigmoid_18/Sigmoid:0:0 */;
  %159 = qnn.mul(%155, %158, 0.0539202f /* ty=float32 span=model_90/tf.math.multiply_77/Mul:0:0 */, 1 /* ty=int32 span=model_90/tf.math.multiply_77/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_90/tf.math.multiply_77/Mul:0:0 */, -128 /* ty=int32 span=model_90/tf.math.multiply_77/Mul:0:0 */, 0.0276928f /* ty=float32 span=model_90/tf.math.multiply_77/Mul:0:0 */, -118 /* ty=int32 span=model_90/tf.math.multiply_77/Mul:0:0 */) /* ty=Tensor[(1, 20, 20, 128), int8] span=model_90/tf.math.multiply_77/Mul:0:0 */;
  %160 = qnn.conv2d(%159, %v_param_39, -118 /* ty=int32 span=model_90/tf.math.add_21/Add;model_90/tf.nn.convolution_19/convolution;Const_122:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_21/Add;model_90/tf.nn.convolution_19/convolution;Const_122:0:0 */, 0.0276928f /* ty=float32 span=model_90/tf.math.add_21/Add;model_90/tf.nn.convolution_19/convolution;Const_122:0:0 */, meta[relay.Constant][38] /* ty=Tensor[(128), float32] span=model_90/tf.math.add_21/Add;model_90/tf.nn.convolution_19/convolution;Const_122:0:0 */, padding=[1, 1, 1, 1], channels=128, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 20, 20, 128), int32] span=model_90/tf.math.add_21/Add;model_90/tf.nn.convolution_19/convolution;Const_122:0:0 */;
  %161 = nn.bias_add(%160, %v_param_40, axis=3) /* ty=Tensor[(1, 20, 20, 128), int32] span=model_90/tf.math.add_21/Add;model_90/tf.nn.convolution_19/convolution;Const_122:0:0 */;
  %162 = qnn.requantize(%161, meta[relay.Constant][39] /* ty=Tensor[(128), float32] span=model_90/tf.math.add_21/Add;model_90/tf.nn.convolution_19/convolution;Const_122:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_21/Add;model_90/tf.nn.convolution_19/convolution;Const_122:0:0 */, 0.0448597f /* ty=float32 span=model_90/tf.math.add_21/Add;model_90/tf.nn.convolution_19/convolution;Const_122:0:0 */, -12 /* ty=int32 span=model_90/tf.math.add_21/Add;model_90/tf.nn.convolution_19/convolution;Const_122:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 128), int8] span=model_90/tf.math.add_21/Add;model_90/tf.nn.convolution_19/convolution;Const_122:0:0 */;
  %163 = qnn.dequantize(%162, 0.0448597f /* ty=float32 span=model_90/tf.math.sigmoid_19/Sigmoid:0:0 */, -12 /* ty=int32 span=model_90/tf.math.sigmoid_19/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 20, 20, 128), float32] span=model_90/tf.math.sigmoid_19/Sigmoid:0:0 */;
  %164 = sigmoid(%163) /* ty=Tensor[(1, 20, 20, 128), float32] span=model_90/tf.math.sigmoid_19/Sigmoid:0:0 */;
  %165 = qnn.quantize(%164, 0.00390625f /* ty=float32 span=model_90/tf.math.sigmoid_19/Sigmoid:0:0 */, -128 /* ty=int32 span=model_90/tf.math.sigmoid_19/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 128), int8] span=model_90/tf.math.sigmoid_19/Sigmoid:0:0 */;
  %166 = qnn.mul(%162, %165, 0.0448597f /* ty=float32 span=model_90/tf.math.multiply_81/Mul:0:0 */, -12 /* ty=int32 span=model_90/tf.math.multiply_81/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_90/tf.math.multiply_81/Mul:0:0 */, -128 /* ty=int32 span=model_90/tf.math.multiply_81/Mul:0:0 */, 0.0265882f /* ty=float32 span=model_90/tf.math.multiply_81/Mul:0:0 */, -107 /* ty=int32 span=model_90/tf.math.multiply_81/Mul:0:0 */) /* ty=Tensor[(1, 20, 20, 128), int8] span=model_90/tf.math.multiply_81/Mul:0:0 */;
  %167 = @tvmgen_default_ethos_n_main_21(%150) /* ty=Tensor[(1, 20, 20, 128), int8] */;
  %168 = qnn.add(%152, %166, 0.0288433f /* ty=float32 span=model_90/tf.math.add_23/Add:0:0 */, -109 /* ty=int32 span=model_90/tf.math.add_23/Add:0:0 */, 0.0265882f /* ty=float32 span=model_90/tf.math.add_23/Add:0:0 */, -107 /* ty=int32 span=model_90/tf.math.add_23/Add:0:0 */, 0.0288433f /* ty=float32 span=model_90/tf.math.add_23/Add:0:0 */, -109 /* ty=int32 span=model_90/tf.math.add_23/Add:0:0 */) /* ty=Tensor[(1, 20, 20, 128), int8] span=model_90/tf.math.add_23/Add:0:0 */;
  %169 = (%167, %152, %168) /* ty=(Tensor[(1, 20, 20, 128), int8], Tensor[(1, 20, 20, 128), int8], Tensor[(1, 20, 20, 128), int8]) span=model_90/tf.concat_3/concat:0:0 */;
  %170 = @tvmgen_default_ethos_n_main_23(%169) /* ty=Tensor[(1, 20, 20, 384), int8] */;
  %171 = qnn.conv2d(%170, %v_param_41, -109 /* ty=int32 span=model_90/tf.math.add_24/Add;model_90/tf.nn.convolution_20/convolution;Const_118:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_24/Add;model_90/tf.nn.convolution_20/convolution;Const_118:0:0 */, 0.0288433f /* ty=float32 span=model_90/tf.math.add_24/Add;model_90/tf.nn.convolution_20/convolution;Const_118:0:0 */, meta[relay.Constant][40] /* ty=Tensor[(256), float32] span=model_90/tf.math.add_24/Add;model_90/tf.nn.convolution_20/convolution;Const_118:0:0 */, padding=[0, 0, 0, 0], channels=256, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 20, 20, 256), int32] span=model_90/tf.math.add_24/Add;model_90/tf.nn.convolution_20/convolution;Const_118:0:0 */;
  %172 = nn.bias_add(%171, %v_param_42, axis=3) /* ty=Tensor[(1, 20, 20, 256), int32] span=model_90/tf.math.add_24/Add;model_90/tf.nn.convolution_20/convolution;Const_118:0:0 */;
  %173 = qnn.requantize(%172, meta[relay.Constant][41] /* ty=Tensor[(256), float32] span=model_90/tf.math.add_24/Add;model_90/tf.nn.convolution_20/convolution;Const_118:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_24/Add;model_90/tf.nn.convolution_20/convolution;Const_118:0:0 */, 0.0892466f /* ty=float32 span=model_90/tf.math.add_24/Add;model_90/tf.nn.convolution_20/convolution;Const_118:0:0 */, 50 /* ty=int32 span=model_90/tf.math.add_24/Add;model_90/tf.nn.convolution_20/convolution;Const_118:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 256), int8] span=model_90/tf.math.add_24/Add;model_90/tf.nn.convolution_20/convolution;Const_118:0:0 */;
  %174 = qnn.dequantize(%173, 0.0892466f /* ty=float32 span=model_90/tf.math.sigmoid_20/Sigmoid:0:0 */, 50 /* ty=int32 span=model_90/tf.math.sigmoid_20/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 20, 20, 256), float32] span=model_90/tf.math.sigmoid_20/Sigmoid:0:0 */;
  %175 = sigmoid(%174) /* ty=Tensor[(1, 20, 20, 256), float32] span=model_90/tf.math.sigmoid_20/Sigmoid:0:0 */;
  %176 = qnn.quantize(%175, 0.00390625f /* ty=float32 span=model_90/tf.math.sigmoid_20/Sigmoid:0:0 */, -128 /* ty=int32 span=model_90/tf.math.sigmoid_20/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 256), int8] span=model_90/tf.math.sigmoid_20/Sigmoid:0:0 */;
  %177 = qnn.mul(%173, %176, 0.0892466f /* ty=float32 span=model_90/tf.math.multiply_87/Mul:0:0 */, 50 /* ty=int32 span=model_90/tf.math.multiply_87/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_90/tf.math.multiply_87/Mul:0:0 */, -128 /* ty=int32 span=model_90/tf.math.multiply_87/Mul:0:0 */, 0.0279378f /* ty=float32 span=model_90/tf.math.multiply_87/Mul:0:0 */, -118 /* ty=int32 span=model_90/tf.math.multiply_87/Mul:0:0 */) /* ty=Tensor[(1, 20, 20, 256), int8] span=model_90/tf.math.multiply_87/Mul:0:0 */;
  %178 = qnn.conv2d(%177, %v_param_43, -118 /* ty=int32 span=model_90/tf.math.add_25/Add;model_90/tf.nn.convolution_21/convolution;Const_116:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_25/Add;model_90/tf.nn.convolution_21/convolution;Const_116:0:0 */, 0.0279378f /* ty=float32 span=model_90/tf.math.add_25/Add;model_90/tf.nn.convolution_21/convolution;Const_116:0:0 */, meta[relay.Constant][42] /* ty=Tensor[(128), float32] span=model_90/tf.math.add_25/Add;model_90/tf.nn.convolution_21/convolution;Const_116:0:0 */, padding=[0, 0, 0, 0], channels=128, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 20, 20, 128), int32] span=model_90/tf.math.add_25/Add;model_90/tf.nn.convolution_21/convolution;Const_116:0:0 */;
  %179 = nn.bias_add(%178, %v_param_44, axis=3) /* ty=Tensor[(1, 20, 20, 128), int32] span=model_90/tf.math.add_25/Add;model_90/tf.nn.convolution_21/convolution;Const_116:0:0 */;
  %180 = qnn.requantize(%179, meta[relay.Constant][43] /* ty=Tensor[(128), float32] span=model_90/tf.math.add_25/Add;model_90/tf.nn.convolution_21/convolution;Const_116:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_25/Add;model_90/tf.nn.convolution_21/convolution;Const_116:0:0 */, 0.0426991f /* ty=float32 span=model_90/tf.math.add_25/Add;model_90/tf.nn.convolution_21/convolution;Const_116:0:0 */, -36 /* ty=int32 span=model_90/tf.math.add_25/Add;model_90/tf.nn.convolution_21/convolution;Const_116:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 128), int8] span=model_90/tf.math.add_25/Add;model_90/tf.nn.convolution_21/convolution;Const_116:0:0 */;
  %181 = qnn.dequantize(%180, 0.0426991f /* ty=float32 span=model_90/tf.math.sigmoid_21/Sigmoid:0:0 */, -36 /* ty=int32 span=model_90/tf.math.sigmoid_21/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 20, 20, 128), float32] span=model_90/tf.math.sigmoid_21/Sigmoid:0:0 */;
  %182 = sigmoid(%181) /* ty=Tensor[(1, 20, 20, 128), float32] span=model_90/tf.math.sigmoid_21/Sigmoid:0:0 */;
  %183 = qnn.quantize(%182, 0.00390625f /* ty=float32 span=model_90/tf.math.sigmoid_21/Sigmoid:0:0 */, -128 /* ty=int32 span=model_90/tf.math.sigmoid_21/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 128), int8] span=model_90/tf.math.sigmoid_21/Sigmoid:0:0 */;
  %184 = qnn.mul(%180, %183, 0.0426991f /* ty=float32 span=model_90/tf.math.multiply_91/Mul:0:0 */, -36 /* ty=int32 span=model_90/tf.math.multiply_91/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_90/tf.math.multiply_91/Mul:0:0 */, -128 /* ty=int32 span=model_90/tf.math.multiply_91/Mul:0:0 */, 0.0282958f /* ty=float32 span=model_90/tf.math.multiply_91/Mul:0:0 */, -118 /* ty=int32 span=model_90/tf.math.multiply_91/Mul:0:0 */) /* ty=Tensor[(1, 20, 20, 128), int8] span=model_90/tf.math.multiply_91/Mul:0:0 */;
  %185 = @tvmgen_default_ethos_n_main_28(%184) /* ty=(Tensor[(1, 20, 20, 128), int8], Tensor[(1, 20, 20, 128), int8], Tensor[(1, 20, 20, 128), int8]) */;
  %186 = %185.0 /* ty=Tensor[(1, 20, 20, 128), int8] */;
  %187 = %185.1 /* ty=Tensor[(1, 20, 20, 128), int8] */;
  %188 = %185.2 /* ty=Tensor[(1, 20, 20, 128), int8] */;
  %189 = (%184, %186, %187, %188) /* ty=(Tensor[(1, 20, 20, 128), int8], Tensor[(1, 20, 20, 128), int8], Tensor[(1, 20, 20, 128), int8], Tensor[(1, 20, 20, 128), int8]) span=model_90/tf.concat_4/concat:0:0 */;
  %190 = @tvmgen_default_ethos_n_main_29(%189) /* ty=Tensor[(1, 20, 20, 512), int8] */;
  %191 = qnn.conv2d(%190, %v_param_45, -118 /* ty=int32 span=model_90/tf.math.add_26/Add;model_90/tf.nn.convolution_22/convolution;Const_114:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_26/Add;model_90/tf.nn.convolution_22/convolution;Const_114:0:0 */, 0.0282958f /* ty=float32 span=model_90/tf.math.add_26/Add;model_90/tf.nn.convolution_22/convolution;Const_114:0:0 */, meta[relay.Constant][44] /* ty=Tensor[(256), float32] span=model_90/tf.math.add_26/Add;model_90/tf.nn.convolution_22/convolution;Const_114:0:0 */, padding=[0, 0, 0, 0], channels=256, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 20, 20, 256), int32] span=model_90/tf.math.add_26/Add;model_90/tf.nn.convolution_22/convolution;Const_114:0:0 */;
  %192 = nn.bias_add(%191, %v_param_46, axis=3) /* ty=Tensor[(1, 20, 20, 256), int32] span=model_90/tf.math.add_26/Add;model_90/tf.nn.convolution_22/convolution;Const_114:0:0 */;
  %193 = qnn.requantize(%192, meta[relay.Constant][45] /* ty=Tensor[(256), float32] span=model_90/tf.math.add_26/Add;model_90/tf.nn.convolution_22/convolution;Const_114:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_26/Add;model_90/tf.nn.convolution_22/convolution;Const_114:0:0 */, 0.0516906f /* ty=float32 span=model_90/tf.math.add_26/Add;model_90/tf.nn.convolution_22/convolution;Const_114:0:0 */, 45 /* ty=int32 span=model_90/tf.math.add_26/Add;model_90/tf.nn.convolution_22/convolution;Const_114:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 256), int8] span=model_90/tf.math.add_26/Add;model_90/tf.nn.convolution_22/convolution;Const_114:0:0 */;
  %194 = qnn.dequantize(%193, 0.0516906f /* ty=float32 span=model_90/tf.math.sigmoid_22/Sigmoid:0:0 */, 45 /* ty=int32 span=model_90/tf.math.sigmoid_22/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 20, 20, 256), float32] span=model_90/tf.math.sigmoid_22/Sigmoid:0:0 */;
  %195 = sigmoid(%194) /* ty=Tensor[(1, 20, 20, 256), float32] span=model_90/tf.math.sigmoid_22/Sigmoid:0:0 */;
  %196 = qnn.quantize(%195, 0.00390625f /* ty=float32 span=model_90/tf.math.sigmoid_22/Sigmoid:0:0 */, -128 /* ty=int32 span=model_90/tf.math.sigmoid_22/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 256), int8] span=model_90/tf.math.sigmoid_22/Sigmoid:0:0 */;
  %197 = qnn.mul(%193, %196, 0.0516906f /* ty=float32 span=model_90/tf.math.multiply_95/Mul:0:0 */, 45 /* ty=int32 span=model_90/tf.math.multiply_95/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_90/tf.math.multiply_95/Mul:0:0 */, -128 /* ty=int32 span=model_90/tf.math.multiply_95/Mul:0:0 */, 0.0175211f /* ty=float32 span=model_90/tf.math.multiply_95/Mul:0:0 */, -112 /* ty=int32 span=model_90/tf.math.multiply_95/Mul:0:0 */) /* ty=Tensor[(1, 20, 20, 256), int8] span=model_90/tf.math.multiply_95/Mul:0:0 */;
  %198 = qnn.conv2d(%197, %v_param_47, -112 /* ty=int32 span=model_90/tf.math.add_27/Add;model_90/tf.nn.convolution_23/convolution;Const_112:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_27/Add;model_90/tf.nn.convolution_23/convolution;Const_112:0:0 */, 0.0175211f /* ty=float32 span=model_90/tf.math.add_27/Add;model_90/tf.nn.convolution_23/convolution;Const_112:0:0 */, meta[relay.Constant][46] /* ty=Tensor[(256), float32] span=model_90/tf.math.add_27/Add;model_90/tf.nn.convolution_23/convolution;Const_112:0:0 */, padding=[0, 0, 0, 0], channels=256, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 20, 20, 256), int32] span=model_90/tf.math.add_27/Add;model_90/tf.nn.convolution_23/convolution;Const_112:0:0 */;
  %199 = nn.bias_add(%198, %v_param_48, axis=3) /* ty=Tensor[(1, 20, 20, 256), int32] span=model_90/tf.math.add_27/Add;model_90/tf.nn.convolution_23/convolution;Const_112:0:0 */;
  %200 = qnn.requantize(%199, meta[relay.Constant][47] /* ty=Tensor[(256), float32] span=model_90/tf.math.add_27/Add;model_90/tf.nn.convolution_23/convolution;Const_112:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_27/Add;model_90/tf.nn.convolution_23/convolution;Const_112:0:0 */, 0.149357f /* ty=float32 span=model_90/tf.math.add_27/Add;model_90/tf.nn.convolution_23/convolution;Const_112:0:0 */, 10 /* ty=int32 span=model_90/tf.math.add_27/Add;model_90/tf.nn.convolution_23/convolution;Const_112:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 256), int8] span=model_90/tf.math.add_27/Add;model_90/tf.nn.convolution_23/convolution;Const_112:0:0 */;
  %201 = qnn.dequantize(%200, 0.149357f /* ty=float32 span=model_90/tf.math.sigmoid_23/Sigmoid:0:0 */, 10 /* ty=int32 span=model_90/tf.math.sigmoid_23/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 20, 20, 256), float32] span=model_90/tf.math.sigmoid_23/Sigmoid:0:0 */;
  %202 = sigmoid(%201) /* ty=Tensor[(1, 20, 20, 256), float32] span=model_90/tf.math.sigmoid_23/Sigmoid:0:0 */;
  %203 = qnn.quantize(%202, 0.00390625f /* ty=float32 span=model_90/tf.math.sigmoid_23/Sigmoid:0:0 */, -128 /* ty=int32 span=model_90/tf.math.sigmoid_23/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 256), int8] span=model_90/tf.math.sigmoid_23/Sigmoid:0:0 */;
  %204 = qnn.mul(%200, %203, 0.149357f /* ty=float32 span=model_90/tf.math.multiply_99/Mul:0:0 */, 10 /* ty=int32 span=model_90/tf.math.multiply_99/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_90/tf.math.multiply_99/Mul:0:0 */, -128 /* ty=int32 span=model_90/tf.math.multiply_99/Mul:0:0 */, 0.0930227f /* ty=float32 span=model_90/tf.math.multiply_99/Mul:0:0 */, -51 /* ty=int32 span=model_90/tf.math.multiply_99/Mul:0:0 */) /* ty=Tensor[(1, 20, 20, 256), int8] span=model_90/tf.math.multiply_99/Mul:0:0 */;
  %205 = strided_slice(%204, begin=[0, 0, 0, 0], end=[1, 20, 20, 128], strides=[1, 1, 1, 1], axes=None) /* ty=Tensor[(1, 20, 20, 128), int8] span=model_90/tf.strided_slice_8/StridedSlice:0:0 */;
  %206 = strided_slice(%204, begin=[0, 0, 0, 128], end=[1, 20, 20, 256], strides=[1, 1, 1, 1], axes=None) /* ty=Tensor[(1, 20, 20, 128), int8] span=model_90/tf.strided_slice_9/StridedSlice:0:0 */;
  %207 = @tvmgen_default_ethos_n_main_35(%206) /* ty=Tensor[(1, 20, 20, 128), int8] */;
  %208 = qnn.conv2d(%207, %v_param_49, -51 /* ty=int32 span=model_90/tf.math.add_28/Add;model_90/tf.nn.convolution_24/convolution;Const_110:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_28/Add;model_90/tf.nn.convolution_24/convolution;Const_110:0:0 */, 0.0930227f /* ty=float32 span=model_90/tf.math.add_28/Add;model_90/tf.nn.convolution_24/convolution;Const_110:0:0 */, meta[relay.Constant][48] /* ty=Tensor[(256), float32] span=model_90/tf.math.add_28/Add;model_90/tf.nn.convolution_24/convolution;Const_110:0:0 */, padding=[0, 0, 0, 0], channels=256, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 20, 20, 256), int32] span=model_90/tf.math.add_28/Add;model_90/tf.nn.convolution_24/convolution;Const_110:0:0 */;
  %209 = nn.bias_add(%208, %v_param_50, axis=3) /* ty=Tensor[(1, 20, 20, 256), int32] span=model_90/tf.math.add_28/Add;model_90/tf.nn.convolution_24/convolution;Const_110:0:0 */;
  %210 = qnn.requantize(%209, meta[relay.Constant][49] /* ty=Tensor[(256), float32] span=model_90/tf.math.add_28/Add;model_90/tf.nn.convolution_24/convolution;Const_110:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_28/Add;model_90/tf.nn.convolution_24/convolution;Const_110:0:0 */, 0.0957604f /* ty=float32 span=model_90/tf.math.add_28/Add;model_90/tf.nn.convolution_24/convolution;Const_110:0:0 */, -20 /* ty=int32 span=model_90/tf.math.add_28/Add;model_90/tf.nn.convolution_24/convolution;Const_110:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 256), int8] span=model_90/tf.math.add_28/Add;model_90/tf.nn.convolution_24/convolution;Const_110:0:0 */;
  %211 = transpose(%210, axes=[0, 3, 1, 2]) /* ty=Tensor[(1, 256, 20, 20), int8] span=model_90/tf.compat.v1.transpose_28/transpose:0:0 */;
  %212 = @tvmgen_default_ethos_n_main_36(%211) /* ty=Tensor[(1, 2, 128, 400), int8] */;
  %213 = strided_slice(%212, begin=[0, 0, 64, 0], end=[1, 2, 128, 400], strides=[1, 1, 1, 1], axes=None) /* ty=Tensor[(1, 2, 64, 400), int8] span=model_90/tf.strided_slice_12/StridedSlice:0:0 */;
  %214 = @tvmgen_default_ethos_n_main_37(%213) /* ty=(Tensor[(1, 2, 64, 400), int8], Tensor[(1, 128, 20, 20), int8]) */;
  %215 = %214.0 /* ty=Tensor[(1, 2, 64, 400), int8] */;
  %216 = strided_slice(%212, begin=[0, 0, 0, 0], end=[1, 2, 32, 400], strides=[1, 1, 1, 1], axes=None) /* ty=Tensor[(1, 2, 32, 400), int8] span=model_90/tf.strided_slice_10/StridedSlice:0:0 */;
  %217 = @tvmgen_default_ethos_n_main_38(%216) /* ty=Tensor[(1, 2, 32, 400), int8] */;
  %218 = reshape(%217, newshape=[-1, 32, 400]) /* ty=Tensor[(2, 32, 400), int8] span=model_90/tf.linalg.matmul_6/MatMul;model_90/tf.compat.v1.transpose_31/transpose:0:0 */;
  %219 = strided_slice(%212, begin=[0, 0, 32, 0], end=[1, 2, 64, 400], strides=[1, 1, 1, 1], axes=None) /* ty=Tensor[(1, 2, 32, 400), int8] span=model_90/tf.strided_slice_11/StridedSlice:0:0 */;
  %220 = @tvmgen_default_ethos_n_main_39(%219) /* ty=Tensor[(1, 2, 32, 400), int8] */;
  %221 = reshape(%220, newshape=[-1, 32, 400]) /* ty=Tensor[(2, 32, 400), int8] span=model_90/tf.linalg.matmul_6/MatMul;model_90/tf.compat.v1.transpose_31/transpose:0:0 */;
  %222 = transpose(%218, axes=[0, 2, 1]) /* ty=Tensor[(2, 400, 32), int8] span=model_90/tf.linalg.matmul_6/MatMul;model_90/tf.compat.v1.transpose_31/transpose:0:0 */;
  %223 = transpose(%221, axes=[0, 2, 1]) /* ty=Tensor[(2, 400, 32), int8] span=model_90/tf.linalg.matmul_6/MatMul;model_90/tf.compat.v1.transpose_31/transpose:0:0 */;
  %224 = qnn.batch_matmul(%222, %223, 0 /* ty=int32 span=model_90/tf.linalg.matmul_6/MatMul;model_90/tf.compat.v1.transpose_31/transpose:0:0 */, 0 /* ty=int32 span=model_90/tf.linalg.matmul_6/MatMul;model_90/tf.compat.v1.transpose_31/transpose:0:0 */, 1f /* ty=float32 span=model_90/tf.linalg.matmul_6/MatMul;model_90/tf.compat.v1.transpose_31/transpose:0:0 */, 1f /* ty=float32 span=model_90/tf.linalg.matmul_6/MatMul;model_90/tf.compat.v1.transpose_31/transpose:0:0 */, out_dtype="int32", transpose_b=True) /* ty=Tensor[(2, 400, 400), int32] span=model_90/tf.linalg.matmul_6/MatMul;model_90/tf.compat.v1.transpose_31/transpose:0:0 */;
  %225 = reshape(%224, newshape=[1, 2, 400, 400]) /* ty=Tensor[(1, 2, 400, 400), int32] span=model_90/tf.linalg.matmul_6/MatMul;model_90/tf.compat.v1.transpose_31/transpose:0:0 */;
  %226 = qnn.requantize(%225, 1f /* ty=float32 span=model_90/tf.linalg.matmul_6/MatMul;model_90/tf.compat.v1.transpose_31/transpose:0:0 */, 0 /* ty=int32 span=model_90/tf.linalg.matmul_6/MatMul;model_90/tf.compat.v1.transpose_31/transpose:0:0 */, 1f /* ty=float32 span=model_90/tf.linalg.matmul_6/MatMul;model_90/tf.compat.v1.transpose_31/transpose:0:0 */, 0 /* ty=int32 span=model_90/tf.linalg.matmul_6/MatMul;model_90/tf.compat.v1.transpose_31/transpose:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 2, 400, 400), int8] span=model_90/tf.linalg.matmul_6/MatMul;model_90/tf.compat.v1.transpose_31/transpose:0:0 */;
  %227 = qnn.mul(%226, %v_param_51, 1.19237f /* ty=float32 span=model_90/tf.math.multiply_102/Mul:0:0 */, 5 /* ty=int32 span=model_90/tf.math.multiply_102/Mul:0:0 */, 0.000693242f /* ty=float32 span=model_90/tf.math.multiply_102/Mul:0:0 */, -128 /* ty=int32 span=model_90/tf.math.multiply_102/Mul:0:0 */, 0.210783f /* ty=float32 span=model_90/tf.math.multiply_102/Mul:0:0 */, 5 /* ty=int32 span=model_90/tf.math.multiply_102/Mul:0:0 */) /* ty=Tensor[(1, 2, 400, 400), int8] span=model_90/tf.math.multiply_102/Mul:0:0 */;
  %228 = qnn.dequantize(%227, 0.210783f /* ty=float32 span=model_90/tf.nn.softmax_1/wa/model.10/m/m.0/attn/Softmax:0:0 */, 5 /* ty=int32 span=model_90/tf.nn.softmax_1/wa/model.10/m/m.0/attn/Softmax:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 2, 400, 400), float32] span=model_90/tf.nn.softmax_1/wa/model.10/m/m.0/attn/Softmax:0:0 */;
  %229 = nn.softmax(%228) /* ty=Tensor[(1, 2, 400, 400), float32] span=model_90/tf.nn.softmax_1/wa/model.10/m/m.0/attn/Softmax:0:0 */;
  %230 = qnn.quantize(%229, 0.00390625f /* ty=float32 span=model_90/tf.nn.softmax_1/wa/model.10/m/m.0/attn/Softmax:0:0 */, -128 /* ty=int32 span=model_90/tf.nn.softmax_1/wa/model.10/m/m.0/attn/Softmax:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 2, 400, 400), int8] span=model_90/tf.nn.softmax_1/wa/model.10/m/m.0/attn/Softmax:0:0 */;
  %231 = reshape(%215, newshape=[-1, 64, 400]) /* ty=Tensor[(2, 64, 400), int8] span=model_90/tf.linalg.matmul_19/MatMul;model_90/tf.compat.v1.transpose_46/transpose:0:0 */;
  %232 = reshape(%230, newshape=[-1, 400, 400]) /* ty=Tensor[(2, 400, 400), int8] span=model_90/tf.linalg.matmul_19/MatMul;model_90/tf.compat.v1.transpose_46/transpose:0:0 */;
  %233 = qnn.batch_matmul(%231, %232, 0 /* ty=int32 span=model_90/tf.linalg.matmul_19/MatMul;model_90/tf.compat.v1.transpose_46/transpose:0:0 */, 0 /* ty=int32 span=model_90/tf.linalg.matmul_19/MatMul;model_90/tf.compat.v1.transpose_46/transpose:0:0 */, 1f /* ty=float32 span=model_90/tf.linalg.matmul_19/MatMul;model_90/tf.compat.v1.transpose_46/transpose:0:0 */, 1f /* ty=float32 span=model_90/tf.linalg.matmul_19/MatMul;model_90/tf.compat.v1.transpose_46/transpose:0:0 */, out_dtype="int32", transpose_b=True) /* ty=Tensor[(2, 64, 400), int32] span=model_90/tf.linalg.matmul_19/MatMul;model_90/tf.compat.v1.transpose_46/transpose:0:0 */;
  %234 = reshape(%233, newshape=[1, 2, 64, 400]) /* ty=Tensor[(1, 2, 64, 400), int32] span=model_90/tf.linalg.matmul_19/MatMul;model_90/tf.compat.v1.transpose_46/transpose:0:0 */;
  %235 = qnn.requantize(%234, 1f /* ty=float32 span=model_90/tf.linalg.matmul_19/MatMul;model_90/tf.compat.v1.transpose_46/transpose:0:0 */, 0 /* ty=int32 span=model_90/tf.linalg.matmul_19/MatMul;model_90/tf.compat.v1.transpose_46/transpose:0:0 */, 1f /* ty=float32 span=model_90/tf.linalg.matmul_19/MatMul;model_90/tf.compat.v1.transpose_46/transpose:0:0 */, 0 /* ty=int32 span=model_90/tf.linalg.matmul_19/MatMul;model_90/tf.compat.v1.transpose_46/transpose:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 2, 64, 400), int8] span=model_90/tf.linalg.matmul_19/MatMul;model_90/tf.compat.v1.transpose_46/transpose:0:0 */;
  %236 = @tvmgen_default_ethos_n_main_40(%235) /* ty=Tensor[(1, 128, 20, 20), int8] */;
  %237 = %214.1 /* ty=Tensor[(1, 128, 20, 20), int8] */;
  %238 = transpose(%237, axes=[0, 2, 3, 1]) /* ty=Tensor[(1, 20, 20, 128), int8] span=model_90/tf.compat.v1.transpose_44/transpose:0:0 */;
  %239 = qnn.conv2d(%238, %v_param_52, -20 /* ty=int32 span=model_90/tf.math.add_29/Add;model_90/tf.nn.convolution_25/convolution;Const_109:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_29/Add;model_90/tf.nn.convolution_25/convolution;Const_109:0:0 */, 0.0957604f /* ty=float32 span=model_90/tf.math.add_29/Add;model_90/tf.nn.convolution_25/convolution;Const_109:0:0 */, meta[relay.Constant][50] /* ty=Tensor[(128), float32] span=model_90/tf.math.add_29/Add;model_90/tf.nn.convolution_25/convolution;Const_109:0:0 */, padding=[1, 1, 1, 1], groups=128, channels=128, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 20, 20, 128), int32] span=model_90/tf.math.add_29/Add;model_90/tf.nn.convolution_25/convolution;Const_109:0:0 */;
  %240 = nn.bias_add(%239, %v_param_53, axis=3) /* ty=Tensor[(1, 20, 20, 128), int32] span=model_90/tf.math.add_29/Add;model_90/tf.nn.convolution_25/convolution;Const_109:0:0 */;
  %241 = transpose(%236, axes=[0, 2, 3, 1]) /* ty=Tensor[(1, 20, 20, 128), int8] span=model_90/tf.compat.v1.transpose_92/transpose:0:0 */;
  %242 = qnn.requantize(%240, meta[relay.Constant][51] /* ty=Tensor[(128), float32] span=model_90/tf.math.add_29/Add;model_90/tf.nn.convolution_25/convolution;Const_109:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_29/Add;model_90/tf.nn.convolution_25/convolution;Const_109:0:0 */, 0.0610208f /* ty=float32 span=model_90/tf.math.add_29/Add;model_90/tf.nn.convolution_25/convolution;Const_109:0:0 */, 26 /* ty=int32 span=model_90/tf.math.add_29/Add;model_90/tf.nn.convolution_25/convolution;Const_109:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 128), int8] span=model_90/tf.math.add_29/Add;model_90/tf.nn.convolution_25/convolution;Const_109:0:0 */;
  %243 = qnn.add(%241, %242, 0.0717384f /* ty=float32 span=model_90/tf.math.add_31/Add:0:0 */, -38 /* ty=int32 span=model_90/tf.math.add_31/Add:0:0 */, 0.0610208f /* ty=float32 span=model_90/tf.math.add_31/Add:0:0 */, 26 /* ty=int32 span=model_90/tf.math.add_31/Add:0:0 */, 0.0309167f /* ty=float32 span=model_90/tf.math.add_31/Add:0:0 */, 7 /* ty=int32 span=model_90/tf.math.add_31/Add:0:0 */) /* ty=Tensor[(1, 20, 20, 128), int8] span=model_90/tf.math.add_31/Add:0:0 */;
  %244 = qnn.conv2d(%243, %v_param_54, 7 /* ty=int32 span=model_90/tf.math.add_32/Add;model_90/tf.nn.convolution_26/convolution;Const_107:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_32/Add;model_90/tf.nn.convolution_26/convolution;Const_107:0:0 */, 0.0309167f /* ty=float32 span=model_90/tf.math.add_32/Add;model_90/tf.nn.convolution_26/convolution;Const_107:0:0 */, meta[relay.Constant][52] /* ty=Tensor[(128), float32] span=model_90/tf.math.add_32/Add;model_90/tf.nn.convolution_26/convolution;Const_107:0:0 */, padding=[0, 0, 0, 0], channels=128, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 20, 20, 128), int32] span=model_90/tf.math.add_32/Add;model_90/tf.nn.convolution_26/convolution;Const_107:0:0 */;
  %245 = nn.bias_add(%244, %v_param_55, axis=3) /* ty=Tensor[(1, 20, 20, 128), int32] span=model_90/tf.math.add_32/Add;model_90/tf.nn.convolution_26/convolution;Const_107:0:0 */;
  %246 = qnn.requantize(%245, meta[relay.Constant][53] /* ty=Tensor[(128), float32] span=model_90/tf.math.add_32/Add;model_90/tf.nn.convolution_26/convolution;Const_107:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_32/Add;model_90/tf.nn.convolution_26/convolution;Const_107:0:0 */, 0.0917026f /* ty=float32 span=model_90/tf.math.add_32/Add;model_90/tf.nn.convolution_26/convolution;Const_107:0:0 */, -48 /* ty=int32 span=model_90/tf.math.add_32/Add;model_90/tf.nn.convolution_26/convolution;Const_107:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 128), int8] span=model_90/tf.math.add_32/Add;model_90/tf.nn.convolution_26/convolution;Const_107:0:0 */;
  %247 = qnn.add(%207, %246, 0.0930227f /* ty=float32 span=model_90/tf.math.add_34/Add:0:0 */, -51 /* ty=int32 span=model_90/tf.math.add_34/Add:0:0 */, 0.0917026f /* ty=float32 span=model_90/tf.math.add_34/Add:0:0 */, -48 /* ty=int32 span=model_90/tf.math.add_34/Add:0:0 */, 0.0824492f /* ty=float32 span=model_90/tf.math.add_34/Add:0:0 */, -67 /* ty=int32 span=model_90/tf.math.add_34/Add:0:0 */) /* ty=Tensor[(1, 20, 20, 128), int8] span=model_90/tf.math.add_34/Add:0:0 */;
  %248 = qnn.conv2d(%247, %v_param_56, -67 /* ty=int32 span=model_90/tf.math.add_35/Add;model_90/tf.nn.convolution_27/convolution;Const_105:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_35/Add;model_90/tf.nn.convolution_27/convolution;Const_105:0:0 */, 0.0824492f /* ty=float32 span=model_90/tf.math.add_35/Add;model_90/tf.nn.convolution_27/convolution;Const_105:0:0 */, meta[relay.Constant][54] /* ty=Tensor[(256), float32] span=model_90/tf.math.add_35/Add;model_90/tf.nn.convolution_27/convolution;Const_105:0:0 */, padding=[0, 0, 0, 0], channels=256, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 20, 20, 256), int32] span=model_90/tf.math.add_35/Add;model_90/tf.nn.convolution_27/convolution;Const_105:0:0 */;
  %249 = nn.bias_add(%248, %v_param_57, axis=3) /* ty=Tensor[(1, 20, 20, 256), int32] span=model_90/tf.math.add_35/Add;model_90/tf.nn.convolution_27/convolution;Const_105:0:0 */;
  %250 = qnn.requantize(%249, meta[relay.Constant][55] /* ty=Tensor[(256), float32] span=model_90/tf.math.add_35/Add;model_90/tf.nn.convolution_27/convolution;Const_105:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_35/Add;model_90/tf.nn.convolution_27/convolution;Const_105:0:0 */, 0.0434229f /* ty=float32 span=model_90/tf.math.add_35/Add;model_90/tf.nn.convolution_27/convolution;Const_105:0:0 */, 31 /* ty=int32 span=model_90/tf.math.add_35/Add;model_90/tf.nn.convolution_27/convolution;Const_105:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 256), int8] span=model_90/tf.math.add_35/Add;model_90/tf.nn.convolution_27/convolution;Const_105:0:0 */;
  %251 = qnn.dequantize(%250, 0.0434229f /* ty=float32 span=model_90/tf.math.sigmoid_24/Sigmoid:0:0 */, 31 /* ty=int32 span=model_90/tf.math.sigmoid_24/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 20, 20, 256), float32] span=model_90/tf.math.sigmoid_24/Sigmoid:0:0 */;
  %252 = sigmoid(%251) /* ty=Tensor[(1, 20, 20, 256), float32] span=model_90/tf.math.sigmoid_24/Sigmoid:0:0 */;
  %253 = qnn.quantize(%252, 0.00390625f /* ty=float32 span=model_90/tf.math.sigmoid_24/Sigmoid:0:0 */, -128 /* ty=int32 span=model_90/tf.math.sigmoid_24/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 256), int8] span=model_90/tf.math.sigmoid_24/Sigmoid:0:0 */;
  %254 = qnn.mul(%250, %253, 0.0434229f /* ty=float32 span=model_90/tf.math.multiply_110/Mul:0:0 */, 31 /* ty=int32 span=model_90/tf.math.multiply_110/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_90/tf.math.multiply_110/Mul:0:0 */, -128 /* ty=int32 span=model_90/tf.math.multiply_110/Mul:0:0 */, 0.0172021f /* ty=float32 span=model_90/tf.math.multiply_110/Mul:0:0 */, -112 /* ty=int32 span=model_90/tf.math.multiply_110/Mul:0:0 */) /* ty=Tensor[(1, 20, 20, 256), int8] span=model_90/tf.math.multiply_110/Mul:0:0 */;
  %255 = qnn.conv2d(%254, %v_param_58, -112 /* ty=int32 span=model_90/tf.math.add_36/Add;model_90/tf.nn.convolution_28/convolution;Const_103:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_36/Add;model_90/tf.nn.convolution_28/convolution;Const_103:0:0 */, 0.0172021f /* ty=float32 span=model_90/tf.math.add_36/Add;model_90/tf.nn.convolution_28/convolution;Const_103:0:0 */, meta[relay.Constant][56] /* ty=Tensor[(128), float32] span=model_90/tf.math.add_36/Add;model_90/tf.nn.convolution_28/convolution;Const_103:0:0 */, padding=[0, 0, 0, 0], channels=128, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 20, 20, 128), int32] span=model_90/tf.math.add_36/Add;model_90/tf.nn.convolution_28/convolution;Const_103:0:0 */;
  %256 = nn.bias_add(%255, %v_param_59, axis=3) /* ty=Tensor[(1, 20, 20, 128), int32] span=model_90/tf.math.add_36/Add;model_90/tf.nn.convolution_28/convolution;Const_103:0:0 */;
  %257 = qnn.requantize(%256, meta[relay.Constant][57] /* ty=Tensor[(128), float32] span=model_90/tf.math.add_36/Add;model_90/tf.nn.convolution_28/convolution;Const_103:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_36/Add;model_90/tf.nn.convolution_28/convolution;Const_103:0:0 */, 0.0961465f /* ty=float32 span=model_90/tf.math.add_36/Add;model_90/tf.nn.convolution_28/convolution;Const_103:0:0 */, -45 /* ty=int32 span=model_90/tf.math.add_36/Add;model_90/tf.nn.convolution_28/convolution;Const_103:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 128), int8] span=model_90/tf.math.add_36/Add;model_90/tf.nn.convolution_28/convolution;Const_103:0:0 */;
  %258 = @tvmgen_default_ethos_n_main_34(%205) /* ty=Tensor[(1, 20, 20, 128), int8] */;
  %259 = qnn.add(%247, %257, 0.0824492f /* ty=float32 span=model_90/tf.math.add_38/Add:0:0 */, -67 /* ty=int32 span=model_90/tf.math.add_38/Add:0:0 */, 0.0961465f /* ty=float32 span=model_90/tf.math.add_38/Add:0:0 */, -45 /* ty=int32 span=model_90/tf.math.add_38/Add:0:0 */, 0.0930227f /* ty=float32 span=model_90/tf.math.add_38/Add:0:0 */, -51 /* ty=int32 span=model_90/tf.math.add_38/Add:0:0 */) /* ty=Tensor[(1, 20, 20, 128), int8] span=model_90/tf.math.add_38/Add:0:0 */;
  %260 = (%258, %259) /* ty=(Tensor[(1, 20, 20, 128), int8], Tensor[(1, 20, 20, 128), int8]) span=model_90/tf.concat_5/concat:0:0 */;
  %261 = @tvmgen_default_ethos_n_main_41(%260) /* ty=Tensor[(1, 20, 20, 256), int8] */;
  %262 = qnn.conv2d(%261, %v_param_60, -51 /* ty=int32 span=model_90/tf.math.add_39/Add;model_90/tf.nn.convolution_29/convolution;Const_101:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_39/Add;model_90/tf.nn.convolution_29/convolution;Const_101:0:0 */, 0.0930227f /* ty=float32 span=model_90/tf.math.add_39/Add;model_90/tf.nn.convolution_29/convolution;Const_101:0:0 */, meta[relay.Constant][58] /* ty=Tensor[(256), float32] span=model_90/tf.math.add_39/Add;model_90/tf.nn.convolution_29/convolution;Const_101:0:0 */, padding=[0, 0, 0, 0], channels=256, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 20, 20, 256), int32] span=model_90/tf.math.add_39/Add;model_90/tf.nn.convolution_29/convolution;Const_101:0:0 */;
  %263 = nn.bias_add(%262, %v_param_61, axis=3) /* ty=Tensor[(1, 20, 20, 256), int32] span=model_90/tf.math.add_39/Add;model_90/tf.nn.convolution_29/convolution;Const_101:0:0 */;
  %264 = qnn.requantize(%263, meta[relay.Constant][59] /* ty=Tensor[(256), float32] span=model_90/tf.math.add_39/Add;model_90/tf.nn.convolution_29/convolution;Const_101:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_39/Add;model_90/tf.nn.convolution_29/convolution;Const_101:0:0 */, 0.0571363f /* ty=float32 span=model_90/tf.math.add_39/Add;model_90/tf.nn.convolution_29/convolution;Const_101:0:0 */, 48 /* ty=int32 span=model_90/tf.math.add_39/Add;model_90/tf.nn.convolution_29/convolution;Const_101:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 256), int8] span=model_90/tf.math.add_39/Add;model_90/tf.nn.convolution_29/convolution;Const_101:0:0 */;
  %265 = qnn.dequantize(%264, 0.0571363f /* ty=float32 span=model_90/tf.math.sigmoid_25/Sigmoid:0:0 */, 48 /* ty=int32 span=model_90/tf.math.sigmoid_25/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 20, 20, 256), float32] span=model_90/tf.math.sigmoid_25/Sigmoid:0:0 */;
  %266 = sigmoid(%265) /* ty=Tensor[(1, 20, 20, 256), float32] span=model_90/tf.math.sigmoid_25/Sigmoid:0:0 */;
  %267 = qnn.quantize(%266, 0.00390625f /* ty=float32 span=model_90/tf.math.sigmoid_25/Sigmoid:0:0 */, -128 /* ty=int32 span=model_90/tf.math.sigmoid_25/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 256), int8] span=model_90/tf.math.sigmoid_25/Sigmoid:0:0 */;
  %268 = qnn.mul(%264, %267, 0.0571363f /* ty=float32 span=model_90/tf.math.multiply_116/Mul:0:0 */, 48 /* ty=int32 span=model_90/tf.math.multiply_116/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_90/tf.math.multiply_116/Mul:0:0 */, -128 /* ty=int32 span=model_90/tf.math.multiply_116/Mul:0:0 */, 0.0334442f /* ty=float32 span=model_90/tf.math.multiply_116/Mul:0:0 */, -120 /* ty=int32 span=model_90/tf.math.multiply_116/Mul:0:0 */) /* ty=Tensor[(1, 20, 20, 256), int8] span=model_90/tf.math.multiply_116/Mul:0:0 */;
  %269 = qnn.requantize(%268, 0.0334442f /* ty=float32 span=model_90/tf.math.multiply_116/Mul1:0:0 */, -120 /* ty=int32 span=model_90/tf.math.multiply_116/Mul1:0:0 */, 0.019251f /* ty=float32 span=model_90/tf.math.multiply_116/Mul1:0:0 */, -114 /* ty=int32 span=model_90/tf.math.multiply_116/Mul1:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 256), int8] span=model_90/tf.math.multiply_116/Mul1:0:0 */;
  %270 = image.resize2d(%269, size=[40, 40], roi=[0f, 0f, 0f, 0f], layout="NHWC", method="nearest_neighbor", rounding_method="round_prefer_ceil") /* ty=Tensor[(1, 40, 40, 256), int8] span=model_90/tf.image.resize/resize/ResizeNearestNeighbor:0:0 */;
  %271 = (%270, %134) /* ty=(Tensor[(1, 40, 40, 256), int8], Tensor[(1, 40, 40, 128), int8]) span=model_90/tf.concat_6/concat:0:0 */;
  %272 = @tvmgen_default_ethos_n_main_46(%271) /* ty=Tensor[(1, 40, 40, 384), int8] */;
  %273 = qnn.conv2d(%272, %v_param_62, -114 /* ty=int32 span=model_90/tf.math.add_40/Add;model_90/tf.nn.convolution_30/convolution;Const_99:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_40/Add;model_90/tf.nn.convolution_30/convolution;Const_99:0:0 */, 0.019251f /* ty=float32 span=model_90/tf.math.add_40/Add;model_90/tf.nn.convolution_30/convolution;Const_99:0:0 */, meta[relay.Constant][60] /* ty=Tensor[(128), float32] span=model_90/tf.math.add_40/Add;model_90/tf.nn.convolution_30/convolution;Const_99:0:0 */, padding=[0, 0, 0, 0], channels=128, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 40, 40, 128), int32] span=model_90/tf.math.add_40/Add;model_90/tf.nn.convolution_30/convolution;Const_99:0:0 */;
  %274 = nn.bias_add(%273, %v_param_63, axis=3) /* ty=Tensor[(1, 40, 40, 128), int32] span=model_90/tf.math.add_40/Add;model_90/tf.nn.convolution_30/convolution;Const_99:0:0 */;
  %275 = qnn.requantize(%274, meta[relay.Constant][61] /* ty=Tensor[(128), float32] span=model_90/tf.math.add_40/Add;model_90/tf.nn.convolution_30/convolution;Const_99:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_40/Add;model_90/tf.nn.convolution_30/convolution;Const_99:0:0 */, 0.0440194f /* ty=float32 span=model_90/tf.math.add_40/Add;model_90/tf.nn.convolution_30/convolution;Const_99:0:0 */, 30 /* ty=int32 span=model_90/tf.math.add_40/Add;model_90/tf.nn.convolution_30/convolution;Const_99:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 128), int8] span=model_90/tf.math.add_40/Add;model_90/tf.nn.convolution_30/convolution;Const_99:0:0 */;
  %276 = qnn.dequantize(%275, 0.0440194f /* ty=float32 span=model_90/tf.math.sigmoid_26/Sigmoid:0:0 */, 30 /* ty=int32 span=model_90/tf.math.sigmoid_26/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 40, 40, 128), float32] span=model_90/tf.math.sigmoid_26/Sigmoid:0:0 */;
  %277 = sigmoid(%276) /* ty=Tensor[(1, 40, 40, 128), float32] span=model_90/tf.math.sigmoid_26/Sigmoid:0:0 */;
  %278 = qnn.quantize(%277, 0.00390625f /* ty=float32 span=model_90/tf.math.sigmoid_26/Sigmoid:0:0 */, -128 /* ty=int32 span=model_90/tf.math.sigmoid_26/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 128), int8] span=model_90/tf.math.sigmoid_26/Sigmoid:0:0 */;
  %279 = qnn.mul(%275, %278, 0.0440194f /* ty=float32 span=model_90/tf.math.multiply_120/Mul:0:0 */, 30 /* ty=int32 span=model_90/tf.math.multiply_120/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_90/tf.math.multiply_120/Mul:0:0 */, -128 /* ty=int32 span=model_90/tf.math.multiply_120/Mul:0:0 */, 0.0226269f /* ty=float32 span=model_90/tf.math.multiply_120/Mul:0:0 */, -116 /* ty=int32 span=model_90/tf.math.multiply_120/Mul:0:0 */) /* ty=Tensor[(1, 40, 40, 128), int8] span=model_90/tf.math.multiply_120/Mul:0:0 */;
  %280 = strided_slice(%279, begin=[0, 0, 0, 0], end=[1, 40, 40, 64], strides=[1, 1, 1, 1], axes=None) /* ty=Tensor[(1, 40, 40, 64), int8] span=model_90/tf.strided_slice_13/StridedSlice:0:0 */;
  %281 = strided_slice(%279, begin=[0, 0, 0, 64], end=[1, 40, 40, 128], strides=[1, 1, 1, 1], axes=None) /* ty=Tensor[(1, 40, 40, 64), int8] span=model_90/tf.strided_slice_14/StridedSlice:0:0 */;
  %282 = @tvmgen_default_ethos_n_main_52(%281) /* ty=Tensor[(1, 40, 40, 64), int8] */;
  %283 = qnn.conv2d(%282, %v_param_64, -116 /* ty=int32 span=model_90/tf.math.add_41/Add;model_90/tf.nn.convolution_31/convolution;Const_95:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_41/Add;model_90/tf.nn.convolution_31/convolution;Const_95:0:0 */, 0.0226269f /* ty=float32 span=model_90/tf.math.add_41/Add;model_90/tf.nn.convolution_31/convolution;Const_95:0:0 */, meta[relay.Constant][62] /* ty=Tensor[(64), float32] span=model_90/tf.math.add_41/Add;model_90/tf.nn.convolution_31/convolution;Const_95:0:0 */, padding=[1, 1, 1, 1], channels=64, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 40, 40, 64), int32] span=model_90/tf.math.add_41/Add;model_90/tf.nn.convolution_31/convolution;Const_95:0:0 */;
  %284 = nn.bias_add(%283, %v_param_65, axis=3) /* ty=Tensor[(1, 40, 40, 64), int32] span=model_90/tf.math.add_41/Add;model_90/tf.nn.convolution_31/convolution;Const_95:0:0 */;
  %285 = qnn.requantize(%284, meta[relay.Constant][63] /* ty=Tensor[(64), float32] span=model_90/tf.math.add_41/Add;model_90/tf.nn.convolution_31/convolution;Const_95:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_41/Add;model_90/tf.nn.convolution_31/convolution;Const_95:0:0 */, 0.0397803f /* ty=float32 span=model_90/tf.math.add_41/Add;model_90/tf.nn.convolution_31/convolution;Const_95:0:0 */, 4 /* ty=int32 span=model_90/tf.math.add_41/Add;model_90/tf.nn.convolution_31/convolution;Const_95:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 64), int8] span=model_90/tf.math.add_41/Add;model_90/tf.nn.convolution_31/convolution;Const_95:0:0 */;
  %286 = qnn.dequantize(%285, 0.0397803f /* ty=float32 span=model_90/tf.math.sigmoid_27/Sigmoid:0:0 */, 4 /* ty=int32 span=model_90/tf.math.sigmoid_27/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 40, 40, 64), float32] span=model_90/tf.math.sigmoid_27/Sigmoid:0:0 */;
  %287 = sigmoid(%286) /* ty=Tensor[(1, 40, 40, 64), float32] span=model_90/tf.math.sigmoid_27/Sigmoid:0:0 */;
  %288 = qnn.quantize(%287, 0.00390625f /* ty=float32 span=model_90/tf.math.sigmoid_27/Sigmoid:0:0 */, -128 /* ty=int32 span=model_90/tf.math.sigmoid_27/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 64), int8] span=model_90/tf.math.sigmoid_27/Sigmoid:0:0 */;
  %289 = qnn.mul(%285, %288, 0.0397803f /* ty=float32 span=model_90/tf.math.multiply_124/Mul:0:0 */, 4 /* ty=int32 span=model_90/tf.math.multiply_124/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_90/tf.math.multiply_124/Mul:0:0 */, -128 /* ty=int32 span=model_90/tf.math.multiply_124/Mul:0:0 */, 0.0201317f /* ty=float32 span=model_90/tf.math.multiply_124/Mul:0:0 */, -114 /* ty=int32 span=model_90/tf.math.multiply_124/Mul:0:0 */) /* ty=Tensor[(1, 40, 40, 64), int8] span=model_90/tf.math.multiply_124/Mul:0:0 */;
  %290 = qnn.conv2d(%289, %v_param_66, -114 /* ty=int32 span=model_90/tf.math.add_42/Add;model_90/tf.nn.convolution_32/convolution;Const_93:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_42/Add;model_90/tf.nn.convolution_32/convolution;Const_93:0:0 */, 0.0201317f /* ty=float32 span=model_90/tf.math.add_42/Add;model_90/tf.nn.convolution_32/convolution;Const_93:0:0 */, meta[relay.Constant][64] /* ty=Tensor[(64), float32] span=model_90/tf.math.add_42/Add;model_90/tf.nn.convolution_32/convolution;Const_93:0:0 */, padding=[1, 1, 1, 1], channels=64, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 40, 40, 64), int32] span=model_90/tf.math.add_42/Add;model_90/tf.nn.convolution_32/convolution;Const_93:0:0 */;
  %291 = nn.bias_add(%290, %v_param_67, axis=3) /* ty=Tensor[(1, 40, 40, 64), int32] span=model_90/tf.math.add_42/Add;model_90/tf.nn.convolution_32/convolution;Const_93:0:0 */;
  %292 = qnn.requantize(%291, meta[relay.Constant][65] /* ty=Tensor[(64), float32] span=model_90/tf.math.add_42/Add;model_90/tf.nn.convolution_32/convolution;Const_93:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_42/Add;model_90/tf.nn.convolution_32/convolution;Const_93:0:0 */, 0.0480403f /* ty=float32 span=model_90/tf.math.add_42/Add;model_90/tf.nn.convolution_32/convolution;Const_93:0:0 */, 12 /* ty=int32 span=model_90/tf.math.add_42/Add;model_90/tf.nn.convolution_32/convolution;Const_93:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 64), int8] span=model_90/tf.math.add_42/Add;model_90/tf.nn.convolution_32/convolution;Const_93:0:0 */;
  %293 = qnn.dequantize(%292, 0.0480403f /* ty=float32 span=model_90/tf.math.sigmoid_28/Sigmoid:0:0 */, 12 /* ty=int32 span=model_90/tf.math.sigmoid_28/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 40, 40, 64), float32] span=model_90/tf.math.sigmoid_28/Sigmoid:0:0 */;
  %294 = sigmoid(%293) /* ty=Tensor[(1, 40, 40, 64), float32] span=model_90/tf.math.sigmoid_28/Sigmoid:0:0 */;
  %295 = qnn.quantize(%294, 0.00390625f /* ty=float32 span=model_90/tf.math.sigmoid_28/Sigmoid:0:0 */, -128 /* ty=int32 span=model_90/tf.math.sigmoid_28/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 64), int8] span=model_90/tf.math.sigmoid_28/Sigmoid:0:0 */;
  %296 = @tvmgen_default_ethos_n_main_51(%280) /* ty=Tensor[(1, 40, 40, 64), int8] */;
  %297 = qnn.mul(%292, %295, 0.0480403f /* ty=float32 span=model_90/tf.math.multiply_128/Mul:0:0 */, 12 /* ty=int32 span=model_90/tf.math.multiply_128/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_90/tf.math.multiply_128/Mul:0:0 */, -128 /* ty=int32 span=model_90/tf.math.multiply_128/Mul:0:0 */, 0.0226269f /* ty=float32 span=model_90/tf.math.multiply_128/Mul:0:0 */, -116 /* ty=int32 span=model_90/tf.math.multiply_128/Mul:0:0 */) /* ty=Tensor[(1, 40, 40, 64), int8] span=model_90/tf.math.multiply_128/Mul:0:0 */;
  %298 = (%296, %282, %297) /* ty=(Tensor[(1, 40, 40, 64), int8], Tensor[(1, 40, 40, 64), int8], Tensor[(1, 40, 40, 64), int8]) span=model_90/tf.concat_7/concat:0:0 */;
  %299 = @tvmgen_default_ethos_n_main_53(%298) /* ty=Tensor[(1, 40, 40, 192), int8] */;
  %300 = qnn.conv2d(%299, %v_param_68, -116 /* ty=int32 span=model_90/tf.math.add_43/Add;model_90/tf.nn.convolution_33/convolution;Const_89:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_43/Add;model_90/tf.nn.convolution_33/convolution;Const_89:0:0 */, 0.0226269f /* ty=float32 span=model_90/tf.math.add_43/Add;model_90/tf.nn.convolution_33/convolution;Const_89:0:0 */, meta[relay.Constant][66] /* ty=Tensor[(128), float32] span=model_90/tf.math.add_43/Add;model_90/tf.nn.convolution_33/convolution;Const_89:0:0 */, padding=[0, 0, 0, 0], channels=128, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 40, 40, 128), int32] span=model_90/tf.math.add_43/Add;model_90/tf.nn.convolution_33/convolution;Const_89:0:0 */;
  %301 = nn.bias_add(%300, %v_param_69, axis=3) /* ty=Tensor[(1, 40, 40, 128), int32] span=model_90/tf.math.add_43/Add;model_90/tf.nn.convolution_33/convolution;Const_89:0:0 */;
  %302 = qnn.requantize(%301, meta[relay.Constant][67] /* ty=Tensor[(128), float32] span=model_90/tf.math.add_43/Add;model_90/tf.nn.convolution_33/convolution;Const_89:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_43/Add;model_90/tf.nn.convolution_33/convolution;Const_89:0:0 */, 0.0445474f /* ty=float32 span=model_90/tf.math.add_43/Add;model_90/tf.nn.convolution_33/convolution;Const_89:0:0 */, 38 /* ty=int32 span=model_90/tf.math.add_43/Add;model_90/tf.nn.convolution_33/convolution;Const_89:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 128), int8] span=model_90/tf.math.add_43/Add;model_90/tf.nn.convolution_33/convolution;Const_89:0:0 */;
  %303 = qnn.dequantize(%302, 0.0445474f /* ty=float32 span=model_90/tf.math.sigmoid_29/Sigmoid:0:0 */, 38 /* ty=int32 span=model_90/tf.math.sigmoid_29/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 40, 40, 128), float32] span=model_90/tf.math.sigmoid_29/Sigmoid:0:0 */;
  %304 = sigmoid(%303) /* ty=Tensor[(1, 40, 40, 128), float32] span=model_90/tf.math.sigmoid_29/Sigmoid:0:0 */;
  %305 = qnn.quantize(%304, 0.00390625f /* ty=float32 span=model_90/tf.math.sigmoid_29/Sigmoid:0:0 */, -128 /* ty=int32 span=model_90/tf.math.sigmoid_29/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 128), int8] span=model_90/tf.math.sigmoid_29/Sigmoid:0:0 */;
  %306 = qnn.mul(%302, %305, 0.0445474f /* ty=float32 span=model_90/tf.math.multiply_132/Mul:0:0 */, 38 /* ty=int32 span=model_90/tf.math.multiply_132/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_90/tf.math.multiply_132/Mul:0:0 */, -128 /* ty=int32 span=model_90/tf.math.multiply_132/Mul:0:0 */, 0.0200745f /* ty=float32 span=model_90/tf.math.multiply_132/Mul:0:0 */, -114 /* ty=int32 span=model_90/tf.math.multiply_132/Mul:0:0 */) /* ty=Tensor[(1, 40, 40, 128), int8] span=model_90/tf.math.multiply_132/Mul:0:0 */;
  %307 = qnn.requantize(%306, 0.0200745f /* ty=float32 span=model_90/tf.math.multiply_132/Mul1:0:0 */, -114 /* ty=int32 span=model_90/tf.math.multiply_132/Mul1:0:0 */, 0.0299939f /* ty=float32 span=model_90/tf.math.multiply_132/Mul1:0:0 */, -119 /* ty=int32 span=model_90/tf.math.multiply_132/Mul1:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 128), int8] span=model_90/tf.math.multiply_132/Mul1:0:0 */;
  %308 = image.resize2d(%307, size=[80, 80], roi=[0f, 0f, 0f, 0f], layout="NHWC", method="nearest_neighbor", rounding_method="round_prefer_ceil") /* ty=Tensor[(1, 80, 80, 128), int8] span=model_90/tf.image.resize_1/resize/ResizeNearestNeighbor:0:0 */;
  %309 = (%308, %91) /* ty=(Tensor[(1, 80, 80, 128), int8], Tensor[(1, 80, 80, 128), int8]) span=model_90/tf.concat_8/concat:0:0 */;
  %310 = @tvmgen_default_ethos_n_main_58(%309) /* ty=Tensor[(1, 80, 80, 256), int8] */;
  %311 = qnn.conv2d(%310, %v_param_70, -119 /* ty=int32 span=model_90/tf.math.add_44/Add;model_90/tf.nn.convolution_34/convolution;Const_87:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_44/Add;model_90/tf.nn.convolution_34/convolution;Const_87:0:0 */, 0.0299939f /* ty=float32 span=model_90/tf.math.add_44/Add;model_90/tf.nn.convolution_34/convolution;Const_87:0:0 */, meta[relay.Constant][68] /* ty=Tensor[(64), float32] span=model_90/tf.math.add_44/Add;model_90/tf.nn.convolution_34/convolution;Const_87:0:0 */, padding=[0, 0, 0, 0], channels=64, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 80, 80, 64), int32] span=model_90/tf.math.add_44/Add;model_90/tf.nn.convolution_34/convolution;Const_87:0:0 */;
  %312 = nn.bias_add(%311, %v_param_71, axis=3) /* ty=Tensor[(1, 80, 80, 64), int32] span=model_90/tf.math.add_44/Add;model_90/tf.nn.convolution_34/convolution;Const_87:0:0 */;
  %313 = qnn.requantize(%312, meta[relay.Constant][69] /* ty=Tensor[(64), float32] span=model_90/tf.math.add_44/Add;model_90/tf.nn.convolution_34/convolution;Const_87:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_44/Add;model_90/tf.nn.convolution_34/convolution;Const_87:0:0 */, 0.0397207f /* ty=float32 span=model_90/tf.math.add_44/Add;model_90/tf.nn.convolution_34/convolution;Const_87:0:0 */, 45 /* ty=int32 span=model_90/tf.math.add_44/Add;model_90/tf.nn.convolution_34/convolution;Const_87:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 80, 80, 64), int8] span=model_90/tf.math.add_44/Add;model_90/tf.nn.convolution_34/convolution;Const_87:0:0 */;
  %314 = qnn.dequantize(%313, 0.0397207f /* ty=float32 span=model_90/tf.math.sigmoid_30/Sigmoid:0:0 */, 45 /* ty=int32 span=model_90/tf.math.sigmoid_30/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 80, 80, 64), float32] span=model_90/tf.math.sigmoid_30/Sigmoid:0:0 */;
  %315 = sigmoid(%314) /* ty=Tensor[(1, 80, 80, 64), float32] span=model_90/tf.math.sigmoid_30/Sigmoid:0:0 */;
  %316 = qnn.quantize(%315, 0.00390625f /* ty=float32 span=model_90/tf.math.sigmoid_30/Sigmoid:0:0 */, -128 /* ty=int32 span=model_90/tf.math.sigmoid_30/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 80, 80, 64), int8] span=model_90/tf.math.sigmoid_30/Sigmoid:0:0 */;
  %317 = qnn.mul(%313, %316, 0.0397207f /* ty=float32 span=model_90/tf.math.multiply_136/Mul:0:0 */, 45 /* ty=int32 span=model_90/tf.math.multiply_136/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_90/tf.math.multiply_136/Mul:0:0 */, -128 /* ty=int32 span=model_90/tf.math.multiply_136/Mul:0:0 */, 0.0275721f /* ty=float32 span=model_90/tf.math.multiply_136/Mul:0:0 */, -118 /* ty=int32 span=model_90/tf.math.multiply_136/Mul:0:0 */) /* ty=Tensor[(1, 80, 80, 64), int8] span=model_90/tf.math.multiply_136/Mul:0:0 */;
  %318 = strided_slice(%317, begin=[0, 0, 0, 0], end=[1, 80, 80, 32], strides=[1, 1, 1, 1], axes=None) /* ty=Tensor[(1, 80, 80, 32), int8] span=model_90/tf.strided_slice_15/StridedSlice:0:0 */;
  %319 = strided_slice(%317, begin=[0, 0, 0, 32], end=[1, 80, 80, 64], strides=[1, 1, 1, 1], axes=None) /* ty=Tensor[(1, 80, 80, 32), int8] span=model_90/tf.strided_slice_16/StridedSlice:0:0 */;
  %320 = @tvmgen_default_ethos_n_main_64(%319) /* ty=Tensor[(1, 80, 80, 32), int8] */;
  %321 = qnn.conv2d(%320, %v_param_72, -118 /* ty=int32 span=model_90/tf.math.add_45/Add;model_90/tf.nn.convolution_35/convolution;Const_83:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_45/Add;model_90/tf.nn.convolution_35/convolution;Const_83:0:0 */, 0.0275721f /* ty=float32 span=model_90/tf.math.add_45/Add;model_90/tf.nn.convolution_35/convolution;Const_83:0:0 */, meta[relay.Constant][70] /* ty=Tensor[(32), float32] span=model_90/tf.math.add_45/Add;model_90/tf.nn.convolution_35/convolution;Const_83:0:0 */, padding=[1, 1, 1, 1], channels=32, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 80, 80, 32), int32] span=model_90/tf.math.add_45/Add;model_90/tf.nn.convolution_35/convolution;Const_83:0:0 */;
  %322 = nn.bias_add(%321, %v_param_73, axis=3) /* ty=Tensor[(1, 80, 80, 32), int32] span=model_90/tf.math.add_45/Add;model_90/tf.nn.convolution_35/convolution;Const_83:0:0 */;
  %323 = qnn.requantize(%322, meta[relay.Constant][71] /* ty=Tensor[(32), float32] span=model_90/tf.math.add_45/Add;model_90/tf.nn.convolution_35/convolution;Const_83:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_45/Add;model_90/tf.nn.convolution_35/convolution;Const_83:0:0 */, 0.0476508f /* ty=float32 span=model_90/tf.math.add_45/Add;model_90/tf.nn.convolution_35/convolution;Const_83:0:0 */, -16 /* ty=int32 span=model_90/tf.math.add_45/Add;model_90/tf.nn.convolution_35/convolution;Const_83:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 80, 80, 32), int8] span=model_90/tf.math.add_45/Add;model_90/tf.nn.convolution_35/convolution;Const_83:0:0 */;
  %324 = qnn.dequantize(%323, 0.0476508f /* ty=float32 span=model_90/tf.math.sigmoid_31/Sigmoid:0:0 */, -16 /* ty=int32 span=model_90/tf.math.sigmoid_31/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 80, 80, 32), float32] span=model_90/tf.math.sigmoid_31/Sigmoid:0:0 */;
  %325 = sigmoid(%324) /* ty=Tensor[(1, 80, 80, 32), float32] span=model_90/tf.math.sigmoid_31/Sigmoid:0:0 */;
  %326 = qnn.quantize(%325, 0.00390625f /* ty=float32 span=model_90/tf.math.sigmoid_31/Sigmoid:0:0 */, -128 /* ty=int32 span=model_90/tf.math.sigmoid_31/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 80, 80, 32), int8] span=model_90/tf.math.sigmoid_31/Sigmoid:0:0 */;
  %327 = qnn.mul(%323, %326, 0.0476508f /* ty=float32 span=model_90/tf.math.multiply_140/Mul:0:0 */, -16 /* ty=int32 span=model_90/tf.math.multiply_140/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_90/tf.math.multiply_140/Mul:0:0 */, -128 /* ty=int32 span=model_90/tf.math.multiply_140/Mul:0:0 */, 0.0278595f /* ty=float32 span=model_90/tf.math.multiply_140/Mul:0:0 */, -118 /* ty=int32 span=model_90/tf.math.multiply_140/Mul:0:0 */) /* ty=Tensor[(1, 80, 80, 32), int8] span=model_90/tf.math.multiply_140/Mul:0:0 */;
  %328 = qnn.conv2d(%327, %v_param_74, -118 /* ty=int32 span=model_90/tf.math.add_46/Add;model_90/tf.nn.convolution_36/convolution;Const_81:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_46/Add;model_90/tf.nn.convolution_36/convolution;Const_81:0:0 */, 0.0278595f /* ty=float32 span=model_90/tf.math.add_46/Add;model_90/tf.nn.convolution_36/convolution;Const_81:0:0 */, meta[relay.Constant][72] /* ty=Tensor[(32), float32] span=model_90/tf.math.add_46/Add;model_90/tf.nn.convolution_36/convolution;Const_81:0:0 */, padding=[1, 1, 1, 1], channels=32, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 80, 80, 32), int32] span=model_90/tf.math.add_46/Add;model_90/tf.nn.convolution_36/convolution;Const_81:0:0 */;
  %329 = nn.bias_add(%328, %v_param_75, axis=3) /* ty=Tensor[(1, 80, 80, 32), int32] span=model_90/tf.math.add_46/Add;model_90/tf.nn.convolution_36/convolution;Const_81:0:0 */;
  %330 = qnn.requantize(%329, meta[relay.Constant][73] /* ty=Tensor[(32), float32] span=model_90/tf.math.add_46/Add;model_90/tf.nn.convolution_36/convolution;Const_81:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_46/Add;model_90/tf.nn.convolution_36/convolution;Const_81:0:0 */, 0.054597f /* ty=float32 span=model_90/tf.math.add_46/Add;model_90/tf.nn.convolution_36/convolution;Const_81:0:0 */, 3 /* ty=int32 span=model_90/tf.math.add_46/Add;model_90/tf.nn.convolution_36/convolution;Const_81:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 80, 80, 32), int8] span=model_90/tf.math.add_46/Add;model_90/tf.nn.convolution_36/convolution;Const_81:0:0 */;
  %331 = qnn.dequantize(%330, 0.054597f /* ty=float32 span=model_90/tf.math.sigmoid_32/Sigmoid:0:0 */, 3 /* ty=int32 span=model_90/tf.math.sigmoid_32/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 80, 80, 32), float32] span=model_90/tf.math.sigmoid_32/Sigmoid:0:0 */;
  %332 = sigmoid(%331) /* ty=Tensor[(1, 80, 80, 32), float32] span=model_90/tf.math.sigmoid_32/Sigmoid:0:0 */;
  %333 = qnn.quantize(%332, 0.00390625f /* ty=float32 span=model_90/tf.math.sigmoid_32/Sigmoid:0:0 */, -128 /* ty=int32 span=model_90/tf.math.sigmoid_32/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 80, 80, 32), int8] span=model_90/tf.math.sigmoid_32/Sigmoid:0:0 */;
  %334 = @tvmgen_default_ethos_n_main_63(%318) /* ty=Tensor[(1, 80, 80, 32), int8] */;
  %335 = qnn.mul(%330, %333, 0.054597f /* ty=float32 span=model_90/tf.math.multiply_144/Mul:0:0 */, 3 /* ty=int32 span=model_90/tf.math.multiply_144/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_90/tf.math.multiply_144/Mul:0:0 */, -128 /* ty=int32 span=model_90/tf.math.multiply_144/Mul:0:0 */, 0.0275721f /* ty=float32 span=model_90/tf.math.multiply_144/Mul:0:0 */, -118 /* ty=int32 span=model_90/tf.math.multiply_144/Mul:0:0 */) /* ty=Tensor[(1, 80, 80, 32), int8] span=model_90/tf.math.multiply_144/Mul:0:0 */;
  %336 = (%334, %320, %335) /* ty=(Tensor[(1, 80, 80, 32), int8], Tensor[(1, 80, 80, 32), int8], Tensor[(1, 80, 80, 32), int8]) span=model_90/tf.concat_9/concat:0:0 */;
  %337 = @tvmgen_default_ethos_n_main_65(%336) /* ty=Tensor[(1, 80, 80, 96), int8] */;
  %338 = qnn.conv2d(%337, %v_param_76, -118 /* ty=int32 span=model_90/tf.math.add_47/Add;model_90/tf.nn.convolution_37/convolution;Const_77:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_47/Add;model_90/tf.nn.convolution_37/convolution;Const_77:0:0 */, 0.0275721f /* ty=float32 span=model_90/tf.math.add_47/Add;model_90/tf.nn.convolution_37/convolution;Const_77:0:0 */, meta[relay.Constant][74] /* ty=Tensor[(64), float32] span=model_90/tf.math.add_47/Add;model_90/tf.nn.convolution_37/convolution;Const_77:0:0 */, padding=[0, 0, 0, 0], channels=64, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 80, 80, 64), int32] span=model_90/tf.math.add_47/Add;model_90/tf.nn.convolution_37/convolution;Const_77:0:0 */;
  %339 = nn.bias_add(%338, %v_param_77, axis=3) /* ty=Tensor[(1, 80, 80, 64), int32] span=model_90/tf.math.add_47/Add;model_90/tf.nn.convolution_37/convolution;Const_77:0:0 */;
  %340 = qnn.requantize(%339, meta[relay.Constant][75] /* ty=Tensor[(64), float32] span=model_90/tf.math.add_47/Add;model_90/tf.nn.convolution_37/convolution;Const_77:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_47/Add;model_90/tf.nn.convolution_37/convolution;Const_77:0:0 */, 0.0479761f /* ty=float32 span=model_90/tf.math.add_47/Add;model_90/tf.nn.convolution_37/convolution;Const_77:0:0 */, 42 /* ty=int32 span=model_90/tf.math.add_47/Add;model_90/tf.nn.convolution_37/convolution;Const_77:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 80, 80, 64), int8] span=model_90/tf.math.add_47/Add;model_90/tf.nn.convolution_37/convolution;Const_77:0:0 */;
  %341 = qnn.dequantize(%340, 0.0479761f /* ty=float32 span=model_90/tf.math.sigmoid_33/Sigmoid:0:0 */, 42 /* ty=int32 span=model_90/tf.math.sigmoid_33/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 80, 80, 64), float32] span=model_90/tf.math.sigmoid_33/Sigmoid:0:0 */;
  %342 = sigmoid(%341) /* ty=Tensor[(1, 80, 80, 64), float32] span=model_90/tf.math.sigmoid_33/Sigmoid:0:0 */;
  %343 = qnn.quantize(%342, 0.00390625f /* ty=float32 span=model_90/tf.math.sigmoid_33/Sigmoid:0:0 */, -128 /* ty=int32 span=model_90/tf.math.sigmoid_33/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 80, 80, 64), int8] span=model_90/tf.math.sigmoid_33/Sigmoid:0:0 */;
  %344 = qnn.mul(%340, %343, 0.0479761f /* ty=float32 span=model_90/tf.math.multiply_148/Mul:0:0 */, 42 /* ty=int32 span=model_90/tf.math.multiply_148/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_90/tf.math.multiply_148/Mul:0:0 */, -128 /* ty=int32 span=model_90/tf.math.multiply_148/Mul:0:0 */, 0.0167996f /* ty=float32 span=model_90/tf.math.multiply_148/Mul:0:0 */, -111 /* ty=int32 span=model_90/tf.math.multiply_148/Mul:0:0 */) /* ty=Tensor[(1, 80, 80, 64), int8] span=model_90/tf.math.multiply_148/Mul:0:0 */;
  %345 = qnn.conv2d(%344, %v_param_122, -111 /* ty=int32 span=model_90/tf.math.add_49/Add;model_90/tf.nn.convolution_39/convolution;Const_35:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_49/Add;model_90/tf.nn.convolution_39/convolution;Const_35:0:0 */, 0.0167996f /* ty=float32 span=model_90/tf.math.add_49/Add;model_90/tf.nn.convolution_39/convolution;Const_35:0:0 */, meta[relay.Constant][76] /* ty=Tensor[(64), float32] span=model_90/tf.math.add_49/Add;model_90/tf.nn.convolution_39/convolution;Const_35:0:0 */, padding=[1, 1, 1, 1], channels=64, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 80, 80, 64), int32] span=model_90/tf.math.add_49/Add;model_90/tf.nn.convolution_39/convolution;Const_35:0:0 */;
  %346 = nn.bias_add(%345, %v_param_123, axis=3) /* ty=Tensor[(1, 80, 80, 64), int32] span=model_90/tf.math.add_49/Add;model_90/tf.nn.convolution_39/convolution;Const_35:0:0 */;
  %347 = qnn.requantize(%346, meta[relay.Constant][77] /* ty=Tensor[(64), float32] span=model_90/tf.math.add_49/Add;model_90/tf.nn.convolution_39/convolution;Const_35:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_49/Add;model_90/tf.nn.convolution_39/convolution;Const_35:0:0 */, 0.0583578f /* ty=float32 span=model_90/tf.math.add_49/Add;model_90/tf.nn.convolution_39/convolution;Const_35:0:0 */, 6 /* ty=int32 span=model_90/tf.math.add_49/Add;model_90/tf.nn.convolution_39/convolution;Const_35:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 80, 80, 64), int8] span=model_90/tf.math.add_49/Add;model_90/tf.nn.convolution_39/convolution;Const_35:0:0 */;
  %348 = qnn.dequantize(%347, 0.0583578f /* ty=float32 span=model_90/tf.math.sigmoid_35/Sigmoid:0:0 */, 6 /* ty=int32 span=model_90/tf.math.sigmoid_35/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 80, 80, 64), float32] span=model_90/tf.math.sigmoid_35/Sigmoid:0:0 */;
  %349 = sigmoid(%348) /* ty=Tensor[(1, 80, 80, 64), float32] span=model_90/tf.math.sigmoid_35/Sigmoid:0:0 */;
  %350 = qnn.quantize(%349, 0.00390625f /* ty=float32 span=model_90/tf.math.sigmoid_35/Sigmoid:0:0 */, -128 /* ty=int32 span=model_90/tf.math.sigmoid_35/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 80, 80, 64), int8] span=model_90/tf.math.sigmoid_35/Sigmoid:0:0 */;
  %351 = qnn.mul(%347, %350, 0.0583578f /* ty=float32 span=model_90/tf.math.multiply_156/Mul:0:0 */, 6 /* ty=int32 span=model_90/tf.math.multiply_156/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_90/tf.math.multiply_156/Mul:0:0 */, -128 /* ty=int32 span=model_90/tf.math.multiply_156/Mul:0:0 */, 0.028793f /* ty=float32 span=model_90/tf.math.multiply_156/Mul:0:0 */, -118 /* ty=int32 span=model_90/tf.math.multiply_156/Mul:0:0 */) /* ty=Tensor[(1, 80, 80, 64), int8] span=model_90/tf.math.multiply_156/Mul:0:0 */;
  %352 = qnn.conv2d(%351, %v_param_124, -118 /* ty=int32 span=model_90/tf.math.add_51/Add;model_90/tf.nn.convolution_41/convolution;Const_23:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_51/Add;model_90/tf.nn.convolution_41/convolution;Const_23:0:0 */, 0.028793f /* ty=float32 span=model_90/tf.math.add_51/Add;model_90/tf.nn.convolution_41/convolution;Const_23:0:0 */, meta[relay.Constant][78] /* ty=Tensor[(64), float32] span=model_90/tf.math.add_51/Add;model_90/tf.nn.convolution_41/convolution;Const_23:0:0 */, padding=[1, 1, 1, 1], channels=64, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 80, 80, 64), int32] span=model_90/tf.math.add_51/Add;model_90/tf.nn.convolution_41/convolution;Const_23:0:0 */;
  %353 = nn.bias_add(%352, %v_param_125, axis=3) /* ty=Tensor[(1, 80, 80, 64), int32] span=model_90/tf.math.add_51/Add;model_90/tf.nn.convolution_41/convolution;Const_23:0:0 */;
  %354 = qnn.requantize(%353, meta[relay.Constant][79] /* ty=Tensor[(64), float32] span=model_90/tf.math.add_51/Add;model_90/tf.nn.convolution_41/convolution;Const_23:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_51/Add;model_90/tf.nn.convolution_41/convolution;Const_23:0:0 */, 0.219562f /* ty=float32 span=model_90/tf.math.add_51/Add;model_90/tf.nn.convolution_41/convolution;Const_23:0:0 */, -32 /* ty=int32 span=model_90/tf.math.add_51/Add;model_90/tf.nn.convolution_41/convolution;Const_23:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 80, 80, 64), int8] span=model_90/tf.math.add_51/Add;model_90/tf.nn.convolution_41/convolution;Const_23:0:0 */;
  %355 = qnn.dequantize(%354, 0.219562f /* ty=float32 span=model_90/tf.math.sigmoid_37/Sigmoid:0:0 */, -32 /* ty=int32 span=model_90/tf.math.sigmoid_37/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 80, 80, 64), float32] span=model_90/tf.math.sigmoid_37/Sigmoid:0:0 */;
  %356 = sigmoid(%355) /* ty=Tensor[(1, 80, 80, 64), float32] span=model_90/tf.math.sigmoid_37/Sigmoid:0:0 */;
  %357 = qnn.quantize(%356, 0.00390625f /* ty=float32 span=model_90/tf.math.sigmoid_37/Sigmoid:0:0 */, -128 /* ty=int32 span=model_90/tf.math.sigmoid_37/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 80, 80, 64), int8] span=model_90/tf.math.sigmoid_37/Sigmoid:0:0 */;
  %358 = qnn.mul(%354, %357, 0.219562f /* ty=float32 span=model_90/tf.math.multiply_164/Mul:0:0 */, -32 /* ty=int32 span=model_90/tf.math.multiply_164/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_90/tf.math.multiply_164/Mul:0:0 */, -128 /* ty=int32 span=model_90/tf.math.multiply_164/Mul:0:0 */, 0.138064f /* ty=float32 span=model_90/tf.math.multiply_164/Mul:0:0 */, -126 /* ty=int32 span=model_90/tf.math.multiply_164/Mul:0:0 */) /* ty=Tensor[(1, 80, 80, 64), int8] span=model_90/tf.math.multiply_164/Mul:0:0 */;
  %359 = qnn.conv2d(%358, %v_param_126, -126 /* ty=int32 span=model_90/tf.math.add_54/Add;model_90/tf.nn.convolution_44/convolution;Const_12:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_54/Add;model_90/tf.nn.convolution_44/convolution;Const_12:0:0 */, 0.138064f /* ty=float32 span=model_90/tf.math.add_54/Add;model_90/tf.nn.convolution_44/convolution;Const_12:0:0 */, meta[relay.Constant][80] /* ty=Tensor[(64), float32] span=model_90/tf.math.add_54/Add;model_90/tf.nn.convolution_44/convolution;Const_12:0:0 */, padding=[0, 0, 0, 0], channels=64, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 80, 80, 64), int32] span=model_90/tf.math.add_54/Add;model_90/tf.nn.convolution_44/convolution;Const_12:0:0 */;
  %360 = nn.bias_add(%359, %v_param_127, axis=3) /* ty=Tensor[(1, 80, 80, 64), int32] span=model_90/tf.math.add_54/Add;model_90/tf.nn.convolution_44/convolution;Const_12:0:0 */;
  %361 = qnn.conv2d(%344, %v_param_128, -111 /* ty=int32 span=model_90/tf.math.add_50/Add;model_90/tf.nn.convolution_40/convolution;Const_36:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_50/Add;model_90/tf.nn.convolution_40/convolution;Const_36:0:0 */, 0.0167996f /* ty=float32 span=model_90/tf.math.add_50/Add;model_90/tf.nn.convolution_40/convolution;Const_36:0:0 */, meta[relay.Constant][82] /* ty=Tensor[(64), float32] span=model_90/tf.math.add_50/Add;model_90/tf.nn.convolution_40/convolution;Const_36:0:0 */, padding=[1, 1, 1, 1], channels=64, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 80, 80, 64), int32] span=model_90/tf.math.add_50/Add;model_90/tf.nn.convolution_40/convolution;Const_36:0:0 */;
  %362 = nn.bias_add(%361, %v_param_129, axis=3) /* ty=Tensor[(1, 80, 80, 64), int32] span=model_90/tf.math.add_50/Add;model_90/tf.nn.convolution_40/convolution;Const_36:0:0 */;
  %363 = qnn.requantize(%362, meta[relay.Constant][83] /* ty=Tensor[(64), float32] span=model_90/tf.math.add_50/Add;model_90/tf.nn.convolution_40/convolution;Const_36:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_50/Add;model_90/tf.nn.convolution_40/convolution;Const_36:0:0 */, 0.0496394f /* ty=float32 span=model_90/tf.math.add_50/Add;model_90/tf.nn.convolution_40/convolution;Const_36:0:0 */, -20 /* ty=int32 span=model_90/tf.math.add_50/Add;model_90/tf.nn.convolution_40/convolution;Const_36:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 80, 80, 64), int8] span=model_90/tf.math.add_50/Add;model_90/tf.nn.convolution_40/convolution;Const_36:0:0 */;
  %364 = qnn.dequantize(%363, 0.0496394f /* ty=float32 span=model_90/tf.math.sigmoid_36/Sigmoid:0:0 */, -20 /* ty=int32 span=model_90/tf.math.sigmoid_36/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 80, 80, 64), float32] span=model_90/tf.math.sigmoid_36/Sigmoid:0:0 */;
  %365 = sigmoid(%364) /* ty=Tensor[(1, 80, 80, 64), float32] span=model_90/tf.math.sigmoid_36/Sigmoid:0:0 */;
  %366 = qnn.quantize(%365, 0.00390625f /* ty=float32 span=model_90/tf.math.sigmoid_36/Sigmoid:0:0 */, -128 /* ty=int32 span=model_90/tf.math.sigmoid_36/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 80, 80, 64), int8] span=model_90/tf.math.sigmoid_36/Sigmoid:0:0 */;
  %367 = qnn.mul(%363, %366, 0.0496394f /* ty=float32 span=model_90/tf.math.multiply_160/Mul:0:0 */, -20 /* ty=int32 span=model_90/tf.math.multiply_160/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_90/tf.math.multiply_160/Mul:0:0 */, -128 /* ty=int32 span=model_90/tf.math.multiply_160/Mul:0:0 */, 0.0296438f /* ty=float32 span=model_90/tf.math.multiply_160/Mul:0:0 */, -119 /* ty=int32 span=model_90/tf.math.multiply_160/Mul:0:0 */) /* ty=Tensor[(1, 80, 80, 64), int8] span=model_90/tf.math.multiply_160/Mul:0:0 */;
  %368 = qnn.conv2d(%367, %v_param_130, -119 /* ty=int32 span=model_90/tf.math.add_52/Add;model_90/tf.nn.convolution_42/convolution;Const_24:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_52/Add;model_90/tf.nn.convolution_42/convolution;Const_24:0:0 */, 0.0296438f /* ty=float32 span=model_90/tf.math.add_52/Add;model_90/tf.nn.convolution_42/convolution;Const_24:0:0 */, meta[relay.Constant][84] /* ty=Tensor[(64), float32] span=model_90/tf.math.add_52/Add;model_90/tf.nn.convolution_42/convolution;Const_24:0:0 */, padding=[1, 1, 1, 1], channels=64, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 80, 80, 64), int32] span=model_90/tf.math.add_52/Add;model_90/tf.nn.convolution_42/convolution;Const_24:0:0 */;
  %369 = nn.bias_add(%368, %v_param_131, axis=3) /* ty=Tensor[(1, 80, 80, 64), int32] span=model_90/tf.math.add_52/Add;model_90/tf.nn.convolution_42/convolution;Const_24:0:0 */;
  %370 = qnn.requantize(%369, meta[relay.Constant][85] /* ty=Tensor[(64), float32] span=model_90/tf.math.add_52/Add;model_90/tf.nn.convolution_42/convolution;Const_24:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_52/Add;model_90/tf.nn.convolution_42/convolution;Const_24:0:0 */, 0.0781628f /* ty=float32 span=model_90/tf.math.add_52/Add;model_90/tf.nn.convolution_42/convolution;Const_24:0:0 */, -23 /* ty=int32 span=model_90/tf.math.add_52/Add;model_90/tf.nn.convolution_42/convolution;Const_24:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 80, 80, 64), int8] span=model_90/tf.math.add_52/Add;model_90/tf.nn.convolution_42/convolution;Const_24:0:0 */;
  %371 = qnn.dequantize(%370, 0.0781628f /* ty=float32 span=model_90/tf.math.sigmoid_38/Sigmoid:0:0 */, -23 /* ty=int32 span=model_90/tf.math.sigmoid_38/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 80, 80, 64), float32] span=model_90/tf.math.sigmoid_38/Sigmoid:0:0 */;
  %372 = sigmoid(%371) /* ty=Tensor[(1, 80, 80, 64), float32] span=model_90/tf.math.sigmoid_38/Sigmoid:0:0 */;
  %373 = qnn.quantize(%372, 0.00390625f /* ty=float32 span=model_90/tf.math.sigmoid_38/Sigmoid:0:0 */, -128 /* ty=int32 span=model_90/tf.math.sigmoid_38/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 80, 80, 64), int8] span=model_90/tf.math.sigmoid_38/Sigmoid:0:0 */;
  %374 = qnn.mul(%370, %373, 0.0781628f /* ty=float32 span=model_90/tf.math.multiply_168/Mul:0:0 */, -23 /* ty=int32 span=model_90/tf.math.multiply_168/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_90/tf.math.multiply_168/Mul:0:0 */, -128 /* ty=int32 span=model_90/tf.math.multiply_168/Mul:0:0 */, 0.0472009f /* ty=float32 span=model_90/tf.math.multiply_168/Mul:0:0 */, -122 /* ty=int32 span=model_90/tf.math.multiply_168/Mul:0:0 */) /* ty=Tensor[(1, 80, 80, 64), int8] span=model_90/tf.math.multiply_168/Mul:0:0 */;
  %375 = qnn.conv2d(%374, %v_param_132, -122 /* ty=int32 span=model_90/tf.math.add_55/Add;model_90/tf.nn.convolution_45/convolution;Const_11:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_55/Add;model_90/tf.nn.convolution_45/convolution;Const_11:0:0 */, 0.0472009f /* ty=float32 span=model_90/tf.math.add_55/Add;model_90/tf.nn.convolution_45/convolution;Const_11:0:0 */, meta[relay.Constant][86] /* ty=Tensor[(15), float32] span=model_90/tf.math.add_55/Add;model_90/tf.nn.convolution_45/convolution;Const_11:0:0 */, padding=[0, 0, 0, 0], channels=15, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 80, 80, 15), int32] span=model_90/tf.math.add_55/Add;model_90/tf.nn.convolution_45/convolution;Const_11:0:0 */;
  %376 = nn.bias_add(%375, %v_param_133, axis=3) /* ty=Tensor[(1, 80, 80, 15), int32] span=model_90/tf.math.add_55/Add;model_90/tf.nn.convolution_45/convolution;Const_11:0:0 */;
  %377 = qnn.requantize(%360, meta[relay.Constant][81] /* ty=Tensor[(64), float32] span=model_90/tf.math.add_54/Add;model_90/tf.nn.convolution_44/convolution;Const_12:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_54/Add;model_90/tf.nn.convolution_44/convolution;Const_12:0:0 */, 0.124789f /* ty=float32 span=model_90/tf.math.add_54/Add;model_90/tf.nn.convolution_44/convolution;Const_12:0:0 */, 16 /* ty=int32 span=model_90/tf.math.add_54/Add;model_90/tf.nn.convolution_44/convolution;Const_12:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 80, 80, 64), int8] span=model_90/tf.math.add_54/Add;model_90/tf.nn.convolution_44/convolution;Const_12:0:0 */;
  %378 = qnn.requantize(%376, meta[relay.Constant][87] /* ty=Tensor[(15), float32] span=model_90/tf.math.add_55/Add;model_90/tf.nn.convolution_45/convolution;Const_11:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_55/Add;model_90/tf.nn.convolution_45/convolution;Const_11:0:0 */, 0.124789f /* ty=float32 span=model_90/tf.math.add_55/Add;model_90/tf.nn.convolution_45/convolution;Const_11:0:0 */, 16 /* ty=int32 span=model_90/tf.math.add_55/Add;model_90/tf.nn.convolution_45/convolution;Const_11:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 80, 80, 15), int8] span=model_90/tf.math.add_55/Add;model_90/tf.nn.convolution_45/convolution;Const_11:0:0 */;
  %379 = (%377, %378) /* ty=(Tensor[(1, 80, 80, 64), int8], Tensor[(1, 80, 80, 15), int8]) span=model_90/tf.concat_11/concat:0:0 */;
  %380 = @tvmgen_default_ethos_n_main_70(%379) /* ty=Tensor[(1, 80, 80, 79), int8] */;
  %381 = transpose(%380, axes=[0, 3, 1, 2]) /* ty=Tensor[(1, 79, 80, 80), int8] span=model_90/tf.compat.v1.transpose_114/transpose:0:0 */;
  %382 = nn.pad(%344, -111f /* ty=float32 span=model_90/tf.compat.v1.pad_5/Pad:0:0 */, pad_width=[[0, 0], [1, 1], [1, 1], [0, 0]]) /* ty=Tensor[(1, 82, 82, 64), int8] span=model_90/tf.compat.v1.pad_5/Pad:0:0 */;
  %383 = qnn.conv2d(%382, %v_param_78, -111 /* ty=int32 span=model_90/tf.math.add_48/Add;model_90/tf.nn.convolution_38/convolution;Const_74:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_48/Add;model_90/tf.nn.convolution_38/convolution;Const_74:0:0 */, 0.0167996f /* ty=float32 span=model_90/tf.math.add_48/Add;model_90/tf.nn.convolution_38/convolution;Const_74:0:0 */, meta[relay.Constant][88] /* ty=Tensor[(64), float32] span=model_90/tf.math.add_48/Add;model_90/tf.nn.convolution_38/convolution;Const_74:0:0 */, strides=[2, 2], padding=[0, 0, 0, 0], channels=64, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 40, 40, 64), int32] span=model_90/tf.math.add_48/Add;model_90/tf.nn.convolution_38/convolution;Const_74:0:0 */;
  %384 = nn.bias_add(%383, %v_param_79, axis=3) /* ty=Tensor[(1, 40, 40, 64), int32] span=model_90/tf.math.add_48/Add;model_90/tf.nn.convolution_38/convolution;Const_74:0:0 */;
  %385 = qnn.requantize(%384, meta[relay.Constant][89] /* ty=Tensor[(64), float32] span=model_90/tf.math.add_48/Add;model_90/tf.nn.convolution_38/convolution;Const_74:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_48/Add;model_90/tf.nn.convolution_38/convolution;Const_74:0:0 */, 0.0488f /* ty=float32 span=model_90/tf.math.add_48/Add;model_90/tf.nn.convolution_38/convolution;Const_74:0:0 */, 27 /* ty=int32 span=model_90/tf.math.add_48/Add;model_90/tf.nn.convolution_38/convolution;Const_74:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 64), int8] span=model_90/tf.math.add_48/Add;model_90/tf.nn.convolution_38/convolution;Const_74:0:0 */;
  %386 = qnn.dequantize(%385, 0.0488f /* ty=float32 span=model_90/tf.math.sigmoid_34/Sigmoid:0:0 */, 27 /* ty=int32 span=model_90/tf.math.sigmoid_34/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 40, 40, 64), float32] span=model_90/tf.math.sigmoid_34/Sigmoid:0:0 */;
  %387 = sigmoid(%386) /* ty=Tensor[(1, 40, 40, 64), float32] span=model_90/tf.math.sigmoid_34/Sigmoid:0:0 */;
  %388 = qnn.quantize(%387, 0.00390625f /* ty=float32 span=model_90/tf.math.sigmoid_34/Sigmoid:0:0 */, -128 /* ty=int32 span=model_90/tf.math.sigmoid_34/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 64), int8] span=model_90/tf.math.sigmoid_34/Sigmoid:0:0 */;
  %389 = qnn.mul(%385, %388, 0.0488f /* ty=float32 span=model_90/tf.math.multiply_152/Mul:0:0 */, 27 /* ty=int32 span=model_90/tf.math.multiply_152/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_90/tf.math.multiply_152/Mul:0:0 */, -128 /* ty=int32 span=model_90/tf.math.multiply_152/Mul:0:0 */, 0.0200745f /* ty=float32 span=model_90/tf.math.multiply_152/Mul:0:0 */, -114 /* ty=int32 span=model_90/tf.math.multiply_152/Mul:0:0 */) /* ty=Tensor[(1, 40, 40, 64), int8] span=model_90/tf.math.multiply_152/Mul:0:0 */;
  %390 = (%389, %306) /* ty=(Tensor[(1, 40, 40, 64), int8], Tensor[(1, 40, 40, 128), int8]) span=model_90/tf.concat_10/concat:0:0 */;
  %391 = @tvmgen_default_ethos_n_main_76(%390) /* ty=Tensor[(1, 40, 40, 192), int8] */;
  %392 = qnn.conv2d(%391, %v_param_80, -114 /* ty=int32 span=model_90/tf.math.add_53/Add;model_90/tf.nn.convolution_43/convolution;Const_72:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_53/Add;model_90/tf.nn.convolution_43/convolution;Const_72:0:0 */, 0.0200745f /* ty=float32 span=model_90/tf.math.add_53/Add;model_90/tf.nn.convolution_43/convolution;Const_72:0:0 */, meta[relay.Constant][90] /* ty=Tensor[(128), float32] span=model_90/tf.math.add_53/Add;model_90/tf.nn.convolution_43/convolution;Const_72:0:0 */, padding=[0, 0, 0, 0], channels=128, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 40, 40, 128), int32] span=model_90/tf.math.add_53/Add;model_90/tf.nn.convolution_43/convolution;Const_72:0:0 */;
  %393 = nn.bias_add(%392, %v_param_81, axis=3) /* ty=Tensor[(1, 40, 40, 128), int32] span=model_90/tf.math.add_53/Add;model_90/tf.nn.convolution_43/convolution;Const_72:0:0 */;
  %394 = qnn.requantize(%393, meta[relay.Constant][91] /* ty=Tensor[(128), float32] span=model_90/tf.math.add_53/Add;model_90/tf.nn.convolution_43/convolution;Const_72:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_53/Add;model_90/tf.nn.convolution_43/convolution;Const_72:0:0 */, 0.0514981f /* ty=float32 span=model_90/tf.math.add_53/Add;model_90/tf.nn.convolution_43/convolution;Const_72:0:0 */, 18 /* ty=int32 span=model_90/tf.math.add_53/Add;model_90/tf.nn.convolution_43/convolution;Const_72:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 128), int8] span=model_90/tf.math.add_53/Add;model_90/tf.nn.convolution_43/convolution;Const_72:0:0 */;
  %395 = qnn.dequantize(%394, 0.0514981f /* ty=float32 span=model_90/tf.math.sigmoid_39/Sigmoid:0:0 */, 18 /* ty=int32 span=model_90/tf.math.sigmoid_39/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 40, 40, 128), float32] span=model_90/tf.math.sigmoid_39/Sigmoid:0:0 */;
  %396 = sigmoid(%395) /* ty=Tensor[(1, 40, 40, 128), float32] span=model_90/tf.math.sigmoid_39/Sigmoid:0:0 */;
  %397 = qnn.quantize(%396, 0.00390625f /* ty=float32 span=model_90/tf.math.sigmoid_39/Sigmoid:0:0 */, -128 /* ty=int32 span=model_90/tf.math.sigmoid_39/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 128), int8] span=model_90/tf.math.sigmoid_39/Sigmoid:0:0 */;
  %398 = qnn.mul(%394, %397, 0.0514981f /* ty=float32 span=model_90/tf.math.multiply_172/Mul:0:0 */, 18 /* ty=int32 span=model_90/tf.math.multiply_172/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_90/tf.math.multiply_172/Mul:0:0 */, -128 /* ty=int32 span=model_90/tf.math.multiply_172/Mul:0:0 */, 0.0398441f /* ty=float32 span=model_90/tf.math.multiply_172/Mul:0:0 */, -121 /* ty=int32 span=model_90/tf.math.multiply_172/Mul:0:0 */) /* ty=Tensor[(1, 40, 40, 128), int8] span=model_90/tf.math.multiply_172/Mul:0:0 */;
  %399 = strided_slice(%398, begin=[0, 0, 0, 0], end=[1, 40, 40, 64], strides=[1, 1, 1, 1], axes=None) /* ty=Tensor[(1, 40, 40, 64), int8] span=model_90/tf.strided_slice_17/StridedSlice:0:0 */;
  %400 = strided_slice(%398, begin=[0, 0, 0, 64], end=[1, 40, 40, 128], strides=[1, 1, 1, 1], axes=None) /* ty=Tensor[(1, 40, 40, 64), int8] span=model_90/tf.strided_slice_18/StridedSlice:0:0 */;
  %401 = @tvmgen_default_ethos_n_main_82(%400) /* ty=Tensor[(1, 40, 40, 64), int8] */;
  %402 = qnn.conv2d(%401, %v_param_82, -121 /* ty=int32 span=model_90/tf.math.add_56/Add;model_90/tf.nn.convolution_46/convolution;Const_68:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_56/Add;model_90/tf.nn.convolution_46/convolution;Const_68:0:0 */, 0.0398441f /* ty=float32 span=model_90/tf.math.add_56/Add;model_90/tf.nn.convolution_46/convolution;Const_68:0:0 */, meta[relay.Constant][92] /* ty=Tensor[(64), float32] span=model_90/tf.math.add_56/Add;model_90/tf.nn.convolution_46/convolution;Const_68:0:0 */, padding=[1, 1, 1, 1], channels=64, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 40, 40, 64), int32] span=model_90/tf.math.add_56/Add;model_90/tf.nn.convolution_46/convolution;Const_68:0:0 */;
  %403 = nn.bias_add(%402, %v_param_83, axis=3) /* ty=Tensor[(1, 40, 40, 64), int32] span=model_90/tf.math.add_56/Add;model_90/tf.nn.convolution_46/convolution;Const_68:0:0 */;
  %404 = qnn.requantize(%403, meta[relay.Constant][93] /* ty=Tensor[(64), float32] span=model_90/tf.math.add_56/Add;model_90/tf.nn.convolution_46/convolution;Const_68:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_56/Add;model_90/tf.nn.convolution_46/convolution;Const_68:0:0 */, 0.0466153f /* ty=float32 span=model_90/tf.math.add_56/Add;model_90/tf.nn.convolution_46/convolution;Const_68:0:0 */, -26 /* ty=int32 span=model_90/tf.math.add_56/Add;model_90/tf.nn.convolution_46/convolution;Const_68:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 64), int8] span=model_90/tf.math.add_56/Add;model_90/tf.nn.convolution_46/convolution;Const_68:0:0 */;
  %405 = qnn.dequantize(%404, 0.0466153f /* ty=float32 span=model_90/tf.math.sigmoid_40/Sigmoid:0:0 */, -26 /* ty=int32 span=model_90/tf.math.sigmoid_40/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 40, 40, 64), float32] span=model_90/tf.math.sigmoid_40/Sigmoid:0:0 */;
  %406 = sigmoid(%405) /* ty=Tensor[(1, 40, 40, 64), float32] span=model_90/tf.math.sigmoid_40/Sigmoid:0:0 */;
  %407 = qnn.quantize(%406, 0.00390625f /* ty=float32 span=model_90/tf.math.sigmoid_40/Sigmoid:0:0 */, -128 /* ty=int32 span=model_90/tf.math.sigmoid_40/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 64), int8] span=model_90/tf.math.sigmoid_40/Sigmoid:0:0 */;
  %408 = qnn.mul(%404, %407, 0.0466153f /* ty=float32 span=model_90/tf.math.multiply_176/Mul:0:0 */, -26 /* ty=int32 span=model_90/tf.math.multiply_176/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_90/tf.math.multiply_176/Mul:0:0 */, -128 /* ty=int32 span=model_90/tf.math.multiply_176/Mul:0:0 */, 0.0290745f /* ty=float32 span=model_90/tf.math.multiply_176/Mul:0:0 */, -118 /* ty=int32 span=model_90/tf.math.multiply_176/Mul:0:0 */) /* ty=Tensor[(1, 40, 40, 64), int8] span=model_90/tf.math.multiply_176/Mul:0:0 */;
  %409 = qnn.conv2d(%408, %v_param_84, -118 /* ty=int32 span=model_90/tf.math.add_57/Add;model_90/tf.nn.convolution_47/convolution;Const_66:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_57/Add;model_90/tf.nn.convolution_47/convolution;Const_66:0:0 */, 0.0290745f /* ty=float32 span=model_90/tf.math.add_57/Add;model_90/tf.nn.convolution_47/convolution;Const_66:0:0 */, meta[relay.Constant][94] /* ty=Tensor[(64), float32] span=model_90/tf.math.add_57/Add;model_90/tf.nn.convolution_47/convolution;Const_66:0:0 */, padding=[1, 1, 1, 1], channels=64, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 40, 40, 64), int32] span=model_90/tf.math.add_57/Add;model_90/tf.nn.convolution_47/convolution;Const_66:0:0 */;
  %410 = nn.bias_add(%409, %v_param_85, axis=3) /* ty=Tensor[(1, 40, 40, 64), int32] span=model_90/tf.math.add_57/Add;model_90/tf.nn.convolution_47/convolution;Const_66:0:0 */;
  %411 = qnn.requantize(%410, meta[relay.Constant][95] /* ty=Tensor[(64), float32] span=model_90/tf.math.add_57/Add;model_90/tf.nn.convolution_47/convolution;Const_66:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_57/Add;model_90/tf.nn.convolution_47/convolution;Const_66:0:0 */, 0.0805248f /* ty=float32 span=model_90/tf.math.add_57/Add;model_90/tf.nn.convolution_47/convolution;Const_66:0:0 */, 4 /* ty=int32 span=model_90/tf.math.add_57/Add;model_90/tf.nn.convolution_47/convolution;Const_66:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 64), int8] span=model_90/tf.math.add_57/Add;model_90/tf.nn.convolution_47/convolution;Const_66:0:0 */;
  %412 = qnn.dequantize(%411, 0.0805248f /* ty=float32 span=model_90/tf.math.sigmoid_41/Sigmoid:0:0 */, 4 /* ty=int32 span=model_90/tf.math.sigmoid_41/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 40, 40, 64), float32] span=model_90/tf.math.sigmoid_41/Sigmoid:0:0 */;
  %413 = sigmoid(%412) /* ty=Tensor[(1, 40, 40, 64), float32] span=model_90/tf.math.sigmoid_41/Sigmoid:0:0 */;
  %414 = qnn.quantize(%413, 0.00390625f /* ty=float32 span=model_90/tf.math.sigmoid_41/Sigmoid:0:0 */, -128 /* ty=int32 span=model_90/tf.math.sigmoid_41/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 64), int8] span=model_90/tf.math.sigmoid_41/Sigmoid:0:0 */;
  %415 = @tvmgen_default_ethos_n_main_81(%399) /* ty=Tensor[(1, 40, 40, 64), int8] */;
  %416 = qnn.mul(%411, %414, 0.0805248f /* ty=float32 span=model_90/tf.math.multiply_180/Mul:0:0 */, 4 /* ty=int32 span=model_90/tf.math.multiply_180/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_90/tf.math.multiply_180/Mul:0:0 */, -128 /* ty=int32 span=model_90/tf.math.multiply_180/Mul:0:0 */, 0.0398441f /* ty=float32 span=model_90/tf.math.multiply_180/Mul:0:0 */, -121 /* ty=int32 span=model_90/tf.math.multiply_180/Mul:0:0 */) /* ty=Tensor[(1, 40, 40, 64), int8] span=model_90/tf.math.multiply_180/Mul:0:0 */;
  %417 = (%415, %401, %416) /* ty=(Tensor[(1, 40, 40, 64), int8], Tensor[(1, 40, 40, 64), int8], Tensor[(1, 40, 40, 64), int8]) span=model_90/tf.concat_12/concat:0:0 */;
  %418 = @tvmgen_default_ethos_n_main_83(%417) /* ty=Tensor[(1, 40, 40, 192), int8] */;
  %419 = qnn.conv2d(%418, %v_param_86, -121 /* ty=int32 span=model_90/tf.math.add_58/Add;model_90/tf.nn.convolution_48/convolution;Const_62:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_58/Add;model_90/tf.nn.convolution_48/convolution;Const_62:0:0 */, 0.0398441f /* ty=float32 span=model_90/tf.math.add_58/Add;model_90/tf.nn.convolution_48/convolution;Const_62:0:0 */, meta[relay.Constant][96] /* ty=Tensor[(128), float32] span=model_90/tf.math.add_58/Add;model_90/tf.nn.convolution_48/convolution;Const_62:0:0 */, padding=[0, 0, 0, 0], channels=128, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 40, 40, 128), int32] span=model_90/tf.math.add_58/Add;model_90/tf.nn.convolution_48/convolution;Const_62:0:0 */;
  %420 = nn.bias_add(%419, %v_param_87, axis=3) /* ty=Tensor[(1, 40, 40, 128), int32] span=model_90/tf.math.add_58/Add;model_90/tf.nn.convolution_48/convolution;Const_62:0:0 */;
  %421 = qnn.requantize(%420, meta[relay.Constant][97] /* ty=Tensor[(128), float32] span=model_90/tf.math.add_58/Add;model_90/tf.nn.convolution_48/convolution;Const_62:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_58/Add;model_90/tf.nn.convolution_48/convolution;Const_62:0:0 */, 0.0517764f /* ty=float32 span=model_90/tf.math.add_58/Add;model_90/tf.nn.convolution_48/convolution;Const_62:0:0 */, 35 /* ty=int32 span=model_90/tf.math.add_58/Add;model_90/tf.nn.convolution_48/convolution;Const_62:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 128), int8] span=model_90/tf.math.add_58/Add;model_90/tf.nn.convolution_48/convolution;Const_62:0:0 */;
  %422 = qnn.dequantize(%421, 0.0517764f /* ty=float32 span=model_90/tf.math.sigmoid_42/Sigmoid:0:0 */, 35 /* ty=int32 span=model_90/tf.math.sigmoid_42/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 40, 40, 128), float32] span=model_90/tf.math.sigmoid_42/Sigmoid:0:0 */;
  %423 = sigmoid(%422) /* ty=Tensor[(1, 40, 40, 128), float32] span=model_90/tf.math.sigmoid_42/Sigmoid:0:0 */;
  %424 = qnn.quantize(%423, 0.00390625f /* ty=float32 span=model_90/tf.math.sigmoid_42/Sigmoid:0:0 */, -128 /* ty=int32 span=model_90/tf.math.sigmoid_42/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 128), int8] span=model_90/tf.math.sigmoid_42/Sigmoid:0:0 */;
  %425 = qnn.mul(%421, %424, 0.0517764f /* ty=float32 span=model_90/tf.math.multiply_184/Mul:0:0 */, 35 /* ty=int32 span=model_90/tf.math.multiply_184/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_90/tf.math.multiply_184/Mul:0:0 */, -128 /* ty=int32 span=model_90/tf.math.multiply_184/Mul:0:0 */, 0.019545f /* ty=float32 span=model_90/tf.math.multiply_184/Mul:0:0 */, -114 /* ty=int32 span=model_90/tf.math.multiply_184/Mul:0:0 */) /* ty=Tensor[(1, 40, 40, 128), int8] span=model_90/tf.math.multiply_184/Mul:0:0 */;
  %426 = qnn.conv2d(%425, %v_param_110, -114 /* ty=int32 span=model_90/tf.math.add_60/Add;model_90/tf.nn.convolution_50/convolution;Const_37:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_60/Add;model_90/tf.nn.convolution_50/convolution;Const_37:0:0 */, 0.019545f /* ty=float32 span=model_90/tf.math.add_60/Add;model_90/tf.nn.convolution_50/convolution;Const_37:0:0 */, meta[relay.Constant][98] /* ty=Tensor[(64), float32] span=model_90/tf.math.add_60/Add;model_90/tf.nn.convolution_50/convolution;Const_37:0:0 */, padding=[1, 1, 1, 1], channels=64, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 40, 40, 64), int32] span=model_90/tf.math.add_60/Add;model_90/tf.nn.convolution_50/convolution;Const_37:0:0 */;
  %427 = nn.bias_add(%426, %v_param_111, axis=3) /* ty=Tensor[(1, 40, 40, 64), int32] span=model_90/tf.math.add_60/Add;model_90/tf.nn.convolution_50/convolution;Const_37:0:0 */;
  %428 = qnn.requantize(%427, meta[relay.Constant][99] /* ty=Tensor[(64), float32] span=model_90/tf.math.add_60/Add;model_90/tf.nn.convolution_50/convolution;Const_37:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_60/Add;model_90/tf.nn.convolution_50/convolution;Const_37:0:0 */, 0.0871864f /* ty=float32 span=model_90/tf.math.add_60/Add;model_90/tf.nn.convolution_50/convolution;Const_37:0:0 */, 45 /* ty=int32 span=model_90/tf.math.add_60/Add;model_90/tf.nn.convolution_50/convolution;Const_37:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 64), int8] span=model_90/tf.math.add_60/Add;model_90/tf.nn.convolution_50/convolution;Const_37:0:0 */;
  %429 = qnn.dequantize(%428, 0.0871864f /* ty=float32 span=model_90/tf.math.sigmoid_44/Sigmoid:0:0 */, 45 /* ty=int32 span=model_90/tf.math.sigmoid_44/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 40, 40, 64), float32] span=model_90/tf.math.sigmoid_44/Sigmoid:0:0 */;
  %430 = sigmoid(%429) /* ty=Tensor[(1, 40, 40, 64), float32] span=model_90/tf.math.sigmoid_44/Sigmoid:0:0 */;
  %431 = qnn.quantize(%430, 0.00390625f /* ty=float32 span=model_90/tf.math.sigmoid_44/Sigmoid:0:0 */, -128 /* ty=int32 span=model_90/tf.math.sigmoid_44/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 64), int8] span=model_90/tf.math.sigmoid_44/Sigmoid:0:0 */;
  %432 = qnn.mul(%428, %431, 0.0871864f /* ty=float32 span=model_90/tf.math.multiply_192/Mul:0:0 */, 45 /* ty=int32 span=model_90/tf.math.multiply_192/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_90/tf.math.multiply_192/Mul:0:0 */, -128 /* ty=int32 span=model_90/tf.math.multiply_192/Mul:0:0 */, 0.0290358f /* ty=float32 span=model_90/tf.math.multiply_192/Mul:0:0 */, -118 /* ty=int32 span=model_90/tf.math.multiply_192/Mul:0:0 */) /* ty=Tensor[(1, 40, 40, 64), int8] span=model_90/tf.math.multiply_192/Mul:0:0 */;
  %433 = qnn.conv2d(%432, %v_param_112, -118 /* ty=int32 span=model_90/tf.math.add_62/Add;model_90/tf.nn.convolution_52/convolution;Const_25:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_62/Add;model_90/tf.nn.convolution_52/convolution;Const_25:0:0 */, 0.0290358f /* ty=float32 span=model_90/tf.math.add_62/Add;model_90/tf.nn.convolution_52/convolution;Const_25:0:0 */, meta[relay.Constant][100] /* ty=Tensor[(64), float32] span=model_90/tf.math.add_62/Add;model_90/tf.nn.convolution_52/convolution;Const_25:0:0 */, padding=[1, 1, 1, 1], channels=64, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 40, 40, 64), int32] span=model_90/tf.math.add_62/Add;model_90/tf.nn.convolution_52/convolution;Const_25:0:0 */;
  %434 = nn.bias_add(%433, %v_param_113, axis=3) /* ty=Tensor[(1, 40, 40, 64), int32] span=model_90/tf.math.add_62/Add;model_90/tf.nn.convolution_52/convolution;Const_25:0:0 */;
  %435 = qnn.requantize(%434, meta[relay.Constant][101] /* ty=Tensor[(64), float32] span=model_90/tf.math.add_62/Add;model_90/tf.nn.convolution_52/convolution;Const_25:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_62/Add;model_90/tf.nn.convolution_52/convolution;Const_25:0:0 */, 0.192037f /* ty=float32 span=model_90/tf.math.add_62/Add;model_90/tf.nn.convolution_52/convolution;Const_25:0:0 */, -20 /* ty=int32 span=model_90/tf.math.add_62/Add;model_90/tf.nn.convolution_52/convolution;Const_25:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 64), int8] span=model_90/tf.math.add_62/Add;model_90/tf.nn.convolution_52/convolution;Const_25:0:0 */;
  %436 = qnn.dequantize(%435, 0.192037f /* ty=float32 span=model_90/tf.math.sigmoid_46/Sigmoid:0:0 */, -20 /* ty=int32 span=model_90/tf.math.sigmoid_46/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 40, 40, 64), float32] span=model_90/tf.math.sigmoid_46/Sigmoid:0:0 */;
  %437 = sigmoid(%436) /* ty=Tensor[(1, 40, 40, 64), float32] span=model_90/tf.math.sigmoid_46/Sigmoid:0:0 */;
  %438 = qnn.quantize(%437, 0.00390625f /* ty=float32 span=model_90/tf.math.sigmoid_46/Sigmoid:0:0 */, -128 /* ty=int32 span=model_90/tf.math.sigmoid_46/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 64), int8] span=model_90/tf.math.sigmoid_46/Sigmoid:0:0 */;
  %439 = qnn.mul(%435, %438, 0.192037f /* ty=float32 span=model_90/tf.math.multiply_200/Mul:0:0 */, -20 /* ty=int32 span=model_90/tf.math.multiply_200/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_90/tf.math.multiply_200/Mul:0:0 */, -128 /* ty=int32 span=model_90/tf.math.multiply_200/Mul:0:0 */, 0.111582f /* ty=float32 span=model_90/tf.math.multiply_200/Mul:0:0 */, -126 /* ty=int32 span=model_90/tf.math.multiply_200/Mul:0:0 */) /* ty=Tensor[(1, 40, 40, 64), int8] span=model_90/tf.math.multiply_200/Mul:0:0 */;
  %440 = qnn.conv2d(%439, %v_param_114, -126 /* ty=int32 span=model_90/tf.math.add_65/Add;model_90/tf.nn.convolution_55/convolution;Const_14:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_65/Add;model_90/tf.nn.convolution_55/convolution;Const_14:0:0 */, 0.111582f /* ty=float32 span=model_90/tf.math.add_65/Add;model_90/tf.nn.convolution_55/convolution;Const_14:0:0 */, meta[relay.Constant][102] /* ty=Tensor[(64), float32] span=model_90/tf.math.add_65/Add;model_90/tf.nn.convolution_55/convolution;Const_14:0:0 */, padding=[0, 0, 0, 0], channels=64, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 40, 40, 64), int32] span=model_90/tf.math.add_65/Add;model_90/tf.nn.convolution_55/convolution;Const_14:0:0 */;
  %441 = nn.bias_add(%440, %v_param_115, axis=3) /* ty=Tensor[(1, 40, 40, 64), int32] span=model_90/tf.math.add_65/Add;model_90/tf.nn.convolution_55/convolution;Const_14:0:0 */;
  %442 = qnn.conv2d(%425, %v_param_116, -114 /* ty=int32 span=model_90/tf.math.add_61/Add;model_90/tf.nn.convolution_51/convolution;Const_38:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_61/Add;model_90/tf.nn.convolution_51/convolution;Const_38:0:0 */, 0.019545f /* ty=float32 span=model_90/tf.math.add_61/Add;model_90/tf.nn.convolution_51/convolution;Const_38:0:0 */, meta[relay.Constant][104] /* ty=Tensor[(64), float32] span=model_90/tf.math.add_61/Add;model_90/tf.nn.convolution_51/convolution;Const_38:0:0 */, padding=[1, 1, 1, 1], channels=64, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 40, 40, 64), int32] span=model_90/tf.math.add_61/Add;model_90/tf.nn.convolution_51/convolution;Const_38:0:0 */;
  %443 = nn.bias_add(%442, %v_param_117, axis=3) /* ty=Tensor[(1, 40, 40, 64), int32] span=model_90/tf.math.add_61/Add;model_90/tf.nn.convolution_51/convolution;Const_38:0:0 */;
  %444 = qnn.requantize(%443, meta[relay.Constant][105] /* ty=Tensor[(64), float32] span=model_90/tf.math.add_61/Add;model_90/tf.nn.convolution_51/convolution;Const_38:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_61/Add;model_90/tf.nn.convolution_51/convolution;Const_38:0:0 */, 0.038406f /* ty=float32 span=model_90/tf.math.add_61/Add;model_90/tf.nn.convolution_51/convolution;Const_38:0:0 */, 16 /* ty=int32 span=model_90/tf.math.add_61/Add;model_90/tf.nn.convolution_51/convolution;Const_38:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 64), int8] span=model_90/tf.math.add_61/Add;model_90/tf.nn.convolution_51/convolution;Const_38:0:0 */;
  %445 = qnn.dequantize(%444, 0.038406f /* ty=float32 span=model_90/tf.math.sigmoid_45/Sigmoid:0:0 */, 16 /* ty=int32 span=model_90/tf.math.sigmoid_45/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 40, 40, 64), float32] span=model_90/tf.math.sigmoid_45/Sigmoid:0:0 */;
  %446 = sigmoid(%445) /* ty=Tensor[(1, 40, 40, 64), float32] span=model_90/tf.math.sigmoid_45/Sigmoid:0:0 */;
  %447 = qnn.quantize(%446, 0.00390625f /* ty=float32 span=model_90/tf.math.sigmoid_45/Sigmoid:0:0 */, -128 /* ty=int32 span=model_90/tf.math.sigmoid_45/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 64), int8] span=model_90/tf.math.sigmoid_45/Sigmoid:0:0 */;
  %448 = qnn.mul(%444, %447, 0.038406f /* ty=float32 span=model_90/tf.math.multiply_196/Mul:0:0 */, 16 /* ty=int32 span=model_90/tf.math.multiply_196/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_90/tf.math.multiply_196/Mul:0:0 */, -128 /* ty=int32 span=model_90/tf.math.multiply_196/Mul:0:0 */, 0.017508f /* ty=float32 span=model_90/tf.math.multiply_196/Mul:0:0 */, -112 /* ty=int32 span=model_90/tf.math.multiply_196/Mul:0:0 */) /* ty=Tensor[(1, 40, 40, 64), int8] span=model_90/tf.math.multiply_196/Mul:0:0 */;
  %449 = qnn.conv2d(%448, %v_param_118, -112 /* ty=int32 span=model_90/tf.math.add_63/Add;model_90/tf.nn.convolution_53/convolution;Const_26:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_63/Add;model_90/tf.nn.convolution_53/convolution;Const_26:0:0 */, 0.017508f /* ty=float32 span=model_90/tf.math.add_63/Add;model_90/tf.nn.convolution_53/convolution;Const_26:0:0 */, meta[relay.Constant][106] /* ty=Tensor[(64), float32] span=model_90/tf.math.add_63/Add;model_90/tf.nn.convolution_53/convolution;Const_26:0:0 */, padding=[1, 1, 1, 1], channels=64, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 40, 40, 64), int32] span=model_90/tf.math.add_63/Add;model_90/tf.nn.convolution_53/convolution;Const_26:0:0 */;
  %450 = nn.bias_add(%449, %v_param_119, axis=3) /* ty=Tensor[(1, 40, 40, 64), int32] span=model_90/tf.math.add_63/Add;model_90/tf.nn.convolution_53/convolution;Const_26:0:0 */;
  %451 = qnn.requantize(%450, meta[relay.Constant][107] /* ty=Tensor[(64), float32] span=model_90/tf.math.add_63/Add;model_90/tf.nn.convolution_53/convolution;Const_26:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_63/Add;model_90/tf.nn.convolution_53/convolution;Const_26:0:0 */, 0.0486872f /* ty=float32 span=model_90/tf.math.add_63/Add;model_90/tf.nn.convolution_53/convolution;Const_26:0:0 */, -14 /* ty=int32 span=model_90/tf.math.add_63/Add;model_90/tf.nn.convolution_53/convolution;Const_26:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 64), int8] span=model_90/tf.math.add_63/Add;model_90/tf.nn.convolution_53/convolution;Const_26:0:0 */;
  %452 = qnn.dequantize(%451, 0.0486872f /* ty=float32 span=model_90/tf.math.sigmoid_47/Sigmoid:0:0 */, -14 /* ty=int32 span=model_90/tf.math.sigmoid_47/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 40, 40, 64), float32] span=model_90/tf.math.sigmoid_47/Sigmoid:0:0 */;
  %453 = sigmoid(%452) /* ty=Tensor[(1, 40, 40, 64), float32] span=model_90/tf.math.sigmoid_47/Sigmoid:0:0 */;
  %454 = qnn.quantize(%453, 0.00390625f /* ty=float32 span=model_90/tf.math.sigmoid_47/Sigmoid:0:0 */, -128 /* ty=int32 span=model_90/tf.math.sigmoid_47/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 64), int8] span=model_90/tf.math.sigmoid_47/Sigmoid:0:0 */;
  %455 = qnn.mul(%451, %454, 0.0486872f /* ty=float32 span=model_90/tf.math.multiply_204/Mul:0:0 */, -14 /* ty=int32 span=model_90/tf.math.multiply_204/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_90/tf.math.multiply_204/Mul:0:0 */, -128 /* ty=int32 span=model_90/tf.math.multiply_204/Mul:0:0 */, 0.027943f /* ty=float32 span=model_90/tf.math.multiply_204/Mul:0:0 */, -118 /* ty=int32 span=model_90/tf.math.multiply_204/Mul:0:0 */) /* ty=Tensor[(1, 40, 40, 64), int8] span=model_90/tf.math.multiply_204/Mul:0:0 */;
  %456 = qnn.conv2d(%455, %v_param_120, -118 /* ty=int32 span=model_90/tf.math.add_66/Add;model_90/tf.nn.convolution_56/convolution;Const_13:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_66/Add;model_90/tf.nn.convolution_56/convolution;Const_13:0:0 */, 0.027943f /* ty=float32 span=model_90/tf.math.add_66/Add;model_90/tf.nn.convolution_56/convolution;Const_13:0:0 */, meta[relay.Constant][108] /* ty=Tensor[(15), float32] span=model_90/tf.math.add_66/Add;model_90/tf.nn.convolution_56/convolution;Const_13:0:0 */, padding=[0, 0, 0, 0], channels=15, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 40, 40, 15), int32] span=model_90/tf.math.add_66/Add;model_90/tf.nn.convolution_56/convolution;Const_13:0:0 */;
  %457 = nn.bias_add(%456, %v_param_121, axis=3) /* ty=Tensor[(1, 40, 40, 15), int32] span=model_90/tf.math.add_66/Add;model_90/tf.nn.convolution_56/convolution;Const_13:0:0 */;
  %458 = qnn.requantize(%441, meta[relay.Constant][103] /* ty=Tensor[(64), float32] span=model_90/tf.math.add_65/Add;model_90/tf.nn.convolution_55/convolution;Const_14:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_65/Add;model_90/tf.nn.convolution_55/convolution;Const_14:0:0 */, 0.124789f /* ty=float32 span=model_90/tf.math.add_65/Add;model_90/tf.nn.convolution_55/convolution;Const_14:0:0 */, 16 /* ty=int32 span=model_90/tf.math.add_65/Add;model_90/tf.nn.convolution_55/convolution;Const_14:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 64), int8] span=model_90/tf.math.add_65/Add;model_90/tf.nn.convolution_55/convolution;Const_14:0:0 */;
  %459 = qnn.requantize(%457, meta[relay.Constant][109] /* ty=Tensor[(15), float32] span=model_90/tf.math.add_66/Add;model_90/tf.nn.convolution_56/convolution;Const_13:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_66/Add;model_90/tf.nn.convolution_56/convolution;Const_13:0:0 */, 0.124789f /* ty=float32 span=model_90/tf.math.add_66/Add;model_90/tf.nn.convolution_56/convolution;Const_13:0:0 */, 16 /* ty=int32 span=model_90/tf.math.add_66/Add;model_90/tf.nn.convolution_56/convolution;Const_13:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 40, 40, 15), int8] span=model_90/tf.math.add_66/Add;model_90/tf.nn.convolution_56/convolution;Const_13:0:0 */;
  %460 = (%458, %459) /* ty=(Tensor[(1, 40, 40, 64), int8], Tensor[(1, 40, 40, 15), int8]) span=model_90/tf.concat_14/concat:0:0 */;
  %461 = @tvmgen_default_ethos_n_main_88(%460) /* ty=Tensor[(1, 40, 40, 79), int8] */;
  %462 = transpose(%461, axes=[0, 3, 1, 2]) /* ty=Tensor[(1, 79, 40, 40), int8] span=model_90/tf.compat.v1.transpose_151/transpose:0:0 */;
  %463 = nn.pad(%425, -114f /* ty=float32 span=model_90/tf.compat.v1.pad_6/Pad:0:0 */, pad_width=[[0, 0], [1, 1], [1, 1], [0, 0]]) /* ty=Tensor[(1, 42, 42, 128), int8] span=model_90/tf.compat.v1.pad_6/Pad:0:0 */;
  %464 = qnn.conv2d(%463, %v_param_88, -114 /* ty=int32 span=model_90/tf.math.add_59/Add;model_90/tf.nn.convolution_49/convolution;Const_59:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_59/Add;model_90/tf.nn.convolution_49/convolution;Const_59:0:0 */, 0.019545f /* ty=float32 span=model_90/tf.math.add_59/Add;model_90/tf.nn.convolution_49/convolution;Const_59:0:0 */, meta[relay.Constant][110] /* ty=Tensor[(128), float32] span=model_90/tf.math.add_59/Add;model_90/tf.nn.convolution_49/convolution;Const_59:0:0 */, strides=[2, 2], padding=[0, 0, 0, 0], channels=128, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 20, 20, 128), int32] span=model_90/tf.math.add_59/Add;model_90/tf.nn.convolution_49/convolution;Const_59:0:0 */;
  %465 = nn.bias_add(%464, %v_param_89, axis=3) /* ty=Tensor[(1, 20, 20, 128), int32] span=model_90/tf.math.add_59/Add;model_90/tf.nn.convolution_49/convolution;Const_59:0:0 */;
  %466 = qnn.requantize(%465, meta[relay.Constant][111] /* ty=Tensor[(128), float32] span=model_90/tf.math.add_59/Add;model_90/tf.nn.convolution_49/convolution;Const_59:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_59/Add;model_90/tf.nn.convolution_49/convolution;Const_59:0:0 */, 0.0557189f /* ty=float32 span=model_90/tf.math.add_59/Add;model_90/tf.nn.convolution_49/convolution;Const_59:0:0 */, -21 /* ty=int32 span=model_90/tf.math.add_59/Add;model_90/tf.nn.convolution_49/convolution;Const_59:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 128), int8] span=model_90/tf.math.add_59/Add;model_90/tf.nn.convolution_49/convolution;Const_59:0:0 */;
  %467 = qnn.dequantize(%466, 0.0557189f /* ty=float32 span=model_90/tf.math.sigmoid_43/Sigmoid:0:0 */, -21 /* ty=int32 span=model_90/tf.math.sigmoid_43/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 20, 20, 128), float32] span=model_90/tf.math.sigmoid_43/Sigmoid:0:0 */;
  %468 = sigmoid(%467) /* ty=Tensor[(1, 20, 20, 128), float32] span=model_90/tf.math.sigmoid_43/Sigmoid:0:0 */;
  %469 = qnn.quantize(%468, 0.00390625f /* ty=float32 span=model_90/tf.math.sigmoid_43/Sigmoid:0:0 */, -128 /* ty=int32 span=model_90/tf.math.sigmoid_43/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 128), int8] span=model_90/tf.math.sigmoid_43/Sigmoid:0:0 */;
  %470 = qnn.mul(%466, %469, 0.0557189f /* ty=float32 span=model_90/tf.math.multiply_188/Mul:0:0 */, -21 /* ty=int32 span=model_90/tf.math.multiply_188/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_90/tf.math.multiply_188/Mul:0:0 */, -128 /* ty=int32 span=model_90/tf.math.multiply_188/Mul:0:0 */, 0.0334442f /* ty=float32 span=model_90/tf.math.multiply_188/Mul:0:0 */, -120 /* ty=int32 span=model_90/tf.math.multiply_188/Mul:0:0 */) /* ty=Tensor[(1, 20, 20, 128), int8] span=model_90/tf.math.multiply_188/Mul:0:0 */;
  %471 = (%470, %268) /* ty=(Tensor[(1, 20, 20, 128), int8], Tensor[(1, 20, 20, 256), int8]) span=model_90/tf.concat_13/concat:0:0 */;
  %472 = @tvmgen_default_ethos_n_main_94(%471) /* ty=Tensor[(1, 20, 20, 384), int8] */;
  %473 = qnn.conv2d(%472, %v_param_90, -120 /* ty=int32 span=model_90/tf.math.add_64/Add;model_90/tf.nn.convolution_54/convolution;Const_57:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_64/Add;model_90/tf.nn.convolution_54/convolution;Const_57:0:0 */, 0.0334442f /* ty=float32 span=model_90/tf.math.add_64/Add;model_90/tf.nn.convolution_54/convolution;Const_57:0:0 */, meta[relay.Constant][112] /* ty=Tensor[(256), float32] span=model_90/tf.math.add_64/Add;model_90/tf.nn.convolution_54/convolution;Const_57:0:0 */, padding=[0, 0, 0, 0], channels=256, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 20, 20, 256), int32] span=model_90/tf.math.add_64/Add;model_90/tf.nn.convolution_54/convolution;Const_57:0:0 */;
  %474 = nn.bias_add(%473, %v_param_91, axis=3) /* ty=Tensor[(1, 20, 20, 256), int32] span=model_90/tf.math.add_64/Add;model_90/tf.nn.convolution_54/convolution;Const_57:0:0 */;
  %475 = qnn.requantize(%474, meta[relay.Constant][113] /* ty=Tensor[(256), float32] span=model_90/tf.math.add_64/Add;model_90/tf.nn.convolution_54/convolution;Const_57:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_64/Add;model_90/tf.nn.convolution_54/convolution;Const_57:0:0 */, 0.0664366f /* ty=float32 span=model_90/tf.math.add_64/Add;model_90/tf.nn.convolution_54/convolution;Const_57:0:0 */, 37 /* ty=int32 span=model_90/tf.math.add_64/Add;model_90/tf.nn.convolution_54/convolution;Const_57:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 256), int8] span=model_90/tf.math.add_64/Add;model_90/tf.nn.convolution_54/convolution;Const_57:0:0 */;
  %476 = qnn.dequantize(%475, 0.0664366f /* ty=float32 span=model_90/tf.math.sigmoid_48/Sigmoid:0:0 */, 37 /* ty=int32 span=model_90/tf.math.sigmoid_48/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 20, 20, 256), float32] span=model_90/tf.math.sigmoid_48/Sigmoid:0:0 */;
  %477 = sigmoid(%476) /* ty=Tensor[(1, 20, 20, 256), float32] span=model_90/tf.math.sigmoid_48/Sigmoid:0:0 */;
  %478 = qnn.quantize(%477, 0.00390625f /* ty=float32 span=model_90/tf.math.sigmoid_48/Sigmoid:0:0 */, -128 /* ty=int32 span=model_90/tf.math.sigmoid_48/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 256), int8] span=model_90/tf.math.sigmoid_48/Sigmoid:0:0 */;
  %479 = qnn.mul(%475, %478, 0.0664366f /* ty=float32 span=model_90/tf.math.multiply_208/Mul:0:0 */, 37 /* ty=int32 span=model_90/tf.math.multiply_208/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_90/tf.math.multiply_208/Mul:0:0 */, -128 /* ty=int32 span=model_90/tf.math.multiply_208/Mul:0:0 */, 0.0255796f /* ty=float32 span=model_90/tf.math.multiply_208/Mul:0:0 */, -106 /* ty=int32 span=model_90/tf.math.multiply_208/Mul:0:0 */) /* ty=Tensor[(1, 20, 20, 256), int8] span=model_90/tf.math.multiply_208/Mul:0:0 */;
  %480 = strided_slice(%479, begin=[0, 0, 0, 0], end=[1, 20, 20, 128], strides=[1, 1, 1, 1], axes=None) /* ty=Tensor[(1, 20, 20, 128), int8] span=model_90/tf.strided_slice_19/StridedSlice:0:0 */;
  %481 = strided_slice(%479, begin=[0, 0, 0, 128], end=[1, 20, 20, 256], strides=[1, 1, 1, 1], axes=None) /* ty=Tensor[(1, 20, 20, 128), int8] span=model_90/tf.strided_slice_20/StridedSlice:0:0 */;
  %482 = @tvmgen_default_ethos_n_main_100(%481) /* ty=Tensor[(1, 20, 20, 128), int8] */;
  %483 = qnn.conv2d(%482, %v_param_92, -106 /* ty=int32 span=model_90/tf.math.add_67/Add;model_90/tf.nn.convolution_57/convolution;Const_53:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_67/Add;model_90/tf.nn.convolution_57/convolution;Const_53:0:0 */, 0.0255796f /* ty=float32 span=model_90/tf.math.add_67/Add;model_90/tf.nn.convolution_57/convolution;Const_53:0:0 */, meta[relay.Constant][114] /* ty=Tensor[(128), float32] span=model_90/tf.math.add_67/Add;model_90/tf.nn.convolution_57/convolution;Const_53:0:0 */, padding=[1, 1, 1, 1], channels=128, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 20, 20, 128), int32] span=model_90/tf.math.add_67/Add;model_90/tf.nn.convolution_57/convolution;Const_53:0:0 */;
  %484 = nn.bias_add(%483, %v_param_93, axis=3) /* ty=Tensor[(1, 20, 20, 128), int32] span=model_90/tf.math.add_67/Add;model_90/tf.nn.convolution_57/convolution;Const_53:0:0 */;
  %485 = qnn.requantize(%484, meta[relay.Constant][115] /* ty=Tensor[(128), float32] span=model_90/tf.math.add_67/Add;model_90/tf.nn.convolution_57/convolution;Const_53:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_67/Add;model_90/tf.nn.convolution_57/convolution;Const_53:0:0 */, 0.0349795f /* ty=float32 span=model_90/tf.math.add_67/Add;model_90/tf.nn.convolution_57/convolution;Const_53:0:0 */, -6 /* ty=int32 span=model_90/tf.math.add_67/Add;model_90/tf.nn.convolution_57/convolution;Const_53:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 128), int8] span=model_90/tf.math.add_67/Add;model_90/tf.nn.convolution_57/convolution;Const_53:0:0 */;
  %486 = qnn.dequantize(%485, 0.0349795f /* ty=float32 span=model_90/tf.math.sigmoid_49/Sigmoid:0:0 */, -6 /* ty=int32 span=model_90/tf.math.sigmoid_49/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 20, 20, 128), float32] span=model_90/tf.math.sigmoid_49/Sigmoid:0:0 */;
  %487 = sigmoid(%486) /* ty=Tensor[(1, 20, 20, 128), float32] span=model_90/tf.math.sigmoid_49/Sigmoid:0:0 */;
  %488 = qnn.quantize(%487, 0.00390625f /* ty=float32 span=model_90/tf.math.sigmoid_49/Sigmoid:0:0 */, -128 /* ty=int32 span=model_90/tf.math.sigmoid_49/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 128), int8] span=model_90/tf.math.sigmoid_49/Sigmoid:0:0 */;
  %489 = qnn.mul(%485, %488, 0.0349795f /* ty=float32 span=model_90/tf.math.multiply_212/Mul:0:0 */, -6 /* ty=int32 span=model_90/tf.math.multiply_212/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_90/tf.math.multiply_212/Mul:0:0 */, -128 /* ty=int32 span=model_90/tf.math.multiply_212/Mul:0:0 */, 0.0191437f /* ty=float32 span=model_90/tf.math.multiply_212/Mul:0:0 */, -113 /* ty=int32 span=model_90/tf.math.multiply_212/Mul:0:0 */) /* ty=Tensor[(1, 20, 20, 128), int8] span=model_90/tf.math.multiply_212/Mul:0:0 */;
  %490 = qnn.conv2d(%489, %v_param_94, -113 /* ty=int32 span=model_90/tf.math.add_68/Add;model_90/tf.nn.convolution_58/convolution;Const_51:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_68/Add;model_90/tf.nn.convolution_58/convolution;Const_51:0:0 */, 0.0191437f /* ty=float32 span=model_90/tf.math.add_68/Add;model_90/tf.nn.convolution_58/convolution;Const_51:0:0 */, meta[relay.Constant][116] /* ty=Tensor[(128), float32] span=model_90/tf.math.add_68/Add;model_90/tf.nn.convolution_58/convolution;Const_51:0:0 */, padding=[1, 1, 1, 1], channels=128, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 20, 20, 128), int32] span=model_90/tf.math.add_68/Add;model_90/tf.nn.convolution_58/convolution;Const_51:0:0 */;
  %491 = nn.bias_add(%490, %v_param_95, axis=3) /* ty=Tensor[(1, 20, 20, 128), int32] span=model_90/tf.math.add_68/Add;model_90/tf.nn.convolution_58/convolution;Const_51:0:0 */;
  %492 = qnn.requantize(%491, meta[relay.Constant][117] /* ty=Tensor[(128), float32] span=model_90/tf.math.add_68/Add;model_90/tf.nn.convolution_58/convolution;Const_51:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_68/Add;model_90/tf.nn.convolution_58/convolution;Const_51:0:0 */, 0.0359027f /* ty=float32 span=model_90/tf.math.add_68/Add;model_90/tf.nn.convolution_58/convolution;Const_51:0:0 */, -11 /* ty=int32 span=model_90/tf.math.add_68/Add;model_90/tf.nn.convolution_58/convolution;Const_51:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 128), int8] span=model_90/tf.math.add_68/Add;model_90/tf.nn.convolution_58/convolution;Const_51:0:0 */;
  %493 = qnn.dequantize(%492, 0.0359027f /* ty=float32 span=model_90/tf.math.sigmoid_50/Sigmoid:0:0 */, -11 /* ty=int32 span=model_90/tf.math.sigmoid_50/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 20, 20, 128), float32] span=model_90/tf.math.sigmoid_50/Sigmoid:0:0 */;
  %494 = sigmoid(%493) /* ty=Tensor[(1, 20, 20, 128), float32] span=model_90/tf.math.sigmoid_50/Sigmoid:0:0 */;
  %495 = qnn.quantize(%494, 0.00390625f /* ty=float32 span=model_90/tf.math.sigmoid_50/Sigmoid:0:0 */, -128 /* ty=int32 span=model_90/tf.math.sigmoid_50/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 128), int8] span=model_90/tf.math.sigmoid_50/Sigmoid:0:0 */;
  %496 = qnn.mul(%492, %495, 0.0359027f /* ty=float32 span=model_90/tf.math.multiply_216/Mul:0:0 */, -11 /* ty=int32 span=model_90/tf.math.multiply_216/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_90/tf.math.multiply_216/Mul:0:0 */, -128 /* ty=int32 span=model_90/tf.math.multiply_216/Mul:0:0 */, 0.0246353f /* ty=float32 span=model_90/tf.math.multiply_216/Mul:0:0 */, -105 /* ty=int32 span=model_90/tf.math.multiply_216/Mul:0:0 */) /* ty=Tensor[(1, 20, 20, 128), int8] span=model_90/tf.math.multiply_216/Mul:0:0 */;
  %497 = @tvmgen_default_ethos_n_main_99(%480) /* ty=Tensor[(1, 20, 20, 128), int8] */;
  %498 = qnn.add(%482, %496, 0.0255796f /* ty=float32 span=model_90/tf.math.add_70/Add:0:0 */, -106 /* ty=int32 span=model_90/tf.math.add_70/Add:0:0 */, 0.0246353f /* ty=float32 span=model_90/tf.math.add_70/Add:0:0 */, -105 /* ty=int32 span=model_90/tf.math.add_70/Add:0:0 */, 0.0255796f /* ty=float32 span=model_90/tf.math.add_70/Add:0:0 */, -106 /* ty=int32 span=model_90/tf.math.add_70/Add:0:0 */) /* ty=Tensor[(1, 20, 20, 128), int8] span=model_90/tf.math.add_70/Add:0:0 */;
  %499 = (%497, %482, %498) /* ty=(Tensor[(1, 20, 20, 128), int8], Tensor[(1, 20, 20, 128), int8], Tensor[(1, 20, 20, 128), int8]) span=model_90/tf.concat_15/concat:0:0 */;
  %500 = @tvmgen_default_ethos_n_main_101(%499) /* ty=Tensor[(1, 20, 20, 384), int8] */;
  %501 = qnn.conv2d(%500, %v_param_96, -106 /* ty=int32 span=model_90/tf.math.add_71/Add;model_90/tf.nn.convolution_59/convolution;Const_47:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_71/Add;model_90/tf.nn.convolution_59/convolution;Const_47:0:0 */, 0.0255796f /* ty=float32 span=model_90/tf.math.add_71/Add;model_90/tf.nn.convolution_59/convolution;Const_47:0:0 */, meta[relay.Constant][118] /* ty=Tensor[(256), float32] span=model_90/tf.math.add_71/Add;model_90/tf.nn.convolution_59/convolution;Const_47:0:0 */, padding=[0, 0, 0, 0], channels=256, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 20, 20, 256), int32] span=model_90/tf.math.add_71/Add;model_90/tf.nn.convolution_59/convolution;Const_47:0:0 */;
  %502 = nn.bias_add(%501, %v_param_97, axis=3) /* ty=Tensor[(1, 20, 20, 256), int32] span=model_90/tf.math.add_71/Add;model_90/tf.nn.convolution_59/convolution;Const_47:0:0 */;
  %503 = qnn.requantize(%502, meta[relay.Constant][119] /* ty=Tensor[(256), float32] span=model_90/tf.math.add_71/Add;model_90/tf.nn.convolution_59/convolution;Const_47:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_71/Add;model_90/tf.nn.convolution_59/convolution;Const_47:0:0 */, 0.0512907f /* ty=float32 span=model_90/tf.math.add_71/Add;model_90/tf.nn.convolution_59/convolution;Const_47:0:0 */, 9 /* ty=int32 span=model_90/tf.math.add_71/Add;model_90/tf.nn.convolution_59/convolution;Const_47:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 256), int8] span=model_90/tf.math.add_71/Add;model_90/tf.nn.convolution_59/convolution;Const_47:0:0 */;
  %504 = qnn.dequantize(%503, 0.0512907f /* ty=float32 span=model_90/tf.math.sigmoid_51/Sigmoid:0:0 */, 9 /* ty=int32 span=model_90/tf.math.sigmoid_51/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 20, 20, 256), float32] span=model_90/tf.math.sigmoid_51/Sigmoid:0:0 */;
  %505 = sigmoid(%504) /* ty=Tensor[(1, 20, 20, 256), float32] span=model_90/tf.math.sigmoid_51/Sigmoid:0:0 */;
  %506 = qnn.quantize(%505, 0.00390625f /* ty=float32 span=model_90/tf.math.sigmoid_51/Sigmoid:0:0 */, -128 /* ty=int32 span=model_90/tf.math.sigmoid_51/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 256), int8] span=model_90/tf.math.sigmoid_51/Sigmoid:0:0 */;
  %507 = qnn.mul(%503, %506, 0.0512907f /* ty=float32 span=model_90/tf.math.multiply_222/Mul:0:0 */, 9 /* ty=int32 span=model_90/tf.math.multiply_222/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_90/tf.math.multiply_222/Mul:0:0 */, -128 /* ty=int32 span=model_90/tf.math.multiply_222/Mul:0:0 */, 0.0246974f /* ty=float32 span=model_90/tf.math.multiply_222/Mul:0:0 */, -117 /* ty=int32 span=model_90/tf.math.multiply_222/Mul:0:0 */) /* ty=Tensor[(1, 20, 20, 256), int8] span=model_90/tf.math.multiply_222/Mul:0:0 */;
  %508 = qnn.conv2d(%507, %v_param_98, -117 /* ty=int32 span=model_90/tf.math.add_72/Add;model_90/tf.nn.convolution_60/convolution;Const_39:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_72/Add;model_90/tf.nn.convolution_60/convolution;Const_39:0:0 */, 0.0246974f /* ty=float32 span=model_90/tf.math.add_72/Add;model_90/tf.nn.convolution_60/convolution;Const_39:0:0 */, meta[relay.Constant][120] /* ty=Tensor[(64), float32] span=model_90/tf.math.add_72/Add;model_90/tf.nn.convolution_60/convolution;Const_39:0:0 */, padding=[1, 1, 1, 1], channels=64, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 20, 20, 64), int32] span=model_90/tf.math.add_72/Add;model_90/tf.nn.convolution_60/convolution;Const_39:0:0 */;
  %509 = nn.bias_add(%508, %v_param_99, axis=3) /* ty=Tensor[(1, 20, 20, 64), int32] span=model_90/tf.math.add_72/Add;model_90/tf.nn.convolution_60/convolution;Const_39:0:0 */;
  %510 = qnn.requantize(%509, meta[relay.Constant][121] /* ty=Tensor[(64), float32] span=model_90/tf.math.add_72/Add;model_90/tf.nn.convolution_60/convolution;Const_39:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_72/Add;model_90/tf.nn.convolution_60/convolution;Const_39:0:0 */, 0.0671199f /* ty=float32 span=model_90/tf.math.add_72/Add;model_90/tf.nn.convolution_60/convolution;Const_39:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_72/Add;model_90/tf.nn.convolution_60/convolution;Const_39:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 64), int8] span=model_90/tf.math.add_72/Add;model_90/tf.nn.convolution_60/convolution;Const_39:0:0 */;
  %511 = qnn.dequantize(%510, 0.0671199f /* ty=float32 span=model_90/tf.math.sigmoid_52/Sigmoid:0:0 */, 0 /* ty=int32 span=model_90/tf.math.sigmoid_52/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 20, 20, 64), float32] span=model_90/tf.math.sigmoid_52/Sigmoid:0:0 */;
  %512 = sigmoid(%511) /* ty=Tensor[(1, 20, 20, 64), float32] span=model_90/tf.math.sigmoid_52/Sigmoid:0:0 */;
  %513 = qnn.quantize(%512, 0.00390625f /* ty=float32 span=model_90/tf.math.sigmoid_52/Sigmoid:0:0 */, -128 /* ty=int32 span=model_90/tf.math.sigmoid_52/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 64), int8] span=model_90/tf.math.sigmoid_52/Sigmoid:0:0 */;
  %514 = qnn.mul(%510, %513, 0.0671199f /* ty=float32 span=model_90/tf.math.multiply_226/Mul:0:0 */, 0 /* ty=int32 span=model_90/tf.math.multiply_226/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_90/tf.math.multiply_226/Mul:0:0 */, -128 /* ty=int32 span=model_90/tf.math.multiply_226/Mul:0:0 */, 0.0346133f /* ty=float32 span=model_90/tf.math.multiply_226/Mul:0:0 */, -120 /* ty=int32 span=model_90/tf.math.multiply_226/Mul:0:0 */) /* ty=Tensor[(1, 20, 20, 64), int8] span=model_90/tf.math.multiply_226/Mul:0:0 */;
  %515 = qnn.conv2d(%514, %v_param_100, -120 /* ty=int32 span=model_90/tf.math.add_74/Add;model_90/tf.nn.convolution_62/convolution;Const_27:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_74/Add;model_90/tf.nn.convolution_62/convolution;Const_27:0:0 */, 0.0346133f /* ty=float32 span=model_90/tf.math.add_74/Add;model_90/tf.nn.convolution_62/convolution;Const_27:0:0 */, meta[relay.Constant][122] /* ty=Tensor[(64), float32] span=model_90/tf.math.add_74/Add;model_90/tf.nn.convolution_62/convolution;Const_27:0:0 */, padding=[1, 1, 1, 1], channels=64, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 20, 20, 64), int32] span=model_90/tf.math.add_74/Add;model_90/tf.nn.convolution_62/convolution;Const_27:0:0 */;
  %516 = nn.bias_add(%515, %v_param_101, axis=3) /* ty=Tensor[(1, 20, 20, 64), int32] span=model_90/tf.math.add_74/Add;model_90/tf.nn.convolution_62/convolution;Const_27:0:0 */;
  %517 = qnn.requantize(%516, meta[relay.Constant][123] /* ty=Tensor[(64), float32] span=model_90/tf.math.add_74/Add;model_90/tf.nn.convolution_62/convolution;Const_27:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_74/Add;model_90/tf.nn.convolution_62/convolution;Const_27:0:0 */, 0.107182f /* ty=float32 span=model_90/tf.math.add_74/Add;model_90/tf.nn.convolution_62/convolution;Const_27:0:0 */, 5 /* ty=int32 span=model_90/tf.math.add_74/Add;model_90/tf.nn.convolution_62/convolution;Const_27:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 64), int8] span=model_90/tf.math.add_74/Add;model_90/tf.nn.convolution_62/convolution;Const_27:0:0 */;
  %518 = qnn.dequantize(%517, 0.107182f /* ty=float32 span=model_90/tf.math.sigmoid_54/Sigmoid:0:0 */, 5 /* ty=int32 span=model_90/tf.math.sigmoid_54/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 20, 20, 64), float32] span=model_90/tf.math.sigmoid_54/Sigmoid:0:0 */;
  %519 = sigmoid(%518) /* ty=Tensor[(1, 20, 20, 64), float32] span=model_90/tf.math.sigmoid_54/Sigmoid:0:0 */;
  %520 = qnn.quantize(%519, 0.00390625f /* ty=float32 span=model_90/tf.math.sigmoid_54/Sigmoid:0:0 */, -128 /* ty=int32 span=model_90/tf.math.sigmoid_54/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 64), int8] span=model_90/tf.math.sigmoid_54/Sigmoid:0:0 */;
  %521 = qnn.mul(%517, %520, 0.107182f /* ty=float32 span=model_90/tf.math.multiply_234/Mul:0:0 */, 5 /* ty=int32 span=model_90/tf.math.multiply_234/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_90/tf.math.multiply_234/Mul:0:0 */, -128 /* ty=int32 span=model_90/tf.math.multiply_234/Mul:0:0 */, 0.0523756f /* ty=float32 span=model_90/tf.math.multiply_234/Mul:0:0 */, -123 /* ty=int32 span=model_90/tf.math.multiply_234/Mul:0:0 */) /* ty=Tensor[(1, 20, 20, 64), int8] span=model_90/tf.math.multiply_234/Mul:0:0 */;
  %522 = qnn.conv2d(%521, %v_param_102, -123 /* ty=int32 span=model_90/tf.math.add_76/Add;model_90/tf.nn.convolution_64/convolution;Const_16:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_76/Add;model_90/tf.nn.convolution_64/convolution;Const_16:0:0 */, 0.0523756f /* ty=float32 span=model_90/tf.math.add_76/Add;model_90/tf.nn.convolution_64/convolution;Const_16:0:0 */, meta[relay.Constant][124] /* ty=Tensor[(64), float32] span=model_90/tf.math.add_76/Add;model_90/tf.nn.convolution_64/convolution;Const_16:0:0 */, padding=[0, 0, 0, 0], channels=64, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 20, 20, 64), int32] span=model_90/tf.math.add_76/Add;model_90/tf.nn.convolution_64/convolution;Const_16:0:0 */;
  %523 = nn.bias_add(%522, %v_param_103, axis=3) /* ty=Tensor[(1, 20, 20, 64), int32] span=model_90/tf.math.add_76/Add;model_90/tf.nn.convolution_64/convolution;Const_16:0:0 */;
  %524 = qnn.conv2d(%507, %v_param_104, -117 /* ty=int32 span=model_90/tf.math.add_73/Add;model_90/tf.nn.convolution_61/convolution;Const_40:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_73/Add;model_90/tf.nn.convolution_61/convolution;Const_40:0:0 */, 0.0246974f /* ty=float32 span=model_90/tf.math.add_73/Add;model_90/tf.nn.convolution_61/convolution;Const_40:0:0 */, meta[relay.Constant][126] /* ty=Tensor[(64), float32] span=model_90/tf.math.add_73/Add;model_90/tf.nn.convolution_61/convolution;Const_40:0:0 */, padding=[1, 1, 1, 1], channels=64, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 20, 20, 64), int32] span=model_90/tf.math.add_73/Add;model_90/tf.nn.convolution_61/convolution;Const_40:0:0 */;
  %525 = nn.bias_add(%524, %v_param_105, axis=3) /* ty=Tensor[(1, 20, 20, 64), int32] span=model_90/tf.math.add_73/Add;model_90/tf.nn.convolution_61/convolution;Const_40:0:0 */;
  %526 = qnn.requantize(%525, meta[relay.Constant][127] /* ty=Tensor[(64), float32] span=model_90/tf.math.add_73/Add;model_90/tf.nn.convolution_61/convolution;Const_40:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_73/Add;model_90/tf.nn.convolution_61/convolution;Const_40:0:0 */, 0.0326213f /* ty=float32 span=model_90/tf.math.add_73/Add;model_90/tf.nn.convolution_61/convolution;Const_40:0:0 */, -13 /* ty=int32 span=model_90/tf.math.add_73/Add;model_90/tf.nn.convolution_61/convolution;Const_40:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 64), int8] span=model_90/tf.math.add_73/Add;model_90/tf.nn.convolution_61/convolution;Const_40:0:0 */;
  %527 = qnn.dequantize(%526, 0.0326213f /* ty=float32 span=model_90/tf.math.sigmoid_53/Sigmoid:0:0 */, -13 /* ty=int32 span=model_90/tf.math.sigmoid_53/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 20, 20, 64), float32] span=model_90/tf.math.sigmoid_53/Sigmoid:0:0 */;
  %528 = sigmoid(%527) /* ty=Tensor[(1, 20, 20, 64), float32] span=model_90/tf.math.sigmoid_53/Sigmoid:0:0 */;
  %529 = qnn.quantize(%528, 0.00390625f /* ty=float32 span=model_90/tf.math.sigmoid_53/Sigmoid:0:0 */, -128 /* ty=int32 span=model_90/tf.math.sigmoid_53/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 64), int8] span=model_90/tf.math.sigmoid_53/Sigmoid:0:0 */;
  %530 = qnn.mul(%526, %529, 0.0326213f /* ty=float32 span=model_90/tf.math.multiply_230/Mul:0:0 */, -13 /* ty=int32 span=model_90/tf.math.multiply_230/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_90/tf.math.multiply_230/Mul:0:0 */, -128 /* ty=int32 span=model_90/tf.math.multiply_230/Mul:0:0 */, 0.0188647f /* ty=float32 span=model_90/tf.math.multiply_230/Mul:0:0 */, -113 /* ty=int32 span=model_90/tf.math.multiply_230/Mul:0:0 */) /* ty=Tensor[(1, 20, 20, 64), int8] span=model_90/tf.math.multiply_230/Mul:0:0 */;
  %531 = qnn.conv2d(%530, %v_param_106, -113 /* ty=int32 span=model_90/tf.math.add_75/Add;model_90/tf.nn.convolution_63/convolution;Const_28:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_75/Add;model_90/tf.nn.convolution_63/convolution;Const_28:0:0 */, 0.0188647f /* ty=float32 span=model_90/tf.math.add_75/Add;model_90/tf.nn.convolution_63/convolution;Const_28:0:0 */, meta[relay.Constant][128] /* ty=Tensor[(64), float32] span=model_90/tf.math.add_75/Add;model_90/tf.nn.convolution_63/convolution;Const_28:0:0 */, padding=[1, 1, 1, 1], channels=64, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 20, 20, 64), int32] span=model_90/tf.math.add_75/Add;model_90/tf.nn.convolution_63/convolution;Const_28:0:0 */;
  %532 = nn.bias_add(%531, %v_param_107, axis=3) /* ty=Tensor[(1, 20, 20, 64), int32] span=model_90/tf.math.add_75/Add;model_90/tf.nn.convolution_63/convolution;Const_28:0:0 */;
  %533 = qnn.requantize(%532, meta[relay.Constant][129] /* ty=Tensor[(64), float32] span=model_90/tf.math.add_75/Add;model_90/tf.nn.convolution_63/convolution;Const_28:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_75/Add;model_90/tf.nn.convolution_63/convolution;Const_28:0:0 */, 0.029939f /* ty=float32 span=model_90/tf.math.add_75/Add;model_90/tf.nn.convolution_63/convolution;Const_28:0:0 */, -1 /* ty=int32 span=model_90/tf.math.add_75/Add;model_90/tf.nn.convolution_63/convolution;Const_28:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 64), int8] span=model_90/tf.math.add_75/Add;model_90/tf.nn.convolution_63/convolution;Const_28:0:0 */;
  %534 = qnn.dequantize(%533, 0.029939f /* ty=float32 span=model_90/tf.math.sigmoid_55/Sigmoid:0:0 */, -1 /* ty=int32 span=model_90/tf.math.sigmoid_55/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 20, 20, 64), float32] span=model_90/tf.math.sigmoid_55/Sigmoid:0:0 */;
  %535 = sigmoid(%534) /* ty=Tensor[(1, 20, 20, 64), float32] span=model_90/tf.math.sigmoid_55/Sigmoid:0:0 */;
  %536 = qnn.quantize(%535, 0.00390625f /* ty=float32 span=model_90/tf.math.sigmoid_55/Sigmoid:0:0 */, -128 /* ty=int32 span=model_90/tf.math.sigmoid_55/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 64), int8] span=model_90/tf.math.sigmoid_55/Sigmoid:0:0 */;
  %537 = qnn.mul(%533, %536, 0.029939f /* ty=float32 span=model_90/tf.math.multiply_238/Mul:0:0 */, -1 /* ty=int32 span=model_90/tf.math.multiply_238/Mul:0:0 */, 0.00390625f /* ty=float32 span=model_90/tf.math.multiply_238/Mul:0:0 */, -128 /* ty=int32 span=model_90/tf.math.multiply_238/Mul:0:0 */, 0.0158277f /* ty=float32 span=model_90/tf.math.multiply_238/Mul:0:0 */, -110 /* ty=int32 span=model_90/tf.math.multiply_238/Mul:0:0 */) /* ty=Tensor[(1, 20, 20, 64), int8] span=model_90/tf.math.multiply_238/Mul:0:0 */;
  %538 = qnn.conv2d(%537, %v_param_108, -110 /* ty=int32 span=model_90/tf.math.add_77/Add;model_90/tf.nn.convolution_65/convolution;Const_15:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_77/Add;model_90/tf.nn.convolution_65/convolution;Const_15:0:0 */, 0.0158277f /* ty=float32 span=model_90/tf.math.add_77/Add;model_90/tf.nn.convolution_65/convolution;Const_15:0:0 */, meta[relay.Constant][130] /* ty=Tensor[(15), float32] span=model_90/tf.math.add_77/Add;model_90/tf.nn.convolution_65/convolution;Const_15:0:0 */, padding=[0, 0, 0, 0], channels=15, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 20, 20, 15), int32] span=model_90/tf.math.add_77/Add;model_90/tf.nn.convolution_65/convolution;Const_15:0:0 */;
  %539 = nn.bias_add(%538, %v_param_109, axis=3) /* ty=Tensor[(1, 20, 20, 15), int32] span=model_90/tf.math.add_77/Add;model_90/tf.nn.convolution_65/convolution;Const_15:0:0 */;
  %540 = qnn.requantize(%523, meta[relay.Constant][125] /* ty=Tensor[(64), float32] span=model_90/tf.math.add_76/Add;model_90/tf.nn.convolution_64/convolution;Const_16:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_76/Add;model_90/tf.nn.convolution_64/convolution;Const_16:0:0 */, 0.124789f /* ty=float32 span=model_90/tf.math.add_76/Add;model_90/tf.nn.convolution_64/convolution;Const_16:0:0 */, 16 /* ty=int32 span=model_90/tf.math.add_76/Add;model_90/tf.nn.convolution_64/convolution;Const_16:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 64), int8] span=model_90/tf.math.add_76/Add;model_90/tf.nn.convolution_64/convolution;Const_16:0:0 */;
  %541 = qnn.requantize(%539, meta[relay.Constant][131] /* ty=Tensor[(15), float32] span=model_90/tf.math.add_77/Add;model_90/tf.nn.convolution_65/convolution;Const_15:0:0 */, 0 /* ty=int32 span=model_90/tf.math.add_77/Add;model_90/tf.nn.convolution_65/convolution;Const_15:0:0 */, 0.124789f /* ty=float32 span=model_90/tf.math.add_77/Add;model_90/tf.nn.convolution_65/convolution;Const_15:0:0 */, 16 /* ty=int32 span=model_90/tf.math.add_77/Add;model_90/tf.nn.convolution_65/convolution;Const_15:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 20, 20, 15), int8] span=model_90/tf.math.add_77/Add;model_90/tf.nn.convolution_65/convolution;Const_15:0:0 */;
  %542 = (%540, %541) /* ty=(Tensor[(1, 20, 20, 64), int8], Tensor[(1, 20, 20, 15), int8]) span=model_90/tf.concat_16/concat:0:0 */;
  %543 = @tvmgen_default_ethos_n_main_106(%542) /* ty=Tensor[(1, 20, 20, 79), int8] */;
  %544 = transpose(%543, axes=[0, 3, 1, 2]) /* ty=Tensor[(1, 79, 20, 20), int8] span=model_90/tf.compat.v1.transpose_164/transpose:0:0 */;
  %545 = @tvmgen_default_ethos_n_main_75(%381) /* ty=Tensor[(1, 79, 6400), int8] */;
  %546 = @tvmgen_default_ethos_n_main_93(%462) /* ty=Tensor[(1, 79, 1600), int8] */;
  %547 = @tvmgen_default_ethos_n_main_111(%544) /* ty=Tensor[(1, 79, 400), int8] */;
  %548 = (%545, %546, %547) /* ty=(Tensor[(1, 79, 6400), int8], Tensor[(1, 79, 1600), int8], Tensor[(1, 79, 400), int8]) span=model_90/tf.concat_17/concat:0:0 */;
  %549 = @tvmgen_default_ethos_n_main_112(%548) /* ty=Tensor[(1, 79, 8400), int8] */;
  %550 = strided_slice(%549, begin=[0, 0, 0], end=[1, 64, 8400], strides=[1, 1, 1], axes=None) /* ty=Tensor[(1, 64, 8400), int8] span=model_90/tf.strided_slice_21/StridedSlice:0:0 */;
  %551 = @tvmgen_default_ethos_n_main_117(%550) /* ty=Tensor[(1, 64, 8400), int8] */;
  %552 = reshape(%551, newshape=[1, 4, 16, 8400]) /* ty=Tensor[(1, 4, 16, 8400), int8] span=model_90/tf.reshape_71/Reshape:0:0 */;
  %553 = transpose(%552, axes=[0, 1, 3, 2]) /* ty=Tensor[(1, 4, 8400, 16), int8] span=model_90/tf.compat.v1.transpose_177/transpose;model_90/tf.compat.v1.transpose_176/transpose/perm;model_90/tf.compat.v1.transpose_176/transpose;:0:0 */;
  %554 = qnn.dequantize(%553, 0.124789f /* ty=float32 span=model_90/tf.nn.softmax_2/wa/model.23/dfl/Softmax:0:0 */, 16 /* ty=int32 span=model_90/tf.nn.softmax_2/wa/model.23/dfl/Softmax:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 4, 8400, 16), float32] span=model_90/tf.nn.softmax_2/wa/model.23/dfl/Softmax:0:0 */;
  %555 = nn.softmax(%554) /* ty=Tensor[(1, 4, 8400, 16), float32] span=model_90/tf.nn.softmax_2/wa/model.23/dfl/Softmax:0:0 */;
  %556 = qnn.quantize(%555, 0.00390625f /* ty=float32 span=model_90/tf.nn.softmax_2/wa/model.23/dfl/Softmax:0:0 */, -128 /* ty=int32 span=model_90/tf.nn.softmax_2/wa/model.23/dfl/Softmax:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 4, 8400, 16), int8] span=model_90/tf.nn.softmax_2/wa/model.23/dfl/Softmax:0:0 */;
  %557 = qnn.conv2d(%556, %v_param_134, -128 /* ty=int32 span=model_90/tf.nn.convolution_66/convolution:0:0 */, 0 /* ty=int32 span=model_90/tf.nn.convolution_66/convolution:0:0 */, 0.00390625f /* ty=float32 span=model_90/tf.nn.convolution_66/convolution:0:0 */, 0.11811f /* ty=float32 span=model_90/tf.nn.convolution_66/convolution:0:0 */, padding=[0, 0, 0, 0], channels=1, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 4, 8400, 1), int32] span=model_90/tf.nn.convolution_66/convolution:0:0 */;
  %558 = nn.bias_add(%557, %v_param_135, axis=3) /* ty=Tensor[(1, 4, 8400, 1), int32] span=model_90/tf.nn.convolution_66/convolution:0:0 */;
  %559 = qnn.requantize(%558, 0.000461368f /* ty=float32 span=model_90/tf.nn.convolution_66/convolution:0:0 */, 0 /* ty=int32 span=model_90/tf.nn.convolution_66/convolution:0:0 */, 0.0418361f /* ty=float32 span=model_90/tf.nn.convolution_66/convolution:0:0 */, -128 /* ty=int32 span=model_90/tf.nn.convolution_66/convolution:0:0 */, axis=3, out_dtype="int8") /* ty=Tensor[(1, 4, 8400, 1), int8] span=model_90/tf.nn.convolution_66/convolution:0:0 */;
  %560 = reshape(%559, newshape=[1, 1, 4, 8400]) /* ty=Tensor[(1, 1, 4, 8400), int8] span=model_90/tf.compat.v1.transpose_182/transpose;:0:0 */;
  %561 = qnn.mul(%560, %v_param_136, 0.0418361f /* ty=float32 span=model_90/tf.math.multiply_241/Mul;model_90/tf.reshape_74/Reshape;model_90/tf.math.multiply_241/Mul/y:0:0 */, -128 /* ty=int32 span=model_90/tf.math.multiply_241/Mul;model_90/tf.reshape_74/Reshape;model_90/tf.math.multiply_241/Mul/y:0:0 */, 0.000196078f /* ty=float32 span=model_90/tf.math.multiply_241/Mul;model_90/tf.reshape_74/Reshape;model_90/tf.math.multiply_241/Mul/y:0:0 */, -128 /* ty=int32 span=model_90/tf.math.multiply_241/Mul;model_90/tf.reshape_74/Reshape;model_90/tf.math.multiply_241/Mul/y:0:0 */, 0.00209034f /* ty=float32 span=model_90/tf.math.multiply_241/Mul;model_90/tf.reshape_74/Reshape;model_90/tf.math.multiply_241/Mul/y:0:0 */, -128 /* ty=int32 span=model_90/tf.math.multiply_241/Mul;model_90/tf.reshape_74/Reshape;model_90/tf.math.multiply_241/Mul/y:0:0 */) /* ty=Tensor[(1, 1, 4, 8400), int8] span=model_90/tf.math.multiply_241/Mul;model_90/tf.reshape_74/Reshape;model_90/tf.math.multiply_241/Mul/y:0:0 */;
  %562 = reshape(%561, newshape=[1, 4, 8400]) /* ty=Tensor[(1, 4, 8400), int8] span=model_90/tf.math.multiply_241/Mul;model_90/tf.reshape_74/Reshape;model_90/tf.math.multiply_241/Mul/y1:0:0 */;
  %563 = strided_slice(%562, begin=[0, 0, 0], end=[1, 2, 8400], strides=[1, 1, 1], axes=None) /* ty=Tensor[(1, 2, 8400), int8] span=model_90/tf.strided_slice_23/StridedSlice:0:0 */;
  %564 = @tvmgen_default_ethos_n_main_118(%563) /* ty=Tensor[(1, 2, 8400), int8] */;
  %565 = strided_slice(%562, begin=[0, 2, 0], end=[1, 4, 8400], strides=[1, 1, 1], axes=None) /* ty=Tensor[(1, 2, 8400), int8] span=model_90/tf.strided_slice_24/StridedSlice:0:0 */;
  %566 = @tvmgen_default_ethos_n_main_119(%565) /* ty=Tensor[(1, 2, 8400), int8] */;
  %567 = qnn.subtract(%v_param_137, %564, 0.00389706f /* ty=float32 span=model_90/tf.math.subtract/Sub:0:0 */, -128 /* ty=int32 span=model_90/tf.math.subtract/Sub:0:0 */, 0.00209034f /* ty=float32 span=model_90/tf.math.subtract/Sub:0:0 */, -128 /* ty=int32 span=model_90/tf.math.subtract/Sub:0:0 */, 0.00443674f /* ty=float32 span=model_90/tf.math.subtract/Sub:0:0 */, -96 /* ty=int32 span=model_90/tf.math.subtract/Sub:0:0 */) /* ty=Tensor[(1, 2, 8400), int8] span=model_90/tf.math.subtract/Sub:0:0 */;
  %568 = qnn.add(%566, %v_param_138, 0.00209034f /* ty=float32 span=model_90/tf.math.add_78/Add:0:0 */, -128 /* ty=int32 span=model_90/tf.math.add_78/Add:0:0 */, 0.00389706f /* ty=float32 span=model_90/tf.math.add_78/Add:0:0 */, -128 /* ty=int32 span=model_90/tf.math.add_78/Add:0:0 */, 0.00481051f /* ty=float32 span=model_90/tf.math.add_78/Add:0:0 */, -128 /* ty=int32 span=model_90/tf.math.add_78/Add:0:0 */) /* ty=Tensor[(1, 2, 8400), int8] span=model_90/tf.math.add_78/Add:0:0 */;
  %569 = qnn.add(%567, %568, 0.00443674f /* ty=float32 span=model_90/tf.math.add_79/Add:0:0 */, -96 /* ty=int32 span=model_90/tf.math.add_79/Add:0:0 */, 0.00481051f /* ty=float32 span=model_90/tf.math.add_79/Add:0:0 */, -128 /* ty=int32 span=model_90/tf.math.add_79/Add:0:0 */, 0.00782389f /* ty=float32 span=model_90/tf.math.add_79/Add:0:0 */, -127 /* ty=int32 span=model_90/tf.math.add_79/Add:0:0 */) /* ty=Tensor[(1, 2, 8400), int8] span=model_90/tf.math.add_79/Add:0:0 */;
  %570 = strided_slice(%549, begin=[0, 64, 0], end=[1, 79, 8400], strides=[1, 1, 1], axes=None) /* ty=Tensor[(1, 15, 8400), int8] span=model_90/tf.strided_slice_22/StridedSlice:0:0 */;
  %571 = @tvmgen_default_ethos_n_main_120(%570) /* ty=Tensor[(1, 15, 8400), int8] */;
  %572 = qnn.dequantize(%571, 0.124789f /* ty=float32 span=model_90/tf.math.sigmoid_56/Sigmoid:0:0 */, 16 /* ty=int32 span=model_90/tf.math.sigmoid_56/Sigmoid:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 15, 8400), float32] span=model_90/tf.math.sigmoid_56/Sigmoid:0:0 */;
  %573 = sigmoid(%572) /* ty=Tensor[(1, 15, 8400), float32] span=model_90/tf.math.sigmoid_56/Sigmoid:0:0 */;
  %574 = qnn.quantize(%573, 0.00390625f /* ty=float32 span=model_90/tf.math.sigmoid_56/Sigmoid:0:0 */, -128 /* ty=int32 span=model_90/tf.math.sigmoid_56/Sigmoid:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 15, 8400), int8] span=model_90/tf.math.sigmoid_56/Sigmoid:0:0 */;
  %575 = qnn.mul(%569, %v_param_139, 0.00782389f /* ty=float32 span=model_90/tf.math.divide/truediv;model_90/tf.math.divide/truediv/y:0:0 */, -127 /* ty=int32 span=model_90/tf.math.divide/truediv;model_90/tf.math.divide/truediv/y:0:0 */, 0.00196078f /* ty=float32 span=model_90/tf.math.divide/truediv;model_90/tf.math.divide/truediv/y:0:0 */, -128 /* ty=int32 span=model_90/tf.math.divide/truediv;model_90/tf.math.divide/truediv/y:0:0 */, 0.00391194f /* ty=float32 span=model_90/tf.math.divide/truediv;model_90/tf.math.divide/truediv/y:0:0 */, -127 /* ty=int32 span=model_90/tf.math.divide/truediv;model_90/tf.math.divide/truediv/y:0:0 */) /* ty=Tensor[(1, 2, 8400), int8] span=model_90/tf.math.divide/truediv;model_90/tf.math.divide/truediv/y:0:0 */;
  %576 = qnn.subtract(%568, %567, 0.00481051f /* ty=float32 span=model_90/tf.math.subtract_1/Sub:0:0 */, -128 /* ty=int32 span=model_90/tf.math.subtract_1/Sub:0:0 */, 0.00443674f /* ty=float32 span=model_90/tf.math.subtract_1/Sub:0:0 */, -96 /* ty=int32 span=model_90/tf.math.subtract_1/Sub:0:0 */, 0.00391194f /* ty=float32 span=model_90/tf.math.subtract_1/Sub:0:0 */, -127 /* ty=int32 span=model_90/tf.math.subtract_1/Sub:0:0 */) /* ty=Tensor[(1, 2, 8400), int8] span=model_90/tf.math.subtract_1/Sub:0:0 */;
  %577 = qnn.requantize(%574, 0.00390625f /* ty=float32 span=model_90/tf.math.sigmoid_56/Sigmoid1:0:0 */, -128 /* ty=int32 span=model_90/tf.math.sigmoid_56/Sigmoid1:0:0 */, 0.00391194f /* ty=float32 span=model_90/tf.math.sigmoid_56/Sigmoid1:0:0 */, -127 /* ty=int32 span=model_90/tf.math.sigmoid_56/Sigmoid1:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 15, 8400), int8] span=model_90/tf.math.sigmoid_56/Sigmoid1:0:0 */;
  %578 = (%575, %576, %577) /* ty=(Tensor[(1, 2, 8400), int8], Tensor[(1, 2, 8400), int8], Tensor[(1, 15, 8400), int8]) span=StatefulPartitionedCall:0:0:0 */;
  @tvmgen_default_ethos_n_main_121(%578) /* ty=Tensor[(1, 19, 8400), int8] */
}

def @tvmgen_default_ethos_n_main_0(%ethos-n_0_i0: Tensor[(1, 160, 160, 32), int8] /* ty=Tensor[(1, 160, 160, 32), int8] */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_0") -> Tensor[(1, 160, 160, 32), int8] {
  reshape(%ethos-n_0_i0, newshape=[1, 160, 160, 32]) /* ty=Tensor[(1, 160, 160, 32), int8] span=model_90/tf.strided_slice/StridedSlice:0:0 */
}

def @tvmgen_default_ethos_n_main_1(%ethos-n_1_i0: Tensor[(1, 160, 160, 32), int8] /* ty=Tensor[(1, 160, 160, 32), int8] */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_1") -> Tensor[(1, 160, 160, 32), int8] {
  reshape(%ethos-n_1_i0, newshape=[1, 160, 160, 32]) /* ty=Tensor[(1, 160, 160, 32), int8] span=model_90/tf.strided_slice_1/StridedSlice:0:0 */
}

def @tvmgen_default_ethos_n_main_100(%ethos-n_100_i0: Tensor[(1, 20, 20, 128), int8] /* ty=Tensor[(1, 20, 20, 128), int8] */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_100") -> Tensor[(1, 20, 20, 128), int8] {
  reshape(%ethos-n_100_i0, newshape=[1, 20, 20, 128]) /* ty=Tensor[(1, 20, 20, 128), int8] span=model_90/tf.strided_slice_20/StridedSlice:0:0 */
}

def @tvmgen_default_ethos_n_main_101(%ethos-n_101_i0: (Tensor[(1, 20, 20, 128), int8], Tensor[(1, 20, 20, 128), int8], Tensor[(1, 20, 20, 128), int8]) /* ty=(Tensor[(1, 20, 20, 128), int8], Tensor[(1, 20, 20, 128), int8], Tensor[(1, 20, 20, 128), int8]) */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_101") -> Tensor[(1, 20, 20, 384), int8] {
  %579 = (0.0255796f /* ty=float32 span=model_90/tf.concat_15/concat:0:0 */, 0.0255796f /* ty=float32 span=model_90/tf.concat_15/concat:0:0 */, 0.0255796f /* ty=float32 span=model_90/tf.concat_15/concat:0:0 */) /* ty=(float32, float32, float32) span=model_90/tf.concat_15/concat:0:0 */;
  %580 = (-106 /* ty=int32 span=model_90/tf.concat_15/concat:0:0 */, -106 /* ty=int32 span=model_90/tf.concat_15/concat:0:0 */, -106 /* ty=int32 span=model_90/tf.concat_15/concat:0:0 */) /* ty=(int32, int32, int32) span=model_90/tf.concat_15/concat:0:0 */;
  qnn.concatenate(%ethos-n_101_i0, %579, %580, 0.0255796f /* ty=float32 span=model_90/tf.concat_15/concat:0:0 */, -106 /* ty=int32 span=model_90/tf.concat_15/concat:0:0 */, axis=3) /* ty=Tensor[(1, 20, 20, 384), int8] span=model_90/tf.concat_15/concat:0:0 */
}

def @tvmgen_default_ethos_n_main_106(%ethos-n_106_i0: (Tensor[(1, 20, 20, 64), int8], Tensor[(1, 20, 20, 15), int8]) /* ty=(Tensor[(1, 20, 20, 64), int8], Tensor[(1, 20, 20, 15), int8]) */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_106") -> Tensor[(1, 20, 20, 79), int8] {
  %581 = (0.124789f /* ty=float32 span=model_90/tf.concat_16/concat:0:0 */, 0.124789f /* ty=float32 span=model_90/tf.concat_16/concat:0:0 */) /* ty=(float32, float32) span=model_90/tf.concat_16/concat:0:0 */;
  %582 = (16 /* ty=int32 span=model_90/tf.concat_16/concat:0:0 */, 16 /* ty=int32 span=model_90/tf.concat_16/concat:0:0 */) /* ty=(int32, int32) span=model_90/tf.concat_16/concat:0:0 */;
  qnn.concatenate(%ethos-n_106_i0, %581, %582, 0.124789f /* ty=float32 span=model_90/tf.concat_16/concat:0:0 */, 16 /* ty=int32 span=model_90/tf.concat_16/concat:0:0 */, axis=3) /* ty=Tensor[(1, 20, 20, 79), int8] span=model_90/tf.concat_16/concat:0:0 */
}

def @tvmgen_default_ethos_n_main_111(%ethos-n_111_i0: Tensor[(1, 79, 20, 20), int8] /* ty=Tensor[(1, 79, 20, 20), int8] */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_111") -> Tensor[(1, 79, 400), int8] {
  reshape(%ethos-n_111_i0, newshape=[1, 79, 400]) /* ty=Tensor[(1, 79, 400), int8] span=model_90/tf.reshape_63/Reshape:0:0 */
}

def @tvmgen_default_ethos_n_main_112(%ethos-n_112_i0: (Tensor[(1, 79, 6400), int8], Tensor[(1, 79, 1600), int8], Tensor[(1, 79, 400), int8]) /* ty=(Tensor[(1, 79, 6400), int8], Tensor[(1, 79, 1600), int8], Tensor[(1, 79, 400), int8]) */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_112") -> Tensor[(1, 79, 8400), int8] {
  %583 = (0.124789f /* ty=float32 span=model_90/tf.concat_17/concat:0:0 */, 0.124789f /* ty=float32 span=model_90/tf.concat_17/concat:0:0 */, 0.124789f /* ty=float32 span=model_90/tf.concat_17/concat:0:0 */) /* ty=(float32, float32, float32) span=model_90/tf.concat_17/concat:0:0 */;
  %584 = (16 /* ty=int32 span=model_90/tf.concat_17/concat:0:0 */, 16 /* ty=int32 span=model_90/tf.concat_17/concat:0:0 */, 16 /* ty=int32 span=model_90/tf.concat_17/concat:0:0 */) /* ty=(int32, int32, int32) span=model_90/tf.concat_17/concat:0:0 */;
  qnn.concatenate(%ethos-n_112_i0, %583, %584, 0.124789f /* ty=float32 span=model_90/tf.concat_17/concat:0:0 */, 16 /* ty=int32 span=model_90/tf.concat_17/concat:0:0 */, axis=2) /* ty=Tensor[(1, 79, 8400), int8] span=model_90/tf.concat_17/concat:0:0 */
}

def @tvmgen_default_ethos_n_main_117(%ethos-n_117_i0: Tensor[(1, 64, 8400), int8] /* ty=Tensor[(1, 64, 8400), int8] */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_117") -> Tensor[(1, 64, 8400), int8] {
  reshape(%ethos-n_117_i0, newshape=[1, 64, 8400]) /* ty=Tensor[(1, 64, 8400), int8] span=model_90/tf.strided_slice_21/StridedSlice:0:0 */
}

def @tvmgen_default_ethos_n_main_118(%ethos-n_118_i0: Tensor[(1, 2, 8400), int8] /* ty=Tensor[(1, 2, 8400), int8] */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_118") -> Tensor[(1, 2, 8400), int8] {
  reshape(%ethos-n_118_i0, newshape=[1, 2, 8400]) /* ty=Tensor[(1, 2, 8400), int8] span=model_90/tf.strided_slice_23/StridedSlice:0:0 */
}

def @tvmgen_default_ethos_n_main_119(%ethos-n_119_i0: Tensor[(1, 2, 8400), int8] /* ty=Tensor[(1, 2, 8400), int8] */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_119") -> Tensor[(1, 2, 8400), int8] {
  reshape(%ethos-n_119_i0, newshape=[1, 2, 8400]) /* ty=Tensor[(1, 2, 8400), int8] span=model_90/tf.strided_slice_24/StridedSlice:0:0 */
}

def @tvmgen_default_ethos_n_main_120(%ethos-n_120_i0: Tensor[(1, 15, 8400), int8] /* ty=Tensor[(1, 15, 8400), int8] */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_120") -> Tensor[(1, 15, 8400), int8] {
  reshape(%ethos-n_120_i0, newshape=[1, 15, 8400]) /* ty=Tensor[(1, 15, 8400), int8] span=model_90/tf.strided_slice_22/StridedSlice:0:0 */
}

def @tvmgen_default_ethos_n_main_121(%ethos-n_121_i0: (Tensor[(1, 2, 8400), int8], Tensor[(1, 2, 8400), int8], Tensor[(1, 15, 8400), int8]) /* ty=(Tensor[(1, 2, 8400), int8], Tensor[(1, 2, 8400), int8], Tensor[(1, 15, 8400), int8]) */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_121") -> Tensor[(1, 19, 8400), int8] {
  %585 = (0.00391194f /* ty=float32 span=StatefulPartitionedCall:0:0:0 */, 0.00391194f /* ty=float32 span=StatefulPartitionedCall:0:0:0 */, 0.00391194f /* ty=float32 span=StatefulPartitionedCall:0:0:0 */) /* ty=(float32, float32, float32) span=StatefulPartitionedCall:0:0:0 */;
  %586 = (-127 /* ty=int32 span=StatefulPartitionedCall:0:0:0 */, -127 /* ty=int32 span=StatefulPartitionedCall:0:0:0 */, -127 /* ty=int32 span=StatefulPartitionedCall:0:0:0 */) /* ty=(int32, int32, int32) span=StatefulPartitionedCall:0:0:0 */;
  qnn.concatenate(%ethos-n_121_i0, %585, %586, 0.00391194f /* ty=float32 span=StatefulPartitionedCall:0:0:0 */, -127 /* ty=int32 span=StatefulPartitionedCall:0:0:0 */, axis=1) /* ty=Tensor[(1, 19, 8400), int8] span=StatefulPartitionedCall:0:0:0 */
}

def @tvmgen_default_ethos_n_main_14(%ethos-n_14_i0: Tensor[(1, 40, 40, 64), int8] /* ty=Tensor[(1, 40, 40, 64), int8] */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_14") -> Tensor[(1, 40, 40, 64), int8] {
  reshape(%ethos-n_14_i0, newshape=[1, 40, 40, 64]) /* ty=Tensor[(1, 40, 40, 64), int8] span=model_90/tf.strided_slice_4/StridedSlice:0:0 */
}

def @tvmgen_default_ethos_n_main_15(%ethos-n_15_i0: Tensor[(1, 40, 40, 64), int8] /* ty=Tensor[(1, 40, 40, 64), int8] */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_15") -> Tensor[(1, 40, 40, 64), int8] {
  reshape(%ethos-n_15_i0, newshape=[1, 40, 40, 64]) /* ty=Tensor[(1, 40, 40, 64), int8] span=model_90/tf.strided_slice_5/StridedSlice:0:0 */
}

def @tvmgen_default_ethos_n_main_16(%ethos-n_16_i0: (Tensor[(1, 40, 40, 64), int8], Tensor[(1, 40, 40, 64), int8], Tensor[(1, 40, 40, 64), int8]) /* ty=(Tensor[(1, 40, 40, 64), int8], Tensor[(1, 40, 40, 64), int8], Tensor[(1, 40, 40, 64), int8]) */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_16") -> Tensor[(1, 40, 40, 192), int8] {
  %587 = (0.040282f /* ty=float32 span=model_90/tf.concat_2/concat:0:0 */, 0.040282f /* ty=float32 span=model_90/tf.concat_2/concat:0:0 */, 0.040282f /* ty=float32 span=model_90/tf.concat_2/concat:0:0 */) /* ty=(float32, float32, float32) span=model_90/tf.concat_2/concat:0:0 */;
  %588 = (-114 /* ty=int32 span=model_90/tf.concat_2/concat:0:0 */, -114 /* ty=int32 span=model_90/tf.concat_2/concat:0:0 */, -114 /* ty=int32 span=model_90/tf.concat_2/concat:0:0 */) /* ty=(int32, int32, int32) span=model_90/tf.concat_2/concat:0:0 */;
  qnn.concatenate(%ethos-n_16_i0, %587, %588, 0.040282f /* ty=float32 span=model_90/tf.concat_2/concat:0:0 */, -114 /* ty=int32 span=model_90/tf.concat_2/concat:0:0 */, axis=3) /* ty=Tensor[(1, 40, 40, 192), int8] span=model_90/tf.concat_2/concat:0:0 */
}

def @tvmgen_default_ethos_n_main_2(%ethos-n_2_i0: (Tensor[(1, 160, 160, 32), int8], Tensor[(1, 160, 160, 32), int8], Tensor[(1, 160, 160, 32), int8]) /* ty=(Tensor[(1, 160, 160, 32), int8], Tensor[(1, 160, 160, 32), int8], Tensor[(1, 160, 160, 32), int8]) */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_2") -> Tensor[(1, 160, 160, 96), int8] {
  %589 = (0.0920584f /* ty=float32 span=model_90/tf.concat/concat:0:0 */, 0.0920584f /* ty=float32 span=model_90/tf.concat/concat:0:0 */, 0.0920584f /* ty=float32 span=model_90/tf.concat/concat:0:0 */) /* ty=(float32, float32, float32) span=model_90/tf.concat/concat:0:0 */;
  %590 = (-125 /* ty=int32 span=model_90/tf.concat/concat:0:0 */, -125 /* ty=int32 span=model_90/tf.concat/concat:0:0 */, -125 /* ty=int32 span=model_90/tf.concat/concat:0:0 */) /* ty=(int32, int32, int32) span=model_90/tf.concat/concat:0:0 */;
  qnn.concatenate(%ethos-n_2_i0, %589, %590, 0.0920584f /* ty=float32 span=model_90/tf.concat/concat:0:0 */, -125 /* ty=int32 span=model_90/tf.concat/concat:0:0 */, axis=3) /* ty=Tensor[(1, 160, 160, 96), int8] span=model_90/tf.concat/concat:0:0 */
}

def @tvmgen_default_ethos_n_main_21(%ethos-n_21_i0: Tensor[(1, 20, 20, 128), int8] /* ty=Tensor[(1, 20, 20, 128), int8] */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_21") -> Tensor[(1, 20, 20, 128), int8] {
  reshape(%ethos-n_21_i0, newshape=[1, 20, 20, 128]) /* ty=Tensor[(1, 20, 20, 128), int8] span=model_90/tf.strided_slice_6/StridedSlice:0:0 */
}

def @tvmgen_default_ethos_n_main_22(%ethos-n_22_i0: Tensor[(1, 20, 20, 128), int8] /* ty=Tensor[(1, 20, 20, 128), int8] */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_22") -> Tensor[(1, 20, 20, 128), int8] {
  reshape(%ethos-n_22_i0, newshape=[1, 20, 20, 128]) /* ty=Tensor[(1, 20, 20, 128), int8] span=model_90/tf.strided_slice_7/StridedSlice:0:0 */
}

def @tvmgen_default_ethos_n_main_23(%ethos-n_23_i0: (Tensor[(1, 20, 20, 128), int8], Tensor[(1, 20, 20, 128), int8], Tensor[(1, 20, 20, 128), int8]) /* ty=(Tensor[(1, 20, 20, 128), int8], Tensor[(1, 20, 20, 128), int8], Tensor[(1, 20, 20, 128), int8]) */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_23") -> Tensor[(1, 20, 20, 384), int8] {
  %591 = (0.0288433f /* ty=float32 span=model_90/tf.concat_3/concat:0:0 */, 0.0288433f /* ty=float32 span=model_90/tf.concat_3/concat:0:0 */, 0.0288433f /* ty=float32 span=model_90/tf.concat_3/concat:0:0 */) /* ty=(float32, float32, float32) span=model_90/tf.concat_3/concat:0:0 */;
  %592 = (-109 /* ty=int32 span=model_90/tf.concat_3/concat:0:0 */, -109 /* ty=int32 span=model_90/tf.concat_3/concat:0:0 */, -109 /* ty=int32 span=model_90/tf.concat_3/concat:0:0 */) /* ty=(int32, int32, int32) span=model_90/tf.concat_3/concat:0:0 */;
  qnn.concatenate(%ethos-n_23_i0, %591, %592, 0.0288433f /* ty=float32 span=model_90/tf.concat_3/concat:0:0 */, -109 /* ty=int32 span=model_90/tf.concat_3/concat:0:0 */, axis=3) /* ty=Tensor[(1, 20, 20, 384), int8] span=model_90/tf.concat_3/concat:0:0 */
}

def @tvmgen_default_ethos_n_main_28(%ethos-n_28_i0: Tensor[(1, 20, 20, 128), int8] /* ty=Tensor[(1, 20, 20, 128), int8] */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_28") -> (Tensor[(1, 20, 20, 128), int8], Tensor[(1, 20, 20, 128), int8], Tensor[(1, 20, 20, 128), int8]) {
  %593 = nn.max_pool2d(%ethos-n_28_i0, pool_size=[5, 5], padding=[2, 2, 2, 2], layout="NHWC") /* ty=Tensor[(1, 20, 20, 128), int8] span=model_90/tf.compat.v1.nn.pool/max_pool:0:0 */;
  %594 = nn.max_pool2d(%593, pool_size=[5, 5], padding=[2, 2, 2, 2], layout="NHWC") /* ty=Tensor[(1, 20, 20, 128), int8] span=model_90/tf.compat.v1.nn.pool_1/max_pool:0:0 */;
  %595 = nn.max_pool2d(%594, pool_size=[5, 5], padding=[2, 2, 2, 2], layout="NHWC") /* ty=Tensor[(1, 20, 20, 128), int8] span=model_90/tf.compat.v1.nn.pool_2/max_pool:0:0 */;
  (%593, %594, %595) /* ty=(Tensor[(1, 20, 20, 128), int8], Tensor[(1, 20, 20, 128), int8], Tensor[(1, 20, 20, 128), int8]) */
}

def @tvmgen_default_ethos_n_main_29(%ethos-n_29_i0: (Tensor[(1, 20, 20, 128), int8], Tensor[(1, 20, 20, 128), int8], Tensor[(1, 20, 20, 128), int8], Tensor[(1, 20, 20, 128), int8]) /* ty=(Tensor[(1, 20, 20, 128), int8], Tensor[(1, 20, 20, 128), int8], Tensor[(1, 20, 20, 128), int8], Tensor[(1, 20, 20, 128), int8]) */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_29") -> Tensor[(1, 20, 20, 512), int8] {
  %596 = (0.0282958f /* ty=float32 span=model_90/tf.concat_4/concat:0:0 */, 0.0282958f /* ty=float32 span=model_90/tf.concat_4/concat:0:0 */, 0.0282958f /* ty=float32 span=model_90/tf.concat_4/concat:0:0 */, 0.0282958f /* ty=float32 span=model_90/tf.concat_4/concat:0:0 */) /* ty=(float32, float32, float32, float32) span=model_90/tf.concat_4/concat:0:0 */;
  %597 = (-118 /* ty=int32 span=model_90/tf.concat_4/concat:0:0 */, -118 /* ty=int32 span=model_90/tf.concat_4/concat:0:0 */, -118 /* ty=int32 span=model_90/tf.concat_4/concat:0:0 */, -118 /* ty=int32 span=model_90/tf.concat_4/concat:0:0 */) /* ty=(int32, int32, int32, int32) span=model_90/tf.concat_4/concat:0:0 */;
  qnn.concatenate(%ethos-n_29_i0, %596, %597, 0.0282958f /* ty=float32 span=model_90/tf.concat_4/concat:0:0 */, -118 /* ty=int32 span=model_90/tf.concat_4/concat:0:0 */, axis=3) /* ty=Tensor[(1, 20, 20, 512), int8] span=model_90/tf.concat_4/concat:0:0 */
}

def @tvmgen_default_ethos_n_main_34(%ethos-n_34_i0: Tensor[(1, 20, 20, 128), int8] /* ty=Tensor[(1, 20, 20, 128), int8] */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_34") -> Tensor[(1, 20, 20, 128), int8] {
  reshape(%ethos-n_34_i0, newshape=[1, 20, 20, 128]) /* ty=Tensor[(1, 20, 20, 128), int8] span=model_90/tf.strided_slice_8/StridedSlice:0:0 */
}

def @tvmgen_default_ethos_n_main_35(%ethos-n_35_i0: Tensor[(1, 20, 20, 128), int8] /* ty=Tensor[(1, 20, 20, 128), int8] */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_35") -> Tensor[(1, 20, 20, 128), int8] {
  reshape(%ethos-n_35_i0, newshape=[1, 20, 20, 128]) /* ty=Tensor[(1, 20, 20, 128), int8] span=model_90/tf.strided_slice_9/StridedSlice:0:0 */
}

def @tvmgen_default_ethos_n_main_36(%ethos-n_36_i0: Tensor[(1, 256, 20, 20), int8] /* ty=Tensor[(1, 256, 20, 20), int8] */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_36") -> Tensor[(1, 2, 128, 400), int8] {
  reshape(%ethos-n_36_i0, newshape=[1, 2, 128, 400]) /* ty=Tensor[(1, 2, 128, 400), int8] span=model_90/tf.reshape_2/Reshape:0:0 */
}

def @tvmgen_default_ethos_n_main_37(%ethos-n_37_i0: Tensor[(1, 2, 64, 400), int8] /* ty=Tensor[(1, 2, 64, 400), int8] */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_37") -> (Tensor[(1, 2, 64, 400), int8], Tensor[(1, 128, 20, 20), int8]) {
  %598 = reshape(%ethos-n_37_i0, newshape=[1, 2, 64, 400]) /* ty=Tensor[(1, 2, 64, 400), int8] span=model_90/tf.strided_slice_12/StridedSlice:0:0 */;
  %599 = reshape(%598, newshape=[1, 128, 20, 20]) /* ty=Tensor[(1, 128, 20, 20), int8] span=model_90/tf.reshape_5/Reshape:0:0 */;
  (%598, %599) /* ty=(Tensor[(1, 2, 64, 400), int8], Tensor[(1, 128, 20, 20), int8]) */
}

def @tvmgen_default_ethos_n_main_38(%ethos-n_38_i0: Tensor[(1, 2, 32, 400), int8] /* ty=Tensor[(1, 2, 32, 400), int8] */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_38") -> Tensor[(1, 2, 32, 400), int8] {
  reshape(%ethos-n_38_i0, newshape=[1, 2, 32, 400]) /* ty=Tensor[(1, 2, 32, 400), int8] span=model_90/tf.strided_slice_10/StridedSlice:0:0 */
}

def @tvmgen_default_ethos_n_main_39(%ethos-n_39_i0: Tensor[(1, 2, 32, 400), int8] /* ty=Tensor[(1, 2, 32, 400), int8] */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_39") -> Tensor[(1, 2, 32, 400), int8] {
  reshape(%ethos-n_39_i0, newshape=[1, 2, 32, 400]) /* ty=Tensor[(1, 2, 32, 400), int8] span=model_90/tf.strided_slice_11/StridedSlice:0:0 */
}

def @tvmgen_default_ethos_n_main_40(%ethos-n_40_i0: Tensor[(1, 2, 64, 400), int8] /* ty=Tensor[(1, 2, 64, 400), int8] */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_40") -> Tensor[(1, 128, 20, 20), int8] {
  reshape(%ethos-n_40_i0, newshape=[1, 128, 20, 20]) /* ty=Tensor[(1, 128, 20, 20), int8] span=model_90/tf.reshape_31/Reshape:0:0 */
}

def @tvmgen_default_ethos_n_main_41(%ethos-n_41_i0: (Tensor[(1, 20, 20, 128), int8], Tensor[(1, 20, 20, 128), int8]) /* ty=(Tensor[(1, 20, 20, 128), int8], Tensor[(1, 20, 20, 128), int8]) */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_41") -> Tensor[(1, 20, 20, 256), int8] {
  %600 = (0.0930227f /* ty=float32 span=model_90/tf.concat_5/concat:0:0 */, 0.0930227f /* ty=float32 span=model_90/tf.concat_5/concat:0:0 */) /* ty=(float32, float32) span=model_90/tf.concat_5/concat:0:0 */;
  %601 = (-51 /* ty=int32 span=model_90/tf.concat_5/concat:0:0 */, -51 /* ty=int32 span=model_90/tf.concat_5/concat:0:0 */) /* ty=(int32, int32) span=model_90/tf.concat_5/concat:0:0 */;
  qnn.concatenate(%ethos-n_41_i0, %600, %601, 0.0930227f /* ty=float32 span=model_90/tf.concat_5/concat:0:0 */, -51 /* ty=int32 span=model_90/tf.concat_5/concat:0:0 */, axis=3) /* ty=Tensor[(1, 20, 20, 256), int8] span=model_90/tf.concat_5/concat:0:0 */
}

def @tvmgen_default_ethos_n_main_46(%ethos-n_46_i0: (Tensor[(1, 40, 40, 256), int8], Tensor[(1, 40, 40, 128), int8]) /* ty=(Tensor[(1, 40, 40, 256), int8], Tensor[(1, 40, 40, 128), int8]) */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_46") -> Tensor[(1, 40, 40, 384), int8] {
  %602 = (0.019251f /* ty=float32 span=model_90/tf.concat_6/concat:0:0 */, 0.019251f /* ty=float32 span=model_90/tf.concat_6/concat:0:0 */) /* ty=(float32, float32) span=model_90/tf.concat_6/concat:0:0 */;
  %603 = (-114 /* ty=int32 span=model_90/tf.concat_6/concat:0:0 */, -114 /* ty=int32 span=model_90/tf.concat_6/concat:0:0 */) /* ty=(int32, int32) span=model_90/tf.concat_6/concat:0:0 */;
  qnn.concatenate(%ethos-n_46_i0, %602, %603, 0.019251f /* ty=float32 span=model_90/tf.concat_6/concat:0:0 */, -114 /* ty=int32 span=model_90/tf.concat_6/concat:0:0 */, axis=3) /* ty=Tensor[(1, 40, 40, 384), int8] span=model_90/tf.concat_6/concat:0:0 */
}

def @tvmgen_default_ethos_n_main_51(%ethos-n_51_i0: Tensor[(1, 40, 40, 64), int8] /* ty=Tensor[(1, 40, 40, 64), int8] */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_51") -> Tensor[(1, 40, 40, 64), int8] {
  reshape(%ethos-n_51_i0, newshape=[1, 40, 40, 64]) /* ty=Tensor[(1, 40, 40, 64), int8] span=model_90/tf.strided_slice_13/StridedSlice:0:0 */
}

def @tvmgen_default_ethos_n_main_52(%ethos-n_52_i0: Tensor[(1, 40, 40, 64), int8] /* ty=Tensor[(1, 40, 40, 64), int8] */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_52") -> Tensor[(1, 40, 40, 64), int8] {
  reshape(%ethos-n_52_i0, newshape=[1, 40, 40, 64]) /* ty=Tensor[(1, 40, 40, 64), int8] span=model_90/tf.strided_slice_14/StridedSlice:0:0 */
}

def @tvmgen_default_ethos_n_main_53(%ethos-n_53_i0: (Tensor[(1, 40, 40, 64), int8], Tensor[(1, 40, 40, 64), int8], Tensor[(1, 40, 40, 64), int8]) /* ty=(Tensor[(1, 40, 40, 64), int8], Tensor[(1, 40, 40, 64), int8], Tensor[(1, 40, 40, 64), int8]) */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_53") -> Tensor[(1, 40, 40, 192), int8] {
  %604 = (0.0226269f /* ty=float32 span=model_90/tf.concat_7/concat:0:0 */, 0.0226269f /* ty=float32 span=model_90/tf.concat_7/concat:0:0 */, 0.0226269f /* ty=float32 span=model_90/tf.concat_7/concat:0:0 */) /* ty=(float32, float32, float32) span=model_90/tf.concat_7/concat:0:0 */;
  %605 = (-116 /* ty=int32 span=model_90/tf.concat_7/concat:0:0 */, -116 /* ty=int32 span=model_90/tf.concat_7/concat:0:0 */, -116 /* ty=int32 span=model_90/tf.concat_7/concat:0:0 */) /* ty=(int32, int32, int32) span=model_90/tf.concat_7/concat:0:0 */;
  qnn.concatenate(%ethos-n_53_i0, %604, %605, 0.0226269f /* ty=float32 span=model_90/tf.concat_7/concat:0:0 */, -116 /* ty=int32 span=model_90/tf.concat_7/concat:0:0 */, axis=3) /* ty=Tensor[(1, 40, 40, 192), int8] span=model_90/tf.concat_7/concat:0:0 */
}

def @tvmgen_default_ethos_n_main_58(%ethos-n_58_i0: (Tensor[(1, 80, 80, 128), int8], Tensor[(1, 80, 80, 128), int8]) /* ty=(Tensor[(1, 80, 80, 128), int8], Tensor[(1, 80, 80, 128), int8]) */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_58") -> Tensor[(1, 80, 80, 256), int8] {
  %606 = (0.0299939f /* ty=float32 span=model_90/tf.concat_8/concat:0:0 */, 0.0299939f /* ty=float32 span=model_90/tf.concat_8/concat:0:0 */) /* ty=(float32, float32) span=model_90/tf.concat_8/concat:0:0 */;
  %607 = (-119 /* ty=int32 span=model_90/tf.concat_8/concat:0:0 */, -119 /* ty=int32 span=model_90/tf.concat_8/concat:0:0 */) /* ty=(int32, int32) span=model_90/tf.concat_8/concat:0:0 */;
  qnn.concatenate(%ethos-n_58_i0, %606, %607, 0.0299939f /* ty=float32 span=model_90/tf.concat_8/concat:0:0 */, -119 /* ty=int32 span=model_90/tf.concat_8/concat:0:0 */, axis=3) /* ty=Tensor[(1, 80, 80, 256), int8] span=model_90/tf.concat_8/concat:0:0 */
}

def @tvmgen_default_ethos_n_main_63(%ethos-n_63_i0: Tensor[(1, 80, 80, 32), int8] /* ty=Tensor[(1, 80, 80, 32), int8] */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_63") -> Tensor[(1, 80, 80, 32), int8] {
  reshape(%ethos-n_63_i0, newshape=[1, 80, 80, 32]) /* ty=Tensor[(1, 80, 80, 32), int8] span=model_90/tf.strided_slice_15/StridedSlice:0:0 */
}

def @tvmgen_default_ethos_n_main_64(%ethos-n_64_i0: Tensor[(1, 80, 80, 32), int8] /* ty=Tensor[(1, 80, 80, 32), int8] */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_64") -> Tensor[(1, 80, 80, 32), int8] {
  reshape(%ethos-n_64_i0, newshape=[1, 80, 80, 32]) /* ty=Tensor[(1, 80, 80, 32), int8] span=model_90/tf.strided_slice_16/StridedSlice:0:0 */
}

def @tvmgen_default_ethos_n_main_65(%ethos-n_65_i0: (Tensor[(1, 80, 80, 32), int8], Tensor[(1, 80, 80, 32), int8], Tensor[(1, 80, 80, 32), int8]) /* ty=(Tensor[(1, 80, 80, 32), int8], Tensor[(1, 80, 80, 32), int8], Tensor[(1, 80, 80, 32), int8]) */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_65") -> Tensor[(1, 80, 80, 96), int8] {
  %608 = (0.0275721f /* ty=float32 span=model_90/tf.concat_9/concat:0:0 */, 0.0275721f /* ty=float32 span=model_90/tf.concat_9/concat:0:0 */, 0.0275721f /* ty=float32 span=model_90/tf.concat_9/concat:0:0 */) /* ty=(float32, float32, float32) span=model_90/tf.concat_9/concat:0:0 */;
  %609 = (-118 /* ty=int32 span=model_90/tf.concat_9/concat:0:0 */, -118 /* ty=int32 span=model_90/tf.concat_9/concat:0:0 */, -118 /* ty=int32 span=model_90/tf.concat_9/concat:0:0 */) /* ty=(int32, int32, int32) span=model_90/tf.concat_9/concat:0:0 */;
  qnn.concatenate(%ethos-n_65_i0, %608, %609, 0.0275721f /* ty=float32 span=model_90/tf.concat_9/concat:0:0 */, -118 /* ty=int32 span=model_90/tf.concat_9/concat:0:0 */, axis=3) /* ty=Tensor[(1, 80, 80, 96), int8] span=model_90/tf.concat_9/concat:0:0 */
}

def @tvmgen_default_ethos_n_main_7(%ethos-n_7_i0: Tensor[(1, 80, 80, 64), int8] /* ty=Tensor[(1, 80, 80, 64), int8] */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_7") -> Tensor[(1, 80, 80, 64), int8] {
  reshape(%ethos-n_7_i0, newshape=[1, 80, 80, 64]) /* ty=Tensor[(1, 80, 80, 64), int8] span=model_90/tf.strided_slice_2/StridedSlice:0:0 */
}

def @tvmgen_default_ethos_n_main_70(%ethos-n_70_i0: (Tensor[(1, 80, 80, 64), int8], Tensor[(1, 80, 80, 15), int8]) /* ty=(Tensor[(1, 80, 80, 64), int8], Tensor[(1, 80, 80, 15), int8]) */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_70") -> Tensor[(1, 80, 80, 79), int8] {
  %610 = (0.124789f /* ty=float32 span=model_90/tf.concat_11/concat:0:0 */, 0.124789f /* ty=float32 span=model_90/tf.concat_11/concat:0:0 */) /* ty=(float32, float32) span=model_90/tf.concat_11/concat:0:0 */;
  %611 = (16 /* ty=int32 span=model_90/tf.concat_11/concat:0:0 */, 16 /* ty=int32 span=model_90/tf.concat_11/concat:0:0 */) /* ty=(int32, int32) span=model_90/tf.concat_11/concat:0:0 */;
  qnn.concatenate(%ethos-n_70_i0, %610, %611, 0.124789f /* ty=float32 span=model_90/tf.concat_11/concat:0:0 */, 16 /* ty=int32 span=model_90/tf.concat_11/concat:0:0 */, axis=3) /* ty=Tensor[(1, 80, 80, 79), int8] span=model_90/tf.concat_11/concat:0:0 */
}

def @tvmgen_default_ethos_n_main_75(%ethos-n_75_i0: Tensor[(1, 79, 80, 80), int8] /* ty=Tensor[(1, 79, 80, 80), int8] */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_75") -> Tensor[(1, 79, 6400), int8] {
  reshape(%ethos-n_75_i0, newshape=[1, 79, 6400]) /* ty=Tensor[(1, 79, 6400), int8] span=model_90/tf.reshape_57/Reshape:0:0 */
}

def @tvmgen_default_ethos_n_main_76(%ethos-n_76_i0: (Tensor[(1, 40, 40, 64), int8], Tensor[(1, 40, 40, 128), int8]) /* ty=(Tensor[(1, 40, 40, 64), int8], Tensor[(1, 40, 40, 128), int8]) */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_76") -> Tensor[(1, 40, 40, 192), int8] {
  %612 = (0.0200745f /* ty=float32 span=model_90/tf.concat_10/concat:0:0 */, 0.0200745f /* ty=float32 span=model_90/tf.concat_10/concat:0:0 */) /* ty=(float32, float32) span=model_90/tf.concat_10/concat:0:0 */;
  %613 = (-114 /* ty=int32 span=model_90/tf.concat_10/concat:0:0 */, -114 /* ty=int32 span=model_90/tf.concat_10/concat:0:0 */) /* ty=(int32, int32) span=model_90/tf.concat_10/concat:0:0 */;
  qnn.concatenate(%ethos-n_76_i0, %612, %613, 0.0200745f /* ty=float32 span=model_90/tf.concat_10/concat:0:0 */, -114 /* ty=int32 span=model_90/tf.concat_10/concat:0:0 */, axis=3) /* ty=Tensor[(1, 40, 40, 192), int8] span=model_90/tf.concat_10/concat:0:0 */
}

def @tvmgen_default_ethos_n_main_8(%ethos-n_8_i0: Tensor[(1, 80, 80, 64), int8] /* ty=Tensor[(1, 80, 80, 64), int8] */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_8") -> Tensor[(1, 80, 80, 64), int8] {
  reshape(%ethos-n_8_i0, newshape=[1, 80, 80, 64]) /* ty=Tensor[(1, 80, 80, 64), int8] span=model_90/tf.strided_slice_3/StridedSlice:0:0 */
}

def @tvmgen_default_ethos_n_main_81(%ethos-n_81_i0: Tensor[(1, 40, 40, 64), int8] /* ty=Tensor[(1, 40, 40, 64), int8] */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_81") -> Tensor[(1, 40, 40, 64), int8] {
  reshape(%ethos-n_81_i0, newshape=[1, 40, 40, 64]) /* ty=Tensor[(1, 40, 40, 64), int8] span=model_90/tf.strided_slice_17/StridedSlice:0:0 */
}

def @tvmgen_default_ethos_n_main_82(%ethos-n_82_i0: Tensor[(1, 40, 40, 64), int8] /* ty=Tensor[(1, 40, 40, 64), int8] */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_82") -> Tensor[(1, 40, 40, 64), int8] {
  reshape(%ethos-n_82_i0, newshape=[1, 40, 40, 64]) /* ty=Tensor[(1, 40, 40, 64), int8] span=model_90/tf.strided_slice_18/StridedSlice:0:0 */
}

def @tvmgen_default_ethos_n_main_83(%ethos-n_83_i0: (Tensor[(1, 40, 40, 64), int8], Tensor[(1, 40, 40, 64), int8], Tensor[(1, 40, 40, 64), int8]) /* ty=(Tensor[(1, 40, 40, 64), int8], Tensor[(1, 40, 40, 64), int8], Tensor[(1, 40, 40, 64), int8]) */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_83") -> Tensor[(1, 40, 40, 192), int8] {
  %614 = (0.0398441f /* ty=float32 span=model_90/tf.concat_12/concat:0:0 */, 0.0398441f /* ty=float32 span=model_90/tf.concat_12/concat:0:0 */, 0.0398441f /* ty=float32 span=model_90/tf.concat_12/concat:0:0 */) /* ty=(float32, float32, float32) span=model_90/tf.concat_12/concat:0:0 */;
  %615 = (-121 /* ty=int32 span=model_90/tf.concat_12/concat:0:0 */, -121 /* ty=int32 span=model_90/tf.concat_12/concat:0:0 */, -121 /* ty=int32 span=model_90/tf.concat_12/concat:0:0 */) /* ty=(int32, int32, int32) span=model_90/tf.concat_12/concat:0:0 */;
  qnn.concatenate(%ethos-n_83_i0, %614, %615, 0.0398441f /* ty=float32 span=model_90/tf.concat_12/concat:0:0 */, -121 /* ty=int32 span=model_90/tf.concat_12/concat:0:0 */, axis=3) /* ty=Tensor[(1, 40, 40, 192), int8] span=model_90/tf.concat_12/concat:0:0 */
}

def @tvmgen_default_ethos_n_main_88(%ethos-n_88_i0: (Tensor[(1, 40, 40, 64), int8], Tensor[(1, 40, 40, 15), int8]) /* ty=(Tensor[(1, 40, 40, 64), int8], Tensor[(1, 40, 40, 15), int8]) */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_88") -> Tensor[(1, 40, 40, 79), int8] {
  %616 = (0.124789f /* ty=float32 span=model_90/tf.concat_14/concat:0:0 */, 0.124789f /* ty=float32 span=model_90/tf.concat_14/concat:0:0 */) /* ty=(float32, float32) span=model_90/tf.concat_14/concat:0:0 */;
  %617 = (16 /* ty=int32 span=model_90/tf.concat_14/concat:0:0 */, 16 /* ty=int32 span=model_90/tf.concat_14/concat:0:0 */) /* ty=(int32, int32) span=model_90/tf.concat_14/concat:0:0 */;
  qnn.concatenate(%ethos-n_88_i0, %616, %617, 0.124789f /* ty=float32 span=model_90/tf.concat_14/concat:0:0 */, 16 /* ty=int32 span=model_90/tf.concat_14/concat:0:0 */, axis=3) /* ty=Tensor[(1, 40, 40, 79), int8] span=model_90/tf.concat_14/concat:0:0 */
}

def @tvmgen_default_ethos_n_main_9(%ethos-n_9_i0: (Tensor[(1, 80, 80, 64), int8], Tensor[(1, 80, 80, 64), int8], Tensor[(1, 80, 80, 64), int8]) /* ty=(Tensor[(1, 80, 80, 64), int8], Tensor[(1, 80, 80, 64), int8], Tensor[(1, 80, 80, 64), int8]) */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_9") -> Tensor[(1, 80, 80, 192), int8] {
  %618 = (0.043374f /* ty=float32 span=model_90/tf.concat_1/concat:0:0 */, 0.043374f /* ty=float32 span=model_90/tf.concat_1/concat:0:0 */, 0.043374f /* ty=float32 span=model_90/tf.concat_1/concat:0:0 */) /* ty=(float32, float32, float32) span=model_90/tf.concat_1/concat:0:0 */;
  %619 = (-122 /* ty=int32 span=model_90/tf.concat_1/concat:0:0 */, -122 /* ty=int32 span=model_90/tf.concat_1/concat:0:0 */, -122 /* ty=int32 span=model_90/tf.concat_1/concat:0:0 */) /* ty=(int32, int32, int32) span=model_90/tf.concat_1/concat:0:0 */;
  qnn.concatenate(%ethos-n_9_i0, %618, %619, 0.043374f /* ty=float32 span=model_90/tf.concat_1/concat:0:0 */, -122 /* ty=int32 span=model_90/tf.concat_1/concat:0:0 */, axis=3) /* ty=Tensor[(1, 80, 80, 192), int8] span=model_90/tf.concat_1/concat:0:0 */
}

def @tvmgen_default_ethos_n_main_93(%ethos-n_93_i0: Tensor[(1, 79, 40, 40), int8] /* ty=Tensor[(1, 79, 40, 40), int8] */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_93") -> Tensor[(1, 79, 1600), int8] {
  reshape(%ethos-n_93_i0, newshape=[1, 79, 1600]) /* ty=Tensor[(1, 79, 1600), int8] span=model_90/tf.reshape_60/Reshape:0:0 */
}

def @tvmgen_default_ethos_n_main_94(%ethos-n_94_i0: (Tensor[(1, 20, 20, 128), int8], Tensor[(1, 20, 20, 256), int8]) /* ty=(Tensor[(1, 20, 20, 128), int8], Tensor[(1, 20, 20, 256), int8]) */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_94") -> Tensor[(1, 20, 20, 384), int8] {
  %620 = (0.0334442f /* ty=float32 span=model_90/tf.concat_13/concat:0:0 */, 0.0334442f /* ty=float32 span=model_90/tf.concat_13/concat:0:0 */) /* ty=(float32, float32) span=model_90/tf.concat_13/concat:0:0 */;
  %621 = (-120 /* ty=int32 span=model_90/tf.concat_13/concat:0:0 */, -120 /* ty=int32 span=model_90/tf.concat_13/concat:0:0 */) /* ty=(int32, int32) span=model_90/tf.concat_13/concat:0:0 */;
  qnn.concatenate(%ethos-n_94_i0, %620, %621, 0.0334442f /* ty=float32 span=model_90/tf.concat_13/concat:0:0 */, -120 /* ty=int32 span=model_90/tf.concat_13/concat:0:0 */, axis=3) /* ty=Tensor[(1, 20, 20, 384), int8] span=model_90/tf.concat_13/concat:0:0 */
}

def @tvmgen_default_ethos_n_main_99(%ethos-n_99_i0: Tensor[(1, 20, 20, 128), int8] /* ty=Tensor[(1, 20, 20, 128), int8] */, Compiler="ethos-n", Primitive=1, Inline=1, global_symbol="tvmgen_default_ethos_n_main_99") -> Tensor[(1, 20, 20, 128), int8] {
  reshape(%ethos-n_99_i0, newshape=[1, 20, 20, 128]) /* ty=Tensor[(1, 20, 20, 128), int8] span=model_90/tf.strided_slice_19/StridedSlice:0:0 */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */